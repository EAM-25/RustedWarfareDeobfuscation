a.a.a -> com.corrodinggames.rts.gameFramework.net.DatagramBytesReceiver:
    void a(byte[],int) -> onBytesReceived
a.a.a.a -> com.corrodinggames.rts.gameFramework.net.AcknowledgmentPacket:
    java.lang.String a() -> getPacketType
a.a.a.b -> com.corrodinggames.rts.gameFramework.net.DataPacket:
    byte[] a -> payload
    java.lang.String a() -> getPacketType
    int b() -> getLength
    byte[] c() -> getPayloadBytes
    byte[] d() -> toByteArray
a.a.a.c -> com.corrodinggames.rts.gameFramework.net.SelectiveAcknowledgmentPacket:
    int[] a -> selectiveAckSequenceList
    int[] c() -> getSelectiveAckList
a.a.a.d -> com.corrodinggames.rts.gameFramework.net.FinalizationPacket:
    java.lang.String a() -> getPacketType
a.a.a.e -> com.corrodinggames.rts.gameFramework.net.KeepAlivePacket:
    java.lang.String a() -> getPacketType
a.a.a.f -> com.corrodinggames.rts.gameFramework.net.ResetPacket:
    java.lang.String a() -> getPacketType
a.a.a.g -> com.corrodinggames.rts.gameFramework.net.SynchronizationPacket:
    int a -> rudpVersion
    int b -> gameVersion
    int c -> optionFlags
    int d -> maxSegmentSize
    int e -> retransmissionTimeoutMs
    int f -> cumulativeAckTimeoutMs
    int g -> nullPacketTimeoutMs
    int h -> maxRetransmissions
    int i -> maxCumulativeAcks
    int j -> maxOutOfOrderPackets
    int k -> maxAutoResets
    java.lang.String a() -> getType
    void a(byte[],int,int) -> deserializePayload
    int c() -> getGameVersion
    byte[] d() -> serialize
    int e() -> getMaxSegmentSize
    int f() -> getRetransmissionTimeoutMs
    int g() -> getCumulativeAckTimeoutMs
    int h() -> getNullPacketTimeoutMs
    int i() -> getMaxRetransmissions
    int j() -> getMaxCumulativeAcks
    int k() -> getMaxOutOfOrderPackets
    int l() -> getMaxAutoResets
a.a.a.h -> com.corrodinggames.rts.gameFramework.net.NetworkPacket:
    int a -> controlFlags
    int b -> length
    int c -> sequenceNumber
    int d -> acknowledgmentNumber
    int e -> channel
    java.lang.String a() -> getType
    void a(byte[],int,int) -> read
    void a(int) -> setAcknowledgmentNumber
    void a(int,int,int) -> setHeaderFields
    int b() -> getLength
    a.a.a.h b(byte[],int,int) -> decodeHeader
    void b(int) -> setChannel
    byte[] d() -> write
    int m() -> getSequenceNumber
    int n() -> getAcknowledgmentNumber
    int o() -> getChannel
a.a.a.i -> com.corrodinggames.rts.gameFramework.utility.CustomTimerTask:
    boolean a -> started
    java.lang.String b -> name
    java.lang.Runnable c -> task
    long d -> delay
    long e -> period
    boolean f -> cancelled
    boolean g -> scheduled
    boolean h -> paused
    boolean i -> stopped
    java.lang.Object j -> lock
    void a() -> start
    void a(long) -> scheduleAtFixedRate
    void a(long,long) -> schedule
    boolean b() -> isScheduled
    boolean c() -> isNotScheduled
    void d() -> pause
    void e() -> cancel
    void f() -> stop
a.a.b -> com.corrodinggames.rts.gameFramework.net.ReliableServerSocket:
    a.a.c a -> acceptancePolicy
    long b -> lastLogTimeMs
    int c -> logCounter
    java.net.DatagramSocket d -> datagramSocket
    int e -> acceptTimeoutMs
    int f -> acceptQueueSize
    boolean g -> closed
    java.util.ArrayList h -> acceptedConnections
    java.util.HashMap i -> activeConnectionsMap
    java.util.HashMap j -> pendingConnectionsMap
    java.util.HashMap k -> datagramReceiverMap
    a.a.s l -> eventListener
    java.net.DatagramSocket a(a.a.b) -> getDatagramSocket
    void a(a.a.b,java.lang.String) -> logServerMessage
    a.a.e a(a.a.b,java.net.SocketAddress) -> unregisterActiveConnection
    void a(a.a.b,java.net.SocketAddress,a.a.e) -> registerActiveConnection
    void a(a.a.c) -> setAcceptancePolicy
    void a(java.lang.String) -> logServerMessage
    void a(java.net.DatagramSocket,int) -> initializeServer
    a.a.e a(java.net.SocketAddress) -> unregisterActiveConnection
    void a(java.net.SocketAddress,a.a.e) -> registerActiveConnection
    java.util.HashMap b(a.a.b) -> getActiveConnections
    java.util.HashMap c(a.a.b) -> getDatagramReceivers
    java.util.HashMap d(a.a.b) -> getPendingConnections
    java.util.ArrayList e(a.a.b) -> getAcceptedConnectionsQueue
a.a.c -> com.corrodinggames.rts.gameFramework.net.SocketAcceptancePolicy:
    boolean a(java.net.SocketAddress) -> shouldAcceptPeer
a.a.d -> com.corrodinggames.rts.gameFramework.net.ReliableServerSocketThread:
    a.a.b a -> serverSocket
a.a.e -> com.corrodinggames.rts.gameFramework.net.ReliableSocketConnection:
    boolean a -> isInitialized
    a.a.b b -> serverSocket
    java.util.ArrayList i -> incomingPacketQueue
    a.a.a.h a() -> dequeueIncomingPacket
    void a(a.a.a.h) -> enqueueIncomingPacket
    void a(java.lang.String) -> logPortPrefixed
    void a(java.net.DatagramSocket,a.a.r) -> initConnection
    void b() -> clearIncomingPacketQueue
a.a.f -> com.corrodinggames.rts.gameFramework.net.ServerConnectionEventHandler:
    a.a.b a -> serverSocket
    void b(a.a.h) -> onConnectFailed
    void c(a.a.h) -> onClosed
    void d(a.a.h) -> onTimeout
    void e(a.a.h) -> onPacketReceived
a.a.g -> com.corrodinggames.rts.gameFramework.net.PendingConnection:
    long a -> createdAtMs
    a.a.e b -> reliableSocketConnection
a.a.h -> com.corrodinggames.rts.gameFramework.net.Connection:
    byte[] a -> receiveBuffer
    int A -> sendWindow
    boolean b -> closed
    int B -> receiveWindow
    java.net.DatagramSocket c -> datagramSocket
    int C -> sendBufferSize
    java.net.SocketAddress d -> peerAddress
    int D -> receiveBufferSize
    a.a.o e -> inputStream
    a.a.a.i E -> nullSegmentTimer
    a.a.q f -> outputStream
    a.a.a.i F -> retransmissionTimer
    a.a.r g -> socketProfile
    a.a.a.i G -> cumulativeAckTimer
    boolean h -> isCongestionControlEnabled
    a.a.a.i H -> keepAliveTimer
    boolean i -> connected
    boolean I -> DEBUG
    boolean j -> outputFlowControlEnabled
    boolean k -> keepAliveEnabled
    int l -> connectionState
    int m -> soTimeoutMs
    boolean n -> inputShutdown
    boolean o -> outputShutdown
    int p -> previousState
    java.lang.Object q -> closeLock
    java.lang.Object r -> sendLock
    java.util.ArrayList s -> sentPacketsLog
    java.util.ArrayList t -> receivedPacketsLog
    java.util.ArrayList u -> unacknowledgedPackets
    java.util.ArrayList v -> outOfOrderPackets
    java.util.ArrayList w -> acknowledgmentHistory
    java.lang.Object x -> inputLock
    a.a.i y -> connectionStats
    java.lang.Thread z -> packetReaderThread
    void a(byte[],int,int) -> sendDatagramBytes
    void a(byte[],int,int,boolean) -> sendDataBytes
    int a(int) -> accessIncrementSequenceModulo255
    int a(int,int) -> readPacketData
    void a(a.a.a.c) -> log
    void a(a.a.a.g) -> handlePacket
    void a(a.a.a.h) -> sendPacket
    a.a.a.i a(a.a.h) -> getKeepAliveTimer
    void a(a.a.h,a.a.a.c) -> logSelectiveAcknowledgment
    void a(a.a.h,a.a.a.h) -> stopPacketTimers
    void a(a.a.s) -> sendPacket
    void a(java.net.DatagramSocket,a.a.r) -> initializeConnection
    int b(byte[],int,int) -> receiveDatagramBytes
    int b(int) -> incrementSequenceModulo255
    boolean b(a.a.a.h) -> isValidAcknowledgment
    a.a.a.i b(a.a.h) -> getRetransmissionTimer
    void b(a.a.h,a.a.a.h) -> accessCloseImpl
    java.net.SocketAddress c() -> getPeerAddress
    void c(a.a.a.h) -> processPacket
    a.a.a.i c(a.a.h) -> getCumulativeAckTimer
    void c(a.a.h,a.a.a.h) -> startPacketTimers
    void d() -> forceClose
    void d(a.a.a.h) -> handleData
    a.a.a.i d(a.a.h) -> getNullPacketTimer
    void e() -> handleSynPacket
    void e(a.a.a.h) -> closeImpl
    void e(a.a.h) -> processAcknowledgment
    void f() -> startCongestionControlTimers
    void f(a.a.a.h) -> startPacketTimers
    a.a.a.h f(a.a.h) -> dequeueIncomingPacket
    void g() -> stopCongestionControlTimers
    void g(a.a.a.h) -> stopPacketTimers
    java.util.ArrayList g(a.a.h) -> getUnacknowledgedPackets
    boolean getKeepAlive() -> isKeepAliveEnabled
    boolean h() -> isDebugEnabled
    void h(a.a.a.h) -> handleRstPacket
    a.a.i h(a.a.h) -> getConnectionStats
    a.a.a.h i() -> dequeueIncomingPacketAndLog
    void i(a.a.h) -> sendKeepAlive
    void j() -> handleConnectionReset
    void j(a.a.h) -> retransmit
    void k() -> processConnectionRefused
    void l() -> cleanupSession
    void m() -> retransmitPending
    void n() -> notifyReceiveListeners
    void o() -> sendKeepAlivePacket
    void p() -> sendSelectiveAcknowledgment
    void q() -> sendCumulativeAckIfNeeded
    void r() -> processOutOfOrderPackets
a.a.h$1 -> com.corrodinggames.rts.gameFramework.net.Connection$TimersStopThread:
a.a.i -> com.corrodinggames.rts.gameFramework.net.ConnectionStats:
    int a -> nextSequenceToSend
    int b -> lastSequenceReceived
    int c -> sentPacketCount
    int d -> receivedPacketCount
    int e -> droppedPacketCount
    int a() -> nextSequenceToSendAndIncrement
    int a(int) -> setNextSequenceToSend
    int b() -> getLastSequenceReceived
    int b(int) -> setLastSequenceReceived
    void c() -> incrementSentPackets
    int d() -> getSentPacketCount
    int e() -> drainSentPacketCount
    void f() -> incrementReceivedPackets
    int g() -> getReceivedPacketCount
    int h() -> drainReceivedPacketCount
    void i() -> incrementDroppedPackets
    int j() -> getDroppedPacketCount
    int k() -> drainDroppedPacketCount
    void l() -> reset
a.a.j -> com.corrodinggames.rts.gameFramework.net.Connection$HandleNullPacketRunnable:
a.a.k -> com.corrodinggames.rts.gameFramework.net.Connection$HandleExtAckPacketRunnable:
a.a.l -> com.corrodinggames.rts.gameFramework.net.Connection$CloseIfEmptyRunnable:
a.a.m -> com.corrodinggames.rts.gameFramework.net.Connection$PacketReaderThread:
a.a.n -> com.corrodinggames.rts.gameFramework.net.Connection$PacketRetransmissionRunnable:
a.a.o -> com.corrodinggames.rts.gameFramework.net.ConnectionInputStream:
    a.a.h a -> connection
    byte[] b -> readBuffer
    int c -> readOffset
    int d -> bufferedBytes
    int a() -> fillReceiveBuffer
a.a.p -> com.corrodinggames.rts.gameFramework.net.ConnectionListener:
    void a() -> onConnected
    void b() -> onClosed
    void c() -> onPacketReceived
    void d() -> onPacketSent
a.a.q -> com.corrodinggames.rts.gameFramework.net.ConnectionOutputStream:
    a.a.h a -> connection
    byte[] b -> writeBuffer
    int c -> bufferedBytes
a.a.r -> com.corrodinggames.rts.gameFramework.net.ReliableSocketProfile:
    a.a.r a -> DEFAULT_PROFILE
    int b -> maxSendQueueSize
    int c -> maxRecvQueueSize
    int d -> maxSegmentSize
    int e -> maxOutstandingSegments
    int f -> maxRetransmissions
    int g -> maxCumulativeAcks
    int h -> maxOutOfOrder
    int i -> maxAutoResets
    int j -> nullSegmentTimeoutMs
    int k -> retransmissionTimeoutMs
    int l -> cumulativeAckTimeoutMs
    int a() -> getMaxSegmentSize
    void a(int,int,int,int,int,int,int,int,int,int,int) -> initialize
    void a(java.lang.String,int,int,int) -> checkRange
    int b() -> getMaxOutstandingSegments
    int c() -> getMaxRetransmissions
    int d() -> getMaxCumulativeAcks
    int e() -> getMaxOutOfOrder
    int f() -> getMaxAutoResets
    int g() -> getNullSegmentTimeoutMs
    int h() -> getRetransmissionTimeoutMs
    int i() -> getCumulativeAckTimeoutMs
a.a.s -> com.corrodinggames.rts.gameFramework.net.ConnectionEventListener:
    void a(a.a.h) -> onConnected
    void b(a.a.h) -> onConnectFailed
    void c(a.a.h) -> onClosed
    void d(a.a.h) -> onTimedOut
    void e(a.a.h) -> onPacketReceived
android.net.http.a -> android.net.http.AndroidHttpClient$LoggingInterceptor:
    android.net.http.AndroidHttpClient a -> this$0
android.net.http.b -> android.net.http.AndroidHttpClient$LoggingConfiguration:
    java.lang.String a -> tag
    int b -> level
    boolean a() -> isLoggable
    void a(java.lang.String) -> println
android.util.a -> android.util.ArrayUtils:
    boolean[] a -> EMPTY_BOOLEAN_ARRAY
    int[] b -> EMPTY_INT_ARRAY
    long[] c -> EMPTY_LONG_ARRAY
    java.lang.Object[] d -> EMPTY_OBJECT_ARRAY
    int a(int[],int,int) -> binarySearch
com.a.a.a.a -> com.corrodinggames.rts.gameFramework.utility.OptimizedSizes:
    java.lang.Object[] a -> EMPTY_OBJECT_ARRAY
    java.lang.Object[] b -> S_OBJECT_ARRAY
    int a(int) -> growSize
    int b(int) -> growSizeByTwo
    int c(int) -> growSizeByFour
com.corrodinggames.librocket.a -> com.corrodinggames.librocket.GameMainManager:
    com.corrodinggames.librocket.a a -> instance
    com.corrodinggames.librocket.b b -> libRocketManager
    com.corrodinggames.rts.appFramework.f c -> gameView
    boolean e -> isGamePaused
    com.corrodinggames.librocket.a a() -> getInstance
    void a(int,char) -> onKeyDown
    void a(com.corrodinggames.librocket.b,com.corrodinggames.rts.appFramework.f) -> init
    void a(com.corrodinggames.rts.gameFramework.j.ae) -> showPasswordPrompt
    void a(java.lang.String) -> loadGame
    void a(boolean) -> setGamePaused
    void b() -> showMainMenu
    boolean b(java.lang.String) -> openURL
    void b(boolean) -> endGame
    void c() -> setGamePaused2
    void c(boolean) -> showAbout
    void d() -> showSettings
    void d(boolean) -> setMouseGrabbed
    void e() -> showLeaderboard
    void f() -> resumeGame
    void g() -> applyResolution
    void h() -> postUpdate
    int i() -> getModifiers
    boolean j() -> isUIReady
    java.util.LinkedList k() -> getDebugInfo
    void l() -> onUpdate
    void m() -> onRender
    void n() -> onResize
    void o() -> closeBattleroomIfOpen
com.corrodinggames.librocket.b -> com.corrodinggames.librocket.LibRocketManager:
    com.corrodinggames.rts.gameFramework.bt a -> loadResourcesTimer
    java.lang.String b -> basePath
    com.corrodinggames.librocket.scripts.ScriptEngine c -> scriptEngine
    int d -> renderCount
    boolean e -> isHandlingEvent
    android.graphics.Rect f -> scissorRect
    android.graphics.RectF g -> scissorRectF
    java.util.regex.Pattern i -> variablePattern
    com.corrodinggames.librocket.d j -> currentAlert
    com.corrodinggames.librocket.d k -> currentPopup
    void a() -> resetRenderCount
    com.ElementDocument a(com.corrodinggames.librocket.d) -> createAndShowDialog
    void a(com.Element,boolean) -> loadCharsetOnChildren
    boolean a(com.ElementDocument) -> showPopupFromDocument
    void a(com.ElementDocument,java.lang.String,java.lang.Object,java.util.HashMap) -> setupDialogButton
    java.lang.String a(java.lang.String) -> convertTexturePath
    com.ElementDocument a(java.lang.String,java.lang.Object,java.lang.String,boolean) -> createPopupWithRML
    java.util.regex.Matcher a(java.lang.String,java.lang.String) -> match
    void a(java.lang.String,java.lang.String,java.lang.String,com.corrodinggames.librocket.e,com.corrodinggames.librocket.e,boolean) -> showDialogWithActions
    com.ElementDocument a(java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,boolean,boolean) -> showDialogInternal
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> showDialog
    boolean b() -> isGuiVisible
    boolean b(com.corrodinggames.librocket.d) -> showAlert
    boolean b(com.ElementDocument) -> showPopupFromDocument2
    java.lang.Object b(java.lang.String) -> getActiveDocumentMetadata
    void b(java.lang.String,java.lang.String) -> showMessageBox
    com.ElementDocument c() -> getCurrentPopup
    boolean c(com.corrodinggames.librocket.d) -> showPopup
    void c(java.lang.String) -> showMessageBox2
    com.ElementDocument d() -> getCurrentAlert
    java.lang.String d(java.lang.String) -> parseTextVariables
    com.ElementDocument e() -> getTopmostPopup
    com.ElementDocument f() -> getActiveOrPopup
    com.ElementDocument g() -> getTopmostDocument
    boolean h() -> canClosePopupOrAlert
    boolean i() -> closeAlert
    boolean j() -> closePopup
    java.lang.String k() -> getTextInputValue
com.corrodinggames.librocket.c -> com.corrodinggames.librocket.UITextureHolder:
    java.lang.String a -> texturePath
    boolean b -> lazyLoad
    boolean c -> isThumbnail
    boolean d -> noColor
    float e -> alpha
    com.corrodinggames.rts.game.units.as f -> unitType
    com.corrodinggames.librocket.b g -> libRocketManager
    boolean a() -> loadTexture
com.corrodinggames.librocket.d -> com.corrodinggames.librocket.DialogData:
    com.ElementDocument a -> document
    java.lang.String b -> title
    java.lang.String c -> message
    java.lang.String d -> textInputValue
    java.lang.Object e -> button1
    java.lang.Object f -> button2
    boolean g -> isAlert
    boolean h -> showBackButton
    java.lang.Runnable i -> onClose
com.corrodinggames.librocket.e -> com.corrodinggames.librocket.ButtonAction:
    java.lang.String a -> text
    java.lang.Runnable b -> runnable
    boolean c -> closesDialog
com.corrodinggames.rts.a.a -> com.corrodinggames.rts.a.DebugSocketServer:
    java.net.ServerSocket a -> serverSocket
    boolean b -> running
    boolean c -> enabled
    boolean d -> field_d
    java.util.ArrayList e -> scriptsToRun
    boolean a() -> isEnabled
    void a(int,java.lang.String) -> start
    void a(java.lang.String) -> addScriptToRun
    void b() -> runPendingScripts
    java.lang.String b(java.lang.String) -> executeCommand
com.corrodinggames.rts.a.a.a -> com.corrodinggames.rts.a.a.GameLogicTest:
    void a() -> testTiming
com.corrodinggames.rts.a.a.b -> com.corrodinggames.rts.a.a.NetworkSocketsTest:
    void a() -> test
    void b() -> testSocketLoop
com.corrodinggames.rts.a.a.c -> com.corrodinggames.rts.a.a.LogicBooleanTest:
    void a() -> runTests
    void a(com.corrodinggames.rts.game.units.am,java.lang.String) -> setMemory
    void a(com.corrodinggames.rts.game.units.custom.l,java.lang.String) -> defineMemory
    void a(com.corrodinggames.rts.game.units.y,com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean) -> assertLogicBooleanValue
    void a(com.corrodinggames.rts.game.units.y,com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean,float) -> assertLogicBooleanText
    void a(com.corrodinggames.rts.game.units.y,com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean,com.corrodinggames.rts.game.units.am) -> assertLogicBooleanHolder
    void a(com.corrodinggames.rts.game.units.y,com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean,java.lang.String) -> assertLogicBooleanUnit
    void a(java.lang.String) -> assertInvalid
    void a(java.lang.String,boolean) -> defineMemoryWithUnknown
    void b(com.corrodinggames.rts.game.units.am,java.lang.String) -> setMemoryWithLogicBoolean
    void b(com.corrodinggames.rts.game.units.y,com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean) -> parseLogicBooleanWithUnknown
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean b(java.lang.String) -> parseLogicBoolean
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean b(java.lang.String,boolean) -> assertTrue
    void c(com.corrodinggames.rts.game.units.y,com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean) -> assertFalse
    java.lang.String d(com.corrodinggames.rts.game.units.y,com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean) -> getLogicBooleanValue
com.corrodinggames.rts.a.a.d -> com.corrodinggames.rts.a.a.MathTest:
    int a -> dummyValue
    void a() -> runTests
com.corrodinggames.rts.a.a.e -> com.corrodinggames.rts.a.a.UtilityTests:
    int a -> dummyValue
    void a() -> runAllTests
    void a(java.lang.String[],java.lang.String) -> assertStringArrayEquals
    void a(java.lang.String[],java.lang.String,java.lang.String) -> assertStringArrayEquals
    void a(java.lang.String,java.lang.String) -> assertKeyValueEquals
    void a(java.lang.String,java.lang.String,boolean) -> assertVersionComparison
com.corrodinggames.rts.a.a.f -> com.corrodinggames.rts.a.a.PerformanceTests:
    int a -> assertionCounter
    int b -> testCounter
    android.graphics.Rect c -> testRect
    android.graphics.PointF d -> testPointF
    android.graphics.Point e -> testPoint
    void a() -> runPerformanceTests
com.corrodinggames.rts.a.a.g -> com.corrodinggames.rts.a.a.TestData:
    int a -> valueA
    int b -> valueB
    boolean c -> useValueB
    int a() -> getValue
com.corrodinggames.rts.a.a.h -> com.corrodinggames.rts.a.a.TestDataContainer:
    int a -> intValue1
    int b -> intValue2
    long c -> longValue1
    boolean d -> booleanValue
    long e -> longValue2
    long f -> longValue3
    long g -> longValue4
    long h -> longValue5
    long i -> longValue6
    long j -> longValue7
com.corrodinggames.rts.a.a.i -> com.corrodinggames.rts.a.a.VirtualTest:
    int a -> value
    int a() -> getValue
com.corrodinggames.rts.a.a.j -> com.corrodinggames.rts.a.a.VirtualTestChild:
    int c -> value
com.corrodinggames.rts.a.a.k -> com.corrodinggames.rts.a.a.FastNodeQueueTest:
    void a() -> runAllTests
    com.corrodinggames.rts.gameFramework.k.n a(int) -> createTestNode
    void a(com.corrodinggames.rts.gameFramework.k.j) -> runQueueTest
com.corrodinggames.rts.a.a.l -> com.corrodinggames.rts.a.a.Test:
com.corrodinggames.rts.a.a.m -> com.corrodinggames.rts.a.a.UnitReferenceTest:
    void a() -> runUnitReferenceTests
    void a(com.corrodinggames.rts.game.units.y,com.corrodinggames.rts.game.units.custom.logicBooleans.UnitReference) -> getUnitFromReference
    void a(com.corrodinggames.rts.game.units.y,com.corrodinggames.rts.game.units.custom.logicBooleans.UnitReference,com.corrodinggames.rts.game.units.am) -> assertReferenceResolvesTo
    com.corrodinggames.rts.game.units.custom.logicBooleans.UnitReference a(java.lang.String) -> createReference
    void a(java.lang.String,boolean) -> assertCreateError
com.corrodinggames.rts.a.a.n -> com.corrodinggames.rts.a.a.Assert:
    void a() -> runUnitTests
    void a(float,float) -> assertEquals
    void a(int,int) -> assertEquals
    void a(java.lang.Object,java.lang.Object) -> assertEquals
    void a(java.lang.String,java.lang.String) -> assertEquals
    void a(boolean) -> assertTrue
    void b(java.lang.String,java.lang.String) -> assertEqualsDebug
    void b(boolean) -> assertFalse
    void c(java.lang.String,java.lang.String) -> assertEqualsFloat
com.corrodinggames.rts.a.b -> com.corrodinggames.rts.a.DebugSocketConnection:
    java.net.Socket a -> socket
    com.corrodinggames.rts.a.a b -> server
com.corrodinggames.rts.a.c -> com.corrodinggames.rts.a.AbstractCallbackTask:
    java.lang.Object c -> result
com.corrodinggames.rts.appFramework.a -> com.corrodinggames.rts.appFramework.BaseActivity:
com.corrodinggames.rts.appFramework.b -> com.corrodinggames.rts.appFramework.TaskQueueActivity:
com.corrodinggames.rts.appFramework.c -> com.corrodinggames.rts.appFramework.AppFrameworkUtils:
    android.os.Handler a -> handler
    android.content.Context b -> applicationContext
    com.corrodinggames.rts.appFramework.e c -> storageTypeDefault
    com.corrodinggames.rts.appFramework.e d -> storageType
    android.content.Context a() -> getContext
    void a(android.app.Activity) -> setup
    void a(android.app.Activity,int,boolean,java.lang.String,android.net.Uri) -> showSAFDirectoryChooser
    boolean a(android.app.Activity,java.lang.Runnable) -> askForStoragePermission
    boolean a(android.app.Activity,java.lang.Runnable,boolean) -> askForStoragePermission
    void a(android.app.Activity,boolean) -> onActivitySetContentView
    void a(android.app.Activity,boolean,boolean) -> onActivityNewIntent
    void a(android.content.Context) -> setup
    void a(android.content.Intent) -> applySelectMapIntentFlags
    void a(java.lang.Runnable) -> postRunnable
    int a(java.lang.String) -> getNumberOfPlayersInMap
    boolean b(android.app.Activity) -> requestStoragePermission
    boolean b(android.content.Context) -> hasStoragePermission
    java.lang.String b(java.lang.String) -> getMapName
    void c(android.app.Activity) -> setImmersiveMode
    java.lang.String c(java.lang.String) -> getMapThumbnail
    void d(android.app.Activity) -> unsetImmersiveMode
com.corrodinggames.rts.appFramework.d -> com.corrodinggames.rts.appFramework.ActivityObject:
com.corrodinggames.rts.appFramework.e -> com.corrodinggames.rts.appFramework.RenderMethod:
com.corrodinggames.rts.appFramework.f -> com.corrodinggames.rts.appFramework.GameView:
    void a() -> pause
    void a(float,int) -> onDraw
    void a(com.corrodinggames.rts.gameFramework.m.l,boolean) -> unlockCanvasAndPost
    void a(boolean) -> resume
    boolean b() -> isPaused
    void b(float,int) -> onUpdate
    com.corrodinggames.rts.gameFramework.m.l b(boolean) -> lockCanvas
    boolean c() -> isSurfaceViewReady
    com.corrodinggames.rts.gameFramework.m.a d() -> getAudioRenderer
    boolean e() -> isContinuousRendering
    boolean f() -> isRendering
    java.lang.Object g() -> getHolder
    void h() -> onPause
    com.corrodinggames.rts.appFramework.g i() -> getSurfaceHolder
    void j() -> onResume
    com.corrodinggames.rts.appFramework.m k() -> getSettings
    void l() -> onSizeChanged
    void m() -> stopRender
    boolean n() -> hasBeenStarted
com.corrodinggames.rts.appFramework.g -> com.corrodinggames.rts.appFramework.InGameActivity:
    com.corrodinggames.rts.appFramework.f c -> gameView
    android.os.Handler d -> handler
    android.app.ProgressDialog e -> progressDialog
    boolean f -> running
    boolean a(android.view.Menu) -> onCreateOptionsMenu
    void a(boolean) -> showChatDialog
    void b() -> finish
    void c(int) -> selectMenuOption
    void d(int) -> onSelectMenuOption
    void e(java.lang.String) -> showSaveGameDialog
    void f(java.lang.String) -> showExportMapDialog
    void n() -> closeAndRestart
com.corrodinggames.rts.appFramework.h -> com.corrodinggames.rts.appFramework.LoadGameRunnable:
    java.lang.String a -> saveName
com.corrodinggames.rts.appFramework.i -> com.corrodinggames.rts.appFramework.LevelSelectActivity:
    boolean c -> showMapDetails
    java.lang.String d -> selectedMap
    boolean a(java.lang.String,java.lang.String) -> isDemoMap
    void a(java.lang.String,boolean,int,int,boolean,boolean) -> startNewGame
    java.lang.String d(java.lang.String) -> getMapNameFromPath
    java.lang.String e(java.lang.String) -> getMapName
    boolean f(java.lang.String) -> isSkirmishMap
    boolean g(java.lang.String) -> isFromSdCard
com.corrodinggames.rts.appFramework.j -> com.corrodinggames.rts.appFramework.ManageReplaysActivity:
    java.lang.String[] c -> replayFiles
    java.lang.String[] l() -> getReplayFiles
com.corrodinggames.rts.appFramework.k -> com.corrodinggames.rts.appFramework.ReplayComparator:
    java.util.regex.Pattern a -> datePattern
    java.util.Date a(java.lang.String) -> parseDate
com.corrodinggames.rts.appFramework.l -> com.corrodinggames.rts.appFramework.MultiTouchController:
    boolean a -> isSupported
    boolean b -> isMouseSupported
    java.lang.reflect.Method c -> getButtonStateMethod
    java.lang.reflect.Method d -> getPointerCountMethod
    java.lang.reflect.Method e -> findPointerIndexMethod
    java.lang.reflect.Method f -> getPressureMethod
    java.lang.reflect.Method g -> getHistoricalXMethod
    java.lang.reflect.Method h -> getHistoricalYMethod
    java.lang.reflect.Method i -> getHistoricalPressureMethod
    java.lang.reflect.Method j -> getXMethod
    java.lang.reflect.Method k -> getYMethod
    int l -> ACTION_POINTER_UP
    int m -> ACTION_POINTER_INDEX_SHIFT
    float[] n -> xCoords
    float[] o -> yCoords
    float[] p -> pressures
    int[] q -> pointerIds
    int[] r -> pointerIndices
com.corrodinggames.rts.appFramework.m -> com.corrodinggames.rts.appFramework.MultiTouchPointerState:
    int a -> numPointers
    float[] b -> x
    float[] c -> y
    float[] d -> pressure
    int[] e -> pointerIds
    float f -> startX
    float g -> startY
    float h -> startPressure
    float i -> distX
    float j -> distY
    boolean k -> isDown
    boolean l -> isMultiTouch
    boolean m -> wasDown
    int n -> lastNumPointers
    boolean o -> isDragging
    boolean p -> isPinching
    boolean q -> isRotating
    int r -> historyCount
    int a() -> getLastNumPointers
    void a(float,float) -> setStart
    void a(float,float,boolean,int) -> processEvent
    boolean b() -> wasDown
    void c() -> updateState
    float[] d() -> getX
    int[] e() -> getPointerIndices
    float[] f() -> getY
com.corrodinggames.rts.appFramework.n -> com.corrodinggames.rts.appFramework.MultiplayerBattleroomActivity:
    com.corrodinggames.rts.appFramework.n c -> instance
    boolean d -> onCreateFinished
    android.os.Handler e -> uiHandler
    boolean f -> startGamePending
    boolean g -> isActivityOpen
    android.widget.TextView h -> chatLog
    com.corrodinggames.rts.gameFramework.j.ae i -> passwordHandler
    android.app.AlertDialog j -> passwordDialog
    android.os.Handler k -> chatLogUpdateHandler
    java.lang.Runnable l -> updateUIRunnable
    java.lang.Runnable m -> startGameRunnable
    void a(com.corrodinggames.rts.gameFramework.j.ae) -> showPasswordDialog
    void a(java.lang.String,java.lang.String) -> finishActivity
    void d(java.lang.String) -> addMessageToChatLog
    boolean l() -> isActivityOpen
    void m() -> refreshChatLog
    void n() -> refreshChatLogInternal
    void o() -> updateUI
    void p() -> startGame
    void q() -> showTeamStats
    void r() -> setupGame
com.corrodinggames.rts.appFramework.o -> com.corrodinggames.rts.appFramework.TeamStats:
    java.lang.String a -> statName
    int b -> minValue
    int c -> maxValue
    com.corrodinggames.rts.game.n d -> minTeam
    com.corrodinggames.rts.game.n e -> maxTeam
    int f -> minTeamCount
    int g -> maxTeamCount
    boolean a() -> checkForImbalance
    void a(com.corrodinggames.rts.game.n,int) -> addValue
com.corrodinggames.rts.appFramework.p -> com.corrodinggames.rts.appFramework.ServerListActivity:
    com.corrodinggames.rts.appFramework.p c -> instance
    android.os.Handler d -> uiHandler
    java.lang.Runnable e -> updateUIRunnable
    void l() -> refreshUI
    java.util.ArrayList m() -> getServerList
com.corrodinggames.rts.appFramework.q -> com.corrodinggames.rts.appFramework.ReplayBrowserActivity:
    java.lang.String[] c -> replayFiles
    java.lang.String[] l() -> getReplayFiles
com.corrodinggames.rts.appFramework.r -> com.corrodinggames.rts.appFramework.C5271r:
com.corrodinggames.rts.appFramework.s -> com.corrodinggames.rts.appFramework.SelectFolderActivity:
    boolean c -> finishAfterSelect
    boolean d -> isShowing
    int[] e -> delayTimeouts
    com.corrodinggames.rts.appFramework.d f -> activityObject
    void l() -> showFolderChooser
com.corrodinggames.rts.game.a -> com.corrodinggames.rts.game.GameObject:
    int a -> gameObjectId
    boolean b -> active
    boolean c -> removed
    boolean d -> destroyed
com.corrodinggames.rts.game.a.a -> com.corrodinggames.rts.game.a.AITeam:
com.corrodinggames.rts.game.a.a.b -> com.corrodinggames.rts.game.a.a.b:
    com.corrodinggames.rts.game.a.a.b a -> isUnknown
    com.corrodinggames.rts.game.a.a.b b -> isNukingNew
    com.corrodinggames.rts.game.a.a.b[] c -> someField
    com.corrodinggames.rts.game.a.a.a a() -> getA
com.corrodinggames.rts.game.b -> com.corrodinggames.rts.game.Unit:
com.corrodinggames.rts.game.b.b -> com.corrodinggames.rts.game.b.TileMap:
    int C -> tileCountX
    int D -> tileCountY
    boolean E -> fogEnabled
    boolean H -> softFogFadingInitialized
    boolean I -> softFogFadingEnabled
    boolean J -> softFogFadingForced
    com.corrodinggames.rts.gameFramework.m.e K -> fogSmoothAtlasTexture
    com.corrodinggames.rts.gameFramework.m.y L -> fogAtlasRenderer
    byte[][] M -> fogOfWarCurrent
    int n -> tileWorldSizeX
    byte[][] N -> fogOfWarNext
    int o -> tileWorldSizeY
    float r -> tileScaleX
    float s -> tileScaleY
    int T -> cursorTileX
    int U -> cursorTileY
    android.graphics.PointF V -> worldPointBuffer
    void a() -> acquireFogAtlasLock
    int[] a(int[]) -> getByteOrDefault
    void a(int[],int[],boolean,com.corrodinggames.rts.gameFramework.m.e,com.corrodinggames.rts.gameFramework.m.y,com.corrodinggames.rts.gameFramework.m.e) -> blitFogTiles
    void a(int[],int,int,boolean,com.corrodinggames.rts.gameFramework.m.e,com.corrodinggames.rts.gameFramework.m.y,com.corrodinggames.rts.gameFramework.m.e) -> composeFogPattern
    float a(float) -> clampWorldX
    void a(float,float) -> setTileCursorFromTileIndex
    void a(float,float,int,com.corrodinggames.rts.game.n,boolean) -> tileToWorldPoint
    boolean a(float,float,com.corrodinggames.rts.game.n) -> isWorldPointVisibleForTeam
    com.corrodinggames.rts.game.b.j a(int) -> isWorldPointVisibleForTeam
    int[] a(int,int[]) -> enumerateMaskCombinations
    void a(int,int) -> setTileCursorFromWorldPoint
    byte a(int,int,byte[][],byte) -> clampWorldX
    boolean a(int,int,com.corrodinggames.rts.game.n) -> isTileVisibleForTeam
    void a(int,android.graphics.Rect) -> computeFogAtlasTileRect
    void a(int,com.corrodinggames.rts.gameFramework.m.e) -> renderFogAtlasTile
    android.graphics.PointF a(android.graphics.Point) -> tileToWorldPoint
    void a(android.graphics.RectF) -> setTileCursorFromWorldPoint
    short a(com.corrodinggames.rts.game.b.g) -> registerUniqueTile
    com.corrodinggames.rts.game.b.g a(com.corrodinggames.rts.game.b.g,int,int) -> getTileVariant
    void a(com.corrodinggames.rts.game.l) -> setTileCursorFromWorldPoint
    boolean a(com.corrodinggames.rts.game.n,int,int) -> clampWorldX
    java.lang.Integer a(com.corrodinggames.rts.game.units.as) -> isTileVisibleForTeam
    void a(com.corrodinggames.rts.game.units.y,int,int,int,int,int,int,com.corrodinggames.rts.gameFramework.m.y,boolean,int) -> setTileCursorFromTileIndex
    void a(com.corrodinggames.rts.gameFramework.j.as) -> setTileCursorFromWorldPoint
    void a(com.corrodinggames.rts.gameFramework.j.k) -> setTileCursorFromTileIndex
    void a(java.io.InputStream,java.io.OutputStream) -> setTileCursorFromTileIndex
    void a(java.io.InputStream,boolean) -> isWorldPointVisibleForTeam
    long a(java.lang.String) -> isWorldPointVisibleForTeam
    com.corrodinggames.rts.game.b.g a(java.lang.String,int,int) -> setTileCursorFromWorldPoint
    void a(java.lang.String,com.corrodinggames.rts.gameFramework.j.as) -> tileToWorldPoint
    boolean a(java.lang.String,java.lang.String) -> isWorldPointVisibleForTeam
    java.io.InputStream a(java.lang.String,java.lang.String,int) -> tileToWorldPoint
    void a(java.lang.String,boolean) -> clampWorldX
    void a(org.w3c.dom.Document,java.io.OutputStream) -> setTileCursorFromWorldPoint
    com.corrodinggames.rts.game.b.g a(short) -> getUniqueTile
    void b() -> releaseFogAtlasLock
    int[] b(int) -> singletonMask
    void c() -> buildFogSmoothAtlas
    com.corrodinggames.rts.game.b.g c(float,float) -> getTileAtWorldPoint
    boolean c(int,int) -> isInBounds
    void d() -> initSoftFogFading
    com.corrodinggames.rts.game.b.g d(int,int) -> getTileAt
com.corrodinggames.rts.game.c -> com.corrodinggames.rts.game.AIPlayer:
    void a(float) -> update
com.corrodinggames.rts.game.i -> com.corrodinggames.rts.game.GameLogic:
    java.lang.String a -> gameVersionName
    android.graphics.Paint A -> paintA
    java.util.ArrayList aa -> arrayListAA
    java.util.Timer ab -> timerAB
    boolean ac -> booleanAC
    java.lang.Object ad -> objectAD
    int ae -> intAE
    com.corrodinggames.rts.game.units.am af -> baseUnitAF
    com.corrodinggames.rts.game.units.am ag -> baseUnitAG
    float ah -> floatAH
    boolean ai -> booleanAI
    boolean b -> isCheatingEnabled
    com.corrodinggames.rts.gameFramework.bf B -> gameStateData
    boolean c -> isSandboxEnabled
    com.corrodinggames.rts.gameFramework.be C -> gameStateManager
    int d -> someCounter
    com.corrodinggames.rts.gameFramework.d.b D -> cloudRenderer
    float e -> densityScaleMultiplier
    com.corrodinggames.rts.game.a E -> gameObjectE
    java.lang.String f -> safeModeReason
    boolean F -> booleanF
    com.corrodinggames.rts.game.k[] g -> someKArray
    float G -> floatG
    java.lang.String h -> someString
    float H -> floatH
    boolean i -> someBoolean
    float I -> floatI
    int j -> someInteger
    float J -> floatJ
    java.util.concurrent.ConcurrentLinkedQueue k -> concurrentLinkedQueue
    com.corrodinggames.rts.game.j K -> jK
    android.graphics.Paint l -> paintL
    com.corrodinggames.rts.game.j L -> jL
    android.graphics.Paint m -> paintM
    boolean M -> booleanM
    android.graphics.Paint n -> paintN
    com.corrodinggames.rts.gameFramework.m.y N -> graphicsEngine
    android.graphics.Paint o -> paintO
    com.corrodinggames.rts.gameFramework.m.e O -> textureO
    android.graphics.Paint p -> paintP
    com.corrodinggames.rts.gameFramework.m.e P -> textureP
    int q -> intQ
    com.corrodinggames.rts.gameFramework.m.e Q -> textureQ
    int r -> intR
    float R -> floatR
    int s -> intS
    android.graphics.Rect S -> rectS
    float t -> floatT
    android.graphics.RectF T -> rectFT
    java.lang.String u -> stringU
    com.corrodinggames.rts.gameFramework.m.e U -> textureU
    android.graphics.Rect v -> rectV
    com.corrodinggames.rts.gameFramework.m.e V -> textureV
    java.util.ArrayList w -> arrayListW
    com.corrodinggames.rts.gameFramework.utility.s W -> sW
    android.graphics.Paint x -> paintX
    com.corrodinggames.rts.gameFramework.utility.s X -> sX
    android.graphics.Paint y -> paintY
    android.graphics.Matrix Y -> matrixY
    android.graphics.Paint z -> paintZ
    java.util.ArrayList Z -> arrayListZ
    void a(float) -> update
    boolean a(float,float,float,float) -> isAreaVisible
    void a(int,int) -> setScreenSize
    void a(int,int,float) -> handleTouch
    void a(com.corrodinggames.rts.game.j) -> removeGameObject
    com.corrodinggames.rts.game.units.am a(com.corrodinggames.rts.game.n) -> findUnit
    void a(com.corrodinggames.rts.gameFramework.m.l,float) -> draw
    void b(float) -> processFloat
    void b(float,int) -> processEvent
    void b(com.corrodinggames.rts.game.j) -> addGameObject
    void b(com.corrodinggames.rts.gameFramework.m.l,float) -> drawWithLayer
    void b(boolean) -> setSomeStatus
    void c(float) -> handleFloat
    void c(com.corrodinggames.rts.gameFramework.m.l,float) -> drawWithLayer2
    boolean d() -> isSomethingEnabled
    void d(float) -> processFloat2
    void d(com.corrodinggames.rts.gameFramework.m.l,float) -> drawWithLayer3
    void f() -> doSomething
    void h() -> doSomething2
    boolean i() -> isSomethingElseEnabled
    boolean j() -> isAnotherThingEnabled
    void k() -> doAnotherThing
    java.lang.String o() -> getSomeString
    boolean q() -> isSomethingTrue
    void w() -> synchronizedMethod
    com.corrodinggames.rts.game.units.am y() -> getBaseUnitY
com.corrodinggames.rts.game.j -> com.corrodinggames.rts.game.FrameBufferHelper:
com.corrodinggames.rts.game.k -> com.corrodinggames.rts.game.JpegFrameWriterTask:
com.corrodinggames.rts.game.l -> com.corrodinggames.rts.game.ScorchMark:
    int a -> type
    int b -> variant
    int c -> width
    int d -> height
    com.corrodinggames.rts.game.m e -> markType
    int f -> frame
    int g -> status
com.corrodinggames.rts.game.n -> com.corrodinggames.rts.game.PlayerTeam:
    com.corrodinggames.rts.gameFramework.utility.m a -> teamStaticHelper
    java.lang.Integer A -> teamAIBehaviourOverride
    boolean aa -> isTeamAutoStart
    boolean ab -> isTeamAutoStartQueued
    int ac -> teamSortIndex
    int ad -> lastUnitCountCacheTick
    android.graphics.Paint ae -> teamColorPaint
    android.graphics.Paint af -> teamTextPaint
    int[] ag -> teamColorIds
    java.lang.String[] ah -> teamColorNames
    int ai -> lastCustomColorCacheTick
    int aj -> teamColorCount
    com.corrodinggames.rts.game.units.custom.h ak -> teamAnimationSet
    com.corrodinggames.rts.game.units.custom.e.f al -> teamColorEffect
    com.corrodinggames.rts.game.units.custom.e.c am -> teamColorTexture
    float an -> teamColorAlpha
    float ao -> teamColorRed
    float ap -> teamColorGreen
    long aq -> teamColorBlue
    double ar -> teamColorHue
    com.corrodinggames.rts.game.n[] as -> teamColorArray
    boolean at -> teamColorBrightness
    int au -> teamColorHex
    int av -> teamColorPacked
    com.corrodinggames.rts.game.n[] b -> teamInstances
    java.lang.Integer B -> teamAILevelOverride
    int c -> TEAM_NEUTRAL
    java.lang.Integer C -> teamAIControlOverride
    int d -> TEAM_ALL_NEUTRAL
    int D -> teamAIGroupOverride
    int e -> TEAM_ALLIES
    boolean E -> isTeamVictory
    int f -> TEAM_ENEMIES
    boolean F -> isTeamDefeatedTech
    com.corrodinggames.rts.game.n g -> TEAM_NULL
    boolean G -> isTeamWipedOut
    com.corrodinggames.rts.game.n h -> TEAM_UNKNOWN
    boolean H -> isTeamAlliedVictory
    com.corrodinggames.rts.game.n i -> TEAM_ALL
    boolean I -> isTeamConnectionActive
    com.corrodinggames.rts.game.n j -> TEAM_SELF
    boolean J -> isTeamNetworkActive
    int k -> teamId
    java.lang.Object K -> synchronizationLock
    java.lang.String l -> MODDER_CREDITS_WARNING
    int L -> fogOfWarWidth
    boolean m -> isTeamActive
    int M -> fogOfWarHeight
    boolean n -> isTeamControlledByAI
    byte[][] N -> fogOfWarData
    double o -> playerResources
    java.lang.String O -> teamSharedControlType
    double p -> teamEnergy
    java.lang.String P -> teamAIHint
    int q -> teamUnitCount
    int Q -> teamAILevel
    int r -> teamColorId
    int R -> teamAIBaseLevel
    com.corrodinggames.rts.game.units.y s -> teamCommandCenter
    boolean S -> isTeamReady
    com.corrodinggames.rts.game.units.y t -> teamPrimaryUnit
    com.corrodinggames.rts.game.s T -> teamStatistics
    boolean u -> isTeamDefeated
    boolean U -> isTeamObserver
    java.lang.String v -> teamName
    byte V -> teamColorIndex
    boolean w -> isTeamSpectator
    int W -> teamNetworkId
    int x -> teamPingTime
    long X -> teamLastPingTime
    boolean y -> isTeamLocked
    long Y -> teamLastConnectionTime
    java.lang.Integer z -> teamAIDifficultyOverride
    int Z -> teamPingCount
    void a() -> writeTeamDataToStream
    boolean a(double) -> getTeamColorName
    void a(float) -> updateTeam
    java.lang.String a(int) -> updateFogOfWar
    int a(int,boolean) -> updateNetworkTeamData
    int a(com.corrodinggames.rts.game.units.custom.e.a) -> isAllyToTeam
    int a(com.corrodinggames.rts.game.units.custom.g,boolean,boolean) -> canAffordResource
    void a(com.corrodinggames.rts.gameFramework.j.k) -> readFromStream
    void a(com.corrodinggames.rts.gameFramework.j.k,boolean) -> compareToTeam
    com.corrodinggames.rts.gameFramework.m.e[] a(com.corrodinggames.rts.gameFramework.m.e) -> getUnitCountByType
    com.corrodinggames.rts.gameFramework.m.e[] a(com.corrodinggames.rts.gameFramework.m.e,com.corrodinggames.rts.game.o,boolean) -> compareToNew
    com.corrodinggames.rts.game.e a(java.lang.String) -> getTeamById
    java.util.ArrayList a(boolean) -> readTeamDataFromStream
    int a(boolean,boolean) -> addUnitToTeam
    int A() -> getTeamId
    double aa() -> getTeamCreditsDouble
    com.corrodinggames.rts.game.units.custom.e.f ab() -> getTeamColorEffect2
    boolean b() -> addCredits
    int b(int) -> removeCredits
    void b(int,boolean) -> getResourceCost
    void b(com.corrodinggames.rts.gameFramework.j.as) -> writeToStream
    void b(com.corrodinggames.rts.gameFramework.j.k) -> getAlliedTeams
    java.util.ArrayList b(boolean) -> isEnemyToTeam
    boolean B() -> isTeamActiveCheck
    java.util.ArrayList c() -> addEnergy
    void c(float) -> isNeutralToTeam
    int c(int) -> removeUnitFromTeam
    void c(com.corrodinggames.rts.gameFramework.j.as) -> updateTeam
    void c(com.corrodinggames.rts.gameFramework.j.k) -> getActiveTeams
    void c(boolean) -> getResourceAmount
    int C() -> getTeamColorId
    com.corrodinggames.rts.game.n[] d() -> setTeamDefeated
    void d(com.corrodinggames.rts.gameFramework.j.as) -> updateTeam2
    void d(com.corrodinggames.rts.gameFramework.j.k) -> updateTeamStatus
    float D() -> getTeamCreditsFloat
    void e() -> getTeamStatistics
    void e(int) -> updateTeamVictoryStatus
    float E() -> getTeamEnergyFloat
    java.util.ArrayList f() -> getAllTeams
    void f(int) -> setTeamId
    void F() -> staticInitTeamData
    int g() -> getTeamById
    boolean g(int) -> isTeamIndexActive
    int G() -> getActiveTeamCount
    java.lang.String h() -> getTeamColorName
    int H() -> getTeamCount
    void i() -> getTeamColorIdByName
    void I() -> updateTeamActiveStatus
    boolean j() -> getTeamColorNameById
    void J() -> updateTeamConnectionStatus
    boolean k() -> isTeamAlly
    int K() -> getTeamUnitCount
    void l() -> updateTeamAllyStatus
    void L() -> updateAllTeamData
    boolean m() -> isTeamEnemy
    int M() -> getTeamBuildingCount
    void n() -> staticUpdateTeamData
    java.lang.String N() -> getTeamName
    void o() -> staticUpdateTeamData2
    void O() -> updateTeamVictoryStatus
    boolean p() -> isTeamNeutral
    void P() -> updateTeamDefeatStatus
    boolean q() -> isTeamSpectatorCheck
    void Q() -> updateTeamWipeStatus
    boolean r() -> isTeamObserverCheck
    int R() -> getTeamColorIndex
    int s() -> getTeamPing
    int S() -> getTeamNetworkId
    boolean t() -> isTeamDefeatedCheck
    void T() -> updateTeamColor
    int u() -> getTeamCredits
    com.corrodinggames.rts.game.units.custom.h U() -> getTeamAnimationSet
    int v() -> getTeamEnergy
    com.corrodinggames.rts.game.units.custom.e.f V() -> getTeamColorEffect
    int w() -> getTeamUnitCountInt
    void W() -> updateTeamTextures
    int x() -> getTeamBuildingCountInt
    void X() -> staticUpdateAllTeamColors
    java.lang.String y() -> getTeamDisplayName
    void Y() -> staticUpdateTeamColors
    void Z() -> updateTeamPing
com.corrodinggames.rts.game.p -> com.corrodinggames.rts.game.AnimationTagEntry:
com.corrodinggames.rts.game.t -> com.corrodinggames.rts.game.AnimationTagList:
com.corrodinggames.rts.game.units.a -> com.corrodinggames.rts.game.units.AttackMode:
com.corrodinggames.rts.game.units.a.a -> com.corrodinggames.rts.game.units.UnitAction:
com.corrodinggames.rts.game.units.a.b -> com.corrodinggames.rts.game.units.a.ActionFilter:
com.corrodinggames.rts.game.units.a.c -> com.corrodinggames.rts.game.units.a.ActionId:
    com.corrodinggames.rts.game.units.a.c a -> NONE
    java.lang.String b -> id
    java.util.HashMap c -> internMap
    java.lang.String a() -> getId
    boolean a(com.corrodinggames.rts.game.units.a.c) -> fromString
    void a(com.corrodinggames.rts.gameFramework.j.as,com.corrodinggames.rts.game.units.a.c) -> serialize
    com.corrodinggames.rts.game.units.a.c a(com.corrodinggames.rts.gameFramework.j.k) -> deserialize
    com.corrodinggames.rts.game.units.a.c a(java.lang.String) -> isSameInstance
com.corrodinggames.rts.game.units.a.d -> com.corrodinggames.rts.game.units.a.AttackModeAction:
com.corrodinggames.rts.game.units.a.e -> com.corrodinggames.rts.game.units.a.AttackMoveAction:
com.corrodinggames.rts.game.units.a.f -> com.corrodinggames.rts.game.units.a.GuardUnitAction:
com.corrodinggames.rts.game.units.a.g -> com.corrodinggames.rts.game.units.a.WrapperUnitAction:
com.corrodinggames.rts.game.units.a.h -> com.corrodinggames.rts.game.units.a.FilteredUnitAction:
com.corrodinggames.rts.game.units.a.i -> com.corrodinggames.rts.game.units.a.PatrolAction:
com.corrodinggames.rts.game.units.a.j -> com.corrodinggames.rts.game.units.a.PingMapAction:
com.corrodinggames.rts.game.units.a.k -> com.corrodinggames.rts.game.units.a.PingType:
com.corrodinggames.rts.game.units.a.l -> com.corrodinggames.rts.game.units.a.QueueUnitAction:
com.corrodinggames.rts.game.units.a.m -> com.corrodinggames.rts.game.units.a.ReclaimTargetAction:
com.corrodinggames.rts.game.units.a.n -> com.corrodinggames.rts.game.units.a.RepairTargetAction:
com.corrodinggames.rts.game.units.a.o -> com.corrodinggames.rts.game.units.a.SetRallyAction:
com.corrodinggames.rts.game.units.a.p -> com.corrodinggames.rts.game.units.a.CustomUnitToolAction:
com.corrodinggames.rts.game.units.a.q -> com.corrodinggames.rts.game.units.a.TeamChatToolAction:
com.corrodinggames.rts.game.units.a.r -> com.corrodinggames.rts.game.units.a.MapPingToolAction:
com.corrodinggames.rts.game.units.a.s -> com.corrodinggames.rts.game.units.a.AbstractUnitAction:
    com.corrodinggames.rts.game.units.a.c a -> actionId
    com.corrodinggames.rts.game.units.custom.d.b b -> cost
    float g -> sortOrder
    com.corrodinggames.rts.game.units.a.a h -> unitAction
    com.corrodinggames.rts.game.units.a.c i -> NONE_ACTION_ID
    java.lang.String a() -> isLocked
    boolean a(com.corrodinggames.rts.game.units.a.s,com.corrodinggames.rts.game.units.a.s) -> onTargetSelected
    boolean a(com.corrodinggames.rts.game.units.am) -> isTargetingGround
    boolean a(com.corrodinggames.rts.game.units.am,com.corrodinggames.rts.game.n) -> appendTooltip
    void a(com.corrodinggames.rts.game.units.am,com.corrodinggames.rts.game.units.am) -> isPickAction
    void a(com.corrodinggames.rts.game.units.am,com.corrodinggames.rts.gameFramework.f.ae) -> onPurchase
    void a(com.corrodinggames.rts.game.units.am,com.corrodinggames.rts.gameFramework.f.ae,android.graphics.Paint,android.graphics.Paint) -> isWaiting
    boolean a(com.corrodinggames.rts.game.units.am,boolean) -> drawTooltip
    void a(java.lang.String) -> canAfford
    boolean A() -> getDescription
    java.lang.String b() -> getCostForUnit
    boolean b(com.corrodinggames.rts.game.units.a.c) -> getBuildQueueCount
    int b(com.corrodinggames.rts.game.units.am,boolean) -> isActive
    com.corrodinggames.rts.game.units.custom.d.b B() -> getDisplayText
    int c() -> isConfirmed
    boolean c(com.corrodinggames.rts.game.units.a.c) -> isMove
    boolean c(com.corrodinggames.rts.game.units.am,boolean) -> onClicked
    boolean C() -> getCost
    boolean d(com.corrodinggames.rts.game.units.a.c) -> isAvailableForUnit
    java.lang.String d(com.corrodinggames.rts.game.units.am) -> isVisible
    boolean d(com.corrodinggames.rts.game.units.am,boolean) -> getDisplayTextWithQueueCount
    boolean D() -> getDisplayTextForUnit
    void e(com.corrodinggames.rts.game.units.a.c) -> getDescriptionForUnit
    java.lang.String e(com.corrodinggames.rts.game.units.am) -> getProducedUnitType
    com.corrodinggames.rts.game.units.as E() -> getActionType
    com.corrodinggames.rts.game.units.a.t f() -> isAlsoSelected
    void f(com.corrodinggames.rts.game.units.am) -> onConfirmed
    boolean F() -> getDisplayType
    boolean g() -> isHighPriority
    boolean g(com.corrodinggames.rts.game.units.am) -> isNotAvailable
    boolean G() -> isBuildOption
    boolean h() -> getIconForUnit
    com.corrodinggames.rts.gameFramework.m.e h(com.corrodinggames.rts.game.units.am) -> isShowingNotEnoughEnergy
    boolean H() -> isAttack
    boolean h_() -> shouldShowDisplayText
    com.corrodinggames.rts.game.units.as i() -> getUnitType
    com.corrodinggames.rts.game.units.am i(com.corrodinggames.rts.game.units.am) -> isShowingNotEnoughResources
    boolean I() -> getTargetUnit
    com.corrodinggames.rts.gameFramework.m.e j() -> getIconColor
    java.lang.String j(com.corrodinggames.rts.game.units.am) -> getIcon
    int J() -> getNotAvailableReason
    boolean k(com.corrodinggames.rts.game.units.am) -> isSingleUse
    float l() -> getBuildSpeed
    boolean l(com.corrodinggames.rts.game.units.am) -> isTargetingAction
    int m() -> getKeyBinding
    boolean m(com.corrodinggames.rts.game.units.am) -> getEnergyCost
    com.corrodinggames.rts.gameFramework.ad M() -> isPrimary
    float m_() -> getSortOrder
    boolean n(com.corrodinggames.rts.game.units.am) -> isSecondary
    com.corrodinggames.rts.game.units.a.c N() -> getActionId
    boolean n_() -> isQueuable
    boolean o() -> isCancel
    boolean o(com.corrodinggames.rts.game.units.am) -> isAvailableAndVisible
    java.lang.String O() -> getActionIdString
    boolean o_() -> isLockedAndDisabled
    boolean p() -> isInstant
    float p(com.corrodinggames.rts.game.units.am) -> getProgress
    com.corrodinggames.rts.game.units.custom.h P() -> getAnimationSet
    java.util.ArrayList q(com.corrodinggames.rts.game.units.am) -> isPurchase
    boolean Q() -> getOptions
    boolean r(com.corrodinggames.rts.game.units.am) -> isAvailable
    com.corrodinggames.rts.game.units.custom.d.b r_() -> getAdditionalCost
    boolean s() -> isWaitingForTarget
    boolean s(com.corrodinggames.rts.game.units.am) -> shouldShowProgress
    int t() -> getQueueSize
    boolean t(com.corrodinggames.rts.game.units.am) -> shouldShowCount
    boolean u() -> isGuiBlinking
    boolean u(com.corrodinggames.rts.game.units.am) -> isActivated
    android.graphics.Rect v() -> getIconRect
    com.corrodinggames.rts.game.units.custom.a.e v(com.corrodinggames.rts.game.units.am) -> getActionTypeForUnit
    java.lang.String w(com.corrodinggames.rts.game.units.am) -> getDisplayTextForUnitWithQueueCount
    boolean x() -> isRightClickAction
    com.corrodinggames.rts.game.units.as y() -> getAttachedUnitType
    com.corrodinggames.rts.game.units.a.c z() -> getQueueId
com.corrodinggames.rts.game.units.a.t -> com.corrodinggames.rts.game.units.a.ActionDisplayType:
com.corrodinggames.rts.game.units.a.u -> com.corrodinggames.rts.game.units.a.ActionType:
com.corrodinggames.rts.game.units.a.v -> com.corrodinggames.rts.game.units.a.PlaceBuildingAction:
com.corrodinggames.rts.game.units.a.w -> com.corrodinggames.rts.game.units.a.PopupQueueAction:
com.corrodinggames.rts.game.units.a.x -> com.corrodinggames.rts.game.units.a.NoneAction:
com.corrodinggames.rts.game.units.a.y -> com.corrodinggames.rts.game.units.a.UnitInfoAction:
com.corrodinggames.rts.game.units.a.z -> com.corrodinggames.rts.game.units.a.SelectUnitTypeAction:
com.corrodinggames.rts.game.units.aa -> com.corrodinggames.rts.game.units.UnitStatistics:
com.corrodinggames.rts.game.units.ab -> com.corrodinggames.rts.game.units.UnitSize:
com.corrodinggames.rts.game.units.ac -> com.corrodinggames.rts.game.units.NearestUnitFinder:
    float a -> searchPosX
    float b -> searchPosY
    com.corrodinggames.rts.game.units.custom.h c -> animationSetFilter
    float d -> closestDistanceSq
    com.corrodinggames.rts.game.units.am e -> nearestUnit
    boolean f -> checkLineOfSight
    boolean g -> includeNonGroundUnits
com.corrodinggames.rts.game.units.ad -> com.corrodinggames.rts.game.units.UnitStateTracker:
    boolean a -> stateFlag1
    boolean b -> stateFlag2
    boolean c -> stateFlag3
    boolean d -> isReset
    float e -> stateValue1
    float f -> stateValue2
com.corrodinggames.rts.game.units.ae -> com.corrodinggames.rts.game.units.PassiveTargetCallback:
    int a -> callbackCount
    float b -> closestDistanceSq
    boolean c -> checkLineOfSight
    boolean d -> isReady
com.corrodinggames.rts.game.units.af -> com.corrodinggames.rts.game.units.PositionData:
    float a -> posX
    float b -> posY
com.corrodinggames.rts.game.units.ag -> com.corrodinggames.rts.game.units.CommandType:
com.corrodinggames.rts.game.units.ah -> com.corrodinggames.rts.game.units.MultiTargetPassiveCallback:
com.corrodinggames.rts.game.units.ai -> com.corrodinggames.rts.game.units.FireUnit:
com.corrodinggames.rts.game.units.aj -> com.corrodinggames.rts.game.units.FireUnitFinder:
com.corrodinggames.rts.game.units.ak -> com.corrodinggames.rts.game.units.TransportUnitInterface:
com.corrodinggames.rts.game.units.al -> com.corrodinggames.rts.game.units.Tree:
com.corrodinggames.rts.game.units.am -> com.corrodinggames.rts.game.units.BaseUnit:
    int bA -> unitFlags2
    int bB -> unitFlags3
    int bC -> unitFlags4
    boolean bD -> isUnitVisible
    boolean bL -> isUnitHighlighted
    boolean bM -> isActive
    boolean bN -> isUnitSelected
    boolean bO -> isUnitSelectable
    boolean bP -> isUnitTargetable
    com.corrodinggames.rts.game.units.am bQ -> targetUnit
    float br -> unitSize
    com.corrodinggames.rts.game.units.am bR -> attackTargetUnit
    int bs -> unitUniqueId
    float bS -> attackRange
    com.corrodinggames.rts.game.units.am bt -> unitTarget1
    boolean bT -> isAttacking
    com.corrodinggames.rts.game.units.am bu -> unitTarget2
    int bU -> unitAttackCooldown
    com.corrodinggames.rts.game.units.am bv -> unitTarget3
    boolean bV -> isDestroyed
    com.corrodinggames.rts.game.units.custom.logicBooleans.VariableScope bw -> unitVariables
    long bW -> unitCreationTime
    com.corrodinggames.rts.game.units.custom.d.b bx -> unitData1
    com.corrodinggames.rts.game.n bX -> team
    com.corrodinggames.rts.game.units.custom.d.b by -> unitData2
    boolean bY -> isUnitHidden
    int bz -> unitFlags1
    float bZ -> worldX
    float ca -> worldY
    float cA -> unitEnergyMax
    boolean cb -> isMoving
    float cB -> attackDamage
    float cc -> unitVelocityX
    float cC -> unitDamageMultiplier
    float cd -> unitVelocityY
    float cD -> unitDefenseMultiplier
    float ce -> unitDirection
    int cE -> unitLevel
    float cf -> unitRotation
    int cF -> unitExperience
    float cg -> unitRotationSpeed
    boolean cG -> isUnitUpgraded
    float ch -> unitRotationTarget
    int cH -> unitUpgradeLevel
    boolean ci -> isUnitRotating
    boolean cI -> isUnitBuilt
    float cj -> unitSpeed
    float cJ -> unitBuildProgress
    float ck -> unitMaxSpeed
    boolean cK -> isUnitRepairing
    float cl -> unitAcceleration
    com.corrodinggames.rts.game.units.ap[] cL -> movementLevels
    float cm -> unitDeceleration
    boolean cM -> isUnitTransporting
    float cn -> unitMovementAngle
    com.corrodinggames.rts.game.units.am cN -> unitTransportTarget
    boolean co -> isUnitStunned
    com.corrodinggames.rts.game.units.y cO -> parentEntity
    boolean cp -> isUnitParalyzed
    com.corrodinggames.rts.game.units.custom.b.n cP -> attachmentData
    boolean cq -> isUnitInvulnerable
    int cQ -> unitTransportCapacity
    boolean cr -> isUnitUntargetable
    boolean cR -> isUnitFull
    boolean cs -> isUnitDisabled
    int cS -> unitCargoCount
    boolean ct -> isUnitCapturable
    int cT -> unitCargoMax
    float cu -> currentHealth
    int cU -> unitCargoType
    float cv -> maxHealth
    float cV -> unitCargoMass
    float cw -> unitArmor
    float cx -> unitShield
    float cy -> unitShieldMax
    float cz -> unitEnergy
    com.corrodinggames.rts.game.units.an[] dF -> unitEffects
    com.corrodinggames.rts.game.units.custom.e.f dH -> unitCustomEffects
    com.corrodinggames.rts.game.units.custom.c.c dI -> unitCustomComponents
    com.corrodinggames.rts.game.units.custom.d.b dJ -> unitCustomData
    int dl -> unitAnimationFrame
    int dm -> unitAnimationSpeed
    int dn -> unitAnimationType
    float do -> unitAnimationOffset
    float dp -> unitAnimationScale
    float dq -> unitAnimationRotation
    com.corrodinggames.rts.game.units.as dz -> unitType
    void a() -> renderUnit
    void a(float) -> moveToPosition
    void a(float,boolean) -> isValidTarget
    void a(android.graphics.Paint) -> setPosition
    void a(android.graphics.Paint,boolean) -> takeDamage
    boolean a(android.graphics.RectF) -> heal
    void a(com.corrodinggames.rts.game.units.a.s,boolean) -> performUnitAction
    float a(com.corrodinggames.rts.game.units.am,float,com.corrodinggames.rts.game.f) -> setTarget
    com.corrodinggames.rts.game.units.am a(com.corrodinggames.rts.game.units.as) -> findTurretPosition
    void a(com.corrodinggames.rts.gameFramework.j.as) -> deserialize
    void a(com.corrodinggames.rts.gameFramework.j.k) -> update
    boolean a(com.corrodinggames.rts.gameFramework.l) -> searchForEnemyTargets
    com.corrodinggames.rts.gameFramework.m.e a(com.corrodinggames.rts.gameFramework.m.e) -> getUnitTextureSize
    com.corrodinggames.rts.gameFramework.m.e a(com.corrodinggames.rts.gameFramework.m.e,int,int) -> attackUnit
    java.lang.String A(com.corrodinggames.rts.game.units.am) -> serialize
    boolean aj() -> canAttack
    boolean ak() -> canMove
    void b(com.corrodinggames.rts.game.n) -> setUnitTeam
    void b(com.corrodinggames.rts.game.units.a.s,boolean) -> stopMoving
    float b(com.corrodinggames.rts.game.units.am) -> getDistanceToTarget
    float b(com.corrodinggames.rts.game.units.am,float,com.corrodinggames.rts.game.f) -> calculateTurnSpeed
    com.corrodinggames.rts.game.units.am b(com.corrodinggames.rts.game.units.as) -> findAttackDamageSource
    void B(com.corrodinggames.rts.game.units.am) -> getUnitType
    void bC() -> updateUnitMovement
    com.corrodinggames.rts.gameFramework.utility.o bF() -> getGlobalUnitList
    void bH() -> loadAllUnits
    void bL() -> getAttachmentCount
    float bN() -> getMaxHealth
    boolean bT() -> isAlive
    float bV() -> m14562bV
    float bW() -> getUnitTeamData
    boolean bX() -> isUnitAtPositionX
    int bY() -> getTransportedUnitsWeight
    int bZ() -> getMaxTransportWeight
    java.lang.String c() -> getUnitShortName
    boolean c(float) -> getAcceleration
    boolean c(float,float,float) -> checkAttackCooldown
    boolean c(com.corrodinggames.rts.game.units.am,boolean) -> isUnitArmorEffective
    com.corrodinggames.rts.game.units.am c(com.corrodinggames.rts.game.units.as) -> canAttack
    void ca() -> getUnitAISettings
    com.corrodinggames.rts.game.units.custom.e.f cA() -> getUnitRotationData
    void cb() -> getUnitAIMode
    java.lang.String cB() -> getVelocityX
    android.graphics.Rect cc() -> getUnitAITarget
    java.lang.String cC() -> getVelocityY
    android.graphics.Rect cd() -> getVelocityZ
    float cD() -> m14563cD
    android.graphics.Rect ce() -> getUnitAIUpdateTime
    android.graphics.RectF cE() -> getUnitMassBounds
    boolean cf() -> getWeight
    android.graphics.RectF cF() -> getUnitBounds
    boolean cg() -> getUnitAIPriority
    boolean cG() -> isUnitTransportWeight
    void ch() -> updateUnitAI
    boolean cH() -> checkTransportSlots
    void ci() -> getUnitAICondition
    boolean cI() -> isUnitTransportCategory
    void cj() -> getUnitAIConditionTime
    boolean cJ() -> remove
    boolean ck() -> isUnitEnergyCost
    boolean cK() -> isMoving
    boolean cl() -> isUnitBuilding
    int cL() -> isAttacking
    com.corrodinggames.rts.game.units.a.c cm() -> getUnitAIPathfindTime
    com.corrodinggames.rts.game.units.custom.d.b cM() -> getUnitDescription
    float cn() -> getUnitAIPathfindState
    com.corrodinggames.rts.game.units.custom.d.b cN() -> getUnitDisplayName
    boolean co() -> getUnitAIPathfindTarget
    boolean cO() -> isUnitIcon
    com.corrodinggames.rts.game.units.a.c cp() -> getUnitAIPathfindPath
    void cP() -> getUnitCategory
    int cq() -> getUnitAIPathfindDistance
    int cQ() -> getUnitTypeName
    boolean cr() -> getUnitAIPathfindCost
    com.corrodinggames.rts.game.units.custom.h cR() -> getUnitTypeId
    float cs() -> getUnitAIPathfindHeuristic
    int cS() -> getUnitType
    boolean ct() -> getUnitAIPathfindMaxDepth
    boolean cT() -> getUnitVersion
    boolean cu() -> getUnitAIPathfindMaxNodes
    boolean cU() -> getUnitFlags
    boolean cv() -> getUnitAIPathfindTimeout
    boolean cV() -> getUnitState
    int cw() -> getUnitAIPathfindIterations
    boolean cW() -> getUnitStatus
    float cx() -> getUnitAIPathfindMemory
    void cX() -> getUnitAIType
    float cy() -> getUnitResourceGeneration
    android.graphics.PointF cY() -> getUnitAIPosition
    com.corrodinggames.rts.game.units.custom.e.f cz() -> getUnitAIPathfindResult
    float cZ() -> getUnitAIState
    com.corrodinggames.rts.game.units.am d(com.corrodinggames.rts.game.units.as) -> findCollisionSize
    float d(boolean) -> getUnitArmorRating
    float da() -> getUnitAIPathfindStatus
    float db() -> getUnitAIPathfindError
    void dc() -> getUnitAICombatState
    boolean dd() -> getUnitAICombatTarget
    com.corrodinggames.rts.game.units.custom.h de() -> getUnitCombatAnimation
    com.corrodinggames.rts.game.units.custom.e.f df() -> getUnitAICombatRange
    com.corrodinggames.rts.game.units.custom.c.c dg() -> getUnitCombatCooldown
    com.corrodinggames.rts.game.units.custom.h dh() -> getUnitAICombatTimer
    void di() -> updateUnitCombatTimer
    void dj() -> getUnitAICombatStateTime
    void e(float) -> damageUnit
    void e(com.corrodinggames.rts.game.n) -> isSelectable
    com.corrodinggames.rts.game.units.a.s e(com.corrodinggames.rts.game.units.as) -> getUnitAction
    boolean f(float) -> isUnitInRange
    float g() -> getUnitHealthPercent
    com.corrodinggames.rts.game.units.ao h() -> getUnitType
    boolean i() -> isSelectable
    boolean J() -> isUnitVisible
    boolean l() -> m14564l
    android.graphics.PointF m(float) -> calculateMaxAttackRange
    void O(int) -> setUnitLevel
    void P(int) -> setUnitSelected
    boolean Q() -> getAttackRange
    void Q(int) -> setTeam
    int s(com.corrodinggames.rts.game.units.am) -> updateTexture
    boolean s_() -> isBuilding
    boolean t(com.corrodinggames.rts.game.units.am) -> setWidth
    int u(com.corrodinggames.rts.game.units.am) -> setHeight
    int V() -> canMove
    float z(com.corrodinggames.rts.game.units.am) -> calculateUnitSpeed
com.corrodinggames.rts.game.units.an -> com.corrodinggames.rts.game.units.UnitEffectData:
com.corrodinggames.rts.game.units.ao -> com.corrodinggames.rts.game.units.UnitMovementType:
com.corrodinggames.rts.game.units.ap -> com.corrodinggames.rts.game.units.UnitMovementData:
com.corrodinggames.rts.game.units.aq -> com.corrodinggames.rts.game.units.UnitPathFinder:
com.corrodinggames.rts.game.units.ar -> com.corrodinggames.rts.game.units.UnitTypeEnum:
    com.corrodinggames.rts.game.units.a.z aa -> buildAction
    int ab -> buildPriority
    com.corrodinggames.rts.game.units.am a() -> createUnitInstance
    java.util.ArrayList a(int) -> getUnitsByCount
    int a(com.corrodinggames.rts.game.units.am) -> getUnitProperty
    boolean a(com.corrodinggames.rts.game.units.as,float,float,float,float,com.corrodinggames.rts.game.n) -> canPlaceUnit
    void a(com.corrodinggames.rts.game.units.as,float,float,float,float,com.corrodinggames.rts.game.n,float,float,boolean,boolean,int,com.corrodinggames.rts.game.units.am) -> drawUnit
    void a(com.corrodinggames.rts.game.units.as,float,float,float,float,com.corrodinggames.rts.game.n,float,float,boolean,boolean,int,boolean,com.corrodinggames.rts.game.units.am) -> drawUnitWithBoolean
    int a(com.corrodinggames.rts.game.units.y) -> getUnitCountByUnit
    com.corrodinggames.rts.game.units.as a(java.lang.String) -> getUnitTypeByName
    java.lang.String a(java.lang.String,float) -> formatStringWithFloat
    java.lang.String a(java.lang.String,float,java.lang.String) -> formatStringWithFloatAndString
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> formatStringWithThreeStrings
    com.corrodinggames.rts.game.units.as a(java.lang.String,boolean) -> getUnitTypeByNameWithBoolean
    void a(java.util.ArrayList,int) -> addUnitsToList
    com.corrodinggames.rts.game.units.am a(boolean) -> createUnitInstanceWithBoolean
    boolean A() -> createUnit
    void b() -> abstractMethodB
    int b(int) -> getUnitPropertyWithInt
    com.corrodinggames.rts.game.units.custom.d.b B() -> loadResources
    int c() -> canBeBuilt
    int c(int) -> getUpgradeCost
    com.corrodinggames.rts.game.units.a.z d() -> getUnitTypeDescription
    com.corrodinggames.rts.game.units.custom.d.b d(int) -> getUnitTypeDescription
    java.lang.String e() -> getUnitName
    java.lang.String f() -> getUnitDescription
    int g() -> getBuildPoints
    void h() -> onUnitCreated
    java.lang.String i() -> getUnitDescriptionShort
    boolean j() -> isBuilding
    boolean k() -> isMobile
    boolean l() -> isFlying
    boolean m() -> hasTransport
    boolean n() -> isUnselectable
    com.corrodinggames.rts.game.units.ao o() -> getUnitMovementType
    boolean p() -> isLocked
    com.corrodinggames.rts.game.units.custom.be q() -> getCustomUnitMetadata
    void r() -> loadAllUnitTypes
    void s() -> loadUnitTypeImages
    void t() -> loadUnitTypeSounds
    com.corrodinggames.rts.game.units.custom.d.b u() -> getUnitTypeIcon
    java.lang.String v() -> getUnitTypeDescriptionString
    boolean w() -> isGlobalUnit
    com.corrodinggames.rts.game.units.custom.h x() -> getUnitCustomData
    boolean y() -> isExperimental
    com.corrodinggames.rts.gameFramework.m.e z() -> getUnitIconTexture
com.corrodinggames.rts.game.units.ar$1 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass1:
com.corrodinggames.rts.game.units.ar$2 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass2:
com.corrodinggames.rts.game.units.ar$3 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass3:
com.corrodinggames.rts.game.units.ar$4 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass4:
com.corrodinggames.rts.game.units.ar$5 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass5:
com.corrodinggames.rts.game.units.ar$6 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass6:
com.corrodinggames.rts.game.units.ar$7 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass7:
com.corrodinggames.rts.game.units.ar$8 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass8:
com.corrodinggames.rts.game.units.ar$9 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass9:
com.corrodinggames.rts.game.units.ar$10 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass10:
com.corrodinggames.rts.game.units.ar$11 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass11:
com.corrodinggames.rts.game.units.ar$12 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass12:
com.corrodinggames.rts.game.units.ar$13 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass13:
com.corrodinggames.rts.game.units.ar$14 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass14:
com.corrodinggames.rts.game.units.ar$15 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass15:
com.corrodinggames.rts.game.units.ar$16 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass16:
com.corrodinggames.rts.game.units.ar$17 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass17:
com.corrodinggames.rts.game.units.ar$18 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass18:
com.corrodinggames.rts.game.units.ar$19 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass19:
com.corrodinggames.rts.game.units.ar$20 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass20:
com.corrodinggames.rts.game.units.ar$21 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass21:
com.corrodinggames.rts.game.units.ar$22 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass22:
com.corrodinggames.rts.game.units.ar$23 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass23:
com.corrodinggames.rts.game.units.ar$24 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass24:
com.corrodinggames.rts.game.units.ar$25 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass25:
com.corrodinggames.rts.game.units.ar$26 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass26:
com.corrodinggames.rts.game.units.ar$27 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass27:
com.corrodinggames.rts.game.units.ar$28 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass28:
com.corrodinggames.rts.game.units.ar$29 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass29:
com.corrodinggames.rts.game.units.ar$30 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass30:
com.corrodinggames.rts.game.units.ar$31 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass31:
com.corrodinggames.rts.game.units.ar$32 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass32:
com.corrodinggames.rts.game.units.ar$33 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass33:
com.corrodinggames.rts.game.units.ar$34 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass34:
com.corrodinggames.rts.game.units.ar$35 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass35:
com.corrodinggames.rts.game.units.ar$36 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass36:
com.corrodinggames.rts.game.units.ar$37 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass37:
com.corrodinggames.rts.game.units.ar$38 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass38:
com.corrodinggames.rts.game.units.ar$39 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass39:
com.corrodinggames.rts.game.units.ar$40 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass40:
com.corrodinggames.rts.game.units.ar$41 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass41:
com.corrodinggames.rts.game.units.ar$42 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass42:
com.corrodinggames.rts.game.units.ar$43 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass43:
com.corrodinggames.rts.game.units.ar$44 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass44:
com.corrodinggames.rts.game.units.ar$45 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass45:
com.corrodinggames.rts.game.units.ar$46 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass46:
com.corrodinggames.rts.game.units.ar$47 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass47:
com.corrodinggames.rts.game.units.ar$48 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass48:
com.corrodinggames.rts.game.units.ar$50 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass50:
com.corrodinggames.rts.game.units.ar$51 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass51:
com.corrodinggames.rts.game.units.ar$52 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass52:
com.corrodinggames.rts.game.units.ar$53 -> com.corrodinggames.rts.game.units.UnitTypeEnum$AnonymousClass53:
com.corrodinggames.rts.game.units.as -> com.corrodinggames.rts.game.units.IUnitType:
com.corrodinggames.rts.game.units.at -> com.corrodinggames.rts.game.units.UnitContainer:
com.corrodinggames.rts.game.units.au -> com.corrodinggames.rts.game.units.UnitCommand:
    com.corrodinggames.rts.game.units.av a -> commandType
    com.corrodinggames.rts.game.units.as b -> buildUnitType
    com.corrodinggames.rts.game.units.a.c c -> actionId
    int d -> buildQueueSize
    float e -> targetX
    float f -> targetY
    long g -> targetUnitId
    com.corrodinggames.rts.game.units.am h -> targetUnit
    com.corrodinggames.rts.gameFramework.ab i -> transportTarget
    boolean j -> isQueued
    float k -> attackMoveRange
    float l -> patrolRange
    boolean m -> isRepeating
    boolean n -> isForceMove
    com.corrodinggames.rts.game.units.as a() -> getBuildUnitType
    void a(float,float) -> setMoveTarget
    void a(float,float,com.corrodinggames.rts.game.units.as,int) -> setBuildCommand
    void a(com.corrodinggames.rts.game.units.am) -> setAttackTarget
    boolean a(com.corrodinggames.rts.game.units.au) -> isApproximatelySameTarget
    void a(com.corrodinggames.rts.gameFramework.j.as) -> serialize
    void a(com.corrodinggames.rts.gameFramework.j.k) -> deserialize
    int b() -> getBuildQueueSize
    void b(float,float) -> setAttackMoveTarget
    void b(com.corrodinggames.rts.game.units.am) -> setRepairTarget
    boolean b(com.corrodinggames.rts.game.units.au) -> isSameCommand
    void c() -> resolveTargetUnitFromId
    void c(float,float) -> setPatrolPoint
    void c(com.corrodinggames.rts.game.units.am) -> setGuardTarget
    void c(com.corrodinggames.rts.game.units.au) -> copyFrom
    com.corrodinggames.rts.game.units.av d() -> getCommandType
    void d(com.corrodinggames.rts.game.units.am) -> setTouchTargetUnit
    void e() -> resetCommand
    void e(com.corrodinggames.rts.game.units.am) -> setFollowTargetUnit
    boolean f() -> isUnitTargetCommand
    void f(com.corrodinggames.rts.game.units.am) -> setReclaimTargetUnit
    float g() -> getTargetX
    void g(com.corrodinggames.rts.game.units.am) -> setLoadIntoTargetUnit
    float h() -> getTargetY
    void h(com.corrodinggames.rts.game.units.am) -> setLoadUpTargetUnit
    com.corrodinggames.rts.game.units.am i() -> getTargetUnit
    long j() -> getCommandTypeOrdinal
    void k() -> updateTargetUnitIdFromUnit
    com.corrodinggames.rts.game.units.am l() -> getResolvedTargetEntity
com.corrodinggames.rts.game.units.av -> com.corrodinggames.rts.game.units.UnitCommandType:
com.corrodinggames.rts.game.units.b -> com.corrodinggames.rts.game.units.UnitBehaviorType:
com.corrodinggames.rts.game.units.b.a -> com.corrodinggames.rts.game.units.b.AirShip:
com.corrodinggames.rts.game.units.b.b -> com.corrodinggames.rts.game.units.b.AirUnit:
    void a(float) -> updateAirUnitPhysics
    boolean e() -> destroyAirUnit
    com.corrodinggames.rts.game.units.ao h() -> getAirUnitMovementType
    void K() -> loadAirUnitTextures
    com.corrodinggames.rts.gameFramework.m.e v() -> getAirUnitIconTexture
com.corrodinggames.rts.game.units.b.c -> com.corrodinggames.rts.game.units.b.AmphibiousJet:
com.corrodinggames.rts.game.units.b.d -> com.corrodinggames.rts.game.units.b.Dropship:
com.corrodinggames.rts.game.units.b.e -> com.corrodinggames.rts.game.units.b.Gunship:
com.corrodinggames.rts.game.units.b.f -> com.corrodinggames.rts.game.units.b.Helicopter:
com.corrodinggames.rts.game.units.c -> com.corrodinggames.rts.game.units.UnitBase:
com.corrodinggames.rts.game.units.c.a -> com.corrodinggames.rts.game.units.c.Ladybug:
com.corrodinggames.rts.game.units.custom.a -> com.corrodinggames.rts.game.units.custom.CustomUnitData:
    float a -> value
com.corrodinggames.rts.game.units.custom.a.a -> com.corrodinggames.rts.game.units.custom.a.CustomAction:
    boolean a(com.corrodinggames.rts.game.units.custom.j,com.corrodinggames.rts.game.units.a.s,android.graphics.PointF,com.corrodinggames.rts.game.units.am,int) -> doAction
com.corrodinggames.rts.game.units.custom.a.a.a -> com.corrodinggames.rts.game.units.custom.a.a.a:
    com.corrodinggames.rts.game.units.custom.e.a a -> resourceAmount
    double b -> resourceSetValue
    com.corrodinggames.rts.game.units.custom.e.a c -> addResourceAmount
    float d -> resourceMultiplyBy
    com.corrodinggames.rts.game.units.custom.d.c e -> addResourcesWithLogic
    com.corrodinggames.rts.game.units.custom.d.c f -> setResourcesWithLogic
com.corrodinggames.rts.game.units.custom.a.a.b -> com.corrodinggames.rts.game.units.custom.a.a.b:
    boolean a -> clearAllWaypoints
    boolean b -> clearActiveWaypoint
    com.corrodinggames.rts.game.units.av c -> waypointType
    com.corrodinggames.rts.game.units.custom.v d -> waypointUnitType
    boolean e -> prependWaypoint
    com.corrodinggames.rts.game.units.custom.h f -> nearestUnitTagged
    com.corrodinggames.rts.game.q g -> nearestUnitTeam
    float h -> nearestUnitMaxRange
    boolean i -> targetRandomUnit
    com.corrodinggames.rts.game.units.custom.h j -> randomUnitTagged
    com.corrodinggames.rts.game.q k -> randomUnitTeam
    float l -> randomUnitMaxRange
    boolean m -> mapMustBeReachable
    boolean n -> positionFromAction
    android.graphics.PointF o -> positionOffsetFromSelf
    android.graphics.PointF p -> positionRelativeOffsetFromSelf
    android.graphics.PointF q -> positionRandomOffsetFromSelf
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean r -> targetFromReference
    float s -> waypointMaxTime
    com.corrodinggames.rts.game.units.custom.u t -> triggerActionIfFailed
    com.corrodinggames.rts.game.units.custom.u u -> triggerActionIfMatched
com.corrodinggames.rts.game.units.custom.a.a.c -> com.corrodinggames.rts.game.units.custom.a.a.c:
    boolean a -> mapMustBeReachable
    com.corrodinggames.rts.game.units.custom.h b -> unitTags
    float c -> maxRange
    boolean d -> includeNotBuilt
    com.corrodinggames.rts.game.q e -> teamFilter
    boolean f -> collectMultipleUnits
    com.corrodinggames.rts.gameFramework.utility.m g -> collectedUnits
    com.corrodinggames.rts.game.units.am h -> foundUnit
com.corrodinggames.rts.game.units.custom.a.a.d -> com.corrodinggames.rts.game.units.custom.a.a.d:
    boolean a -> finishPlayingLastAnimation
    boolean b -> stopLastAnimation
    com.corrodinggames.rts.game.units.custom.o c -> playAnimation
    com.corrodinggames.rts.game.units.custom.o d -> playAnimationIfNotPlaying
    boolean e -> playAnimationLowPriority
    int f -> animationPriority
    int g -> animationDelay
com.corrodinggames.rts.game.units.custom.a.a.e -> com.corrodinggames.rts.game.units.custom.a.a.e:
    com.corrodinggames.rts.game.units.custom.bp a -> addNewUnits
    java.util.ArrayList b -> onlyOnSlots
    int c -> deleteNumUnits
    boolean d -> disconnect
    boolean e -> unload
    boolean f -> disconnectFromParent
com.corrodinggames.rts.game.units.custom.a.a.f -> com.corrodinggames.rts.game.units.custom.a.a.f:
    com.corrodinggames.rts.game.units.custom.aj a -> showMessageToPlayer
    com.corrodinggames.rts.game.units.custom.aj b -> showMessageToAllPlayers
    com.corrodinggames.rts.game.units.custom.aj c -> showMessageToAllEnemyPlayers
    com.corrodinggames.rts.game.units.custom.aj d -> showQuickWarLogToPlayer
    com.corrodinggames.rts.game.units.custom.aj e -> showQuickWarLogToAllPlayers
    com.corrodinggames.rts.game.units.custom.aj f -> debugMessage
com.corrodinggames.rts.game.units.custom.a.a.g -> com.corrodinggames.rts.game.units.custom.a.a.g:
    com.corrodinggames.rts.game.units.custom.e.a a -> convertResourceFrom
    com.corrodinggames.rts.game.units.custom.e.a b -> convertResourceTo
    double c -> convertResourceMinAmount
    double d -> convertResourceMaxAmount
    float e -> convertResourceMultiplyAmountBy
com.corrodinggames.rts.game.units.custom.a.a.h -> com.corrodinggames.rts.game.units.custom.a.a.h:
    com.corrodinggames.rts.game.units.custom.logicBooleans.VariableScope$CachedWriter a -> setUnitMemory
    boolean b -> swapCustomTarget1And2
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean c -> setCustomTarget1
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean d -> setCustomTarget2
    com.corrodinggames.rts.game.units.custom.logicBooleans.VariableScope$MemoryNames e -> shrinkArrays
com.corrodinggames.rts.game.units.custom.a.a.i -> com.corrodinggames.rts.game.units.custom.a.a.i:
    com.corrodinggames.rts.game.units.custom.logicBooleans.VariableScope$MemoryWriter a -> sendMessageWithData
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean b -> sendMessageTo
    com.corrodinggames.rts.game.units.custom.h c -> sendMessageWithTags
com.corrodinggames.rts.game.units.custom.a.a.j -> com.corrodinggames.rts.game.units.custom.a.a.j:
    boolean a -> deleteSelf
    boolean b -> switchToNeutralTeam
    boolean c -> switchToAggressiveTeam
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean d -> switchToTeam
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean e -> setBodyRotation
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean f -> setHeight
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean g -> teleportTo
    boolean h -> clearAllActionCooldowns
    float i -> addAllActionCooldownsTime
    float j -> addActionCooldownTime
    com.corrodinggames.rts.game.units.custom.u k -> addActionCooldownApplyToActions
    boolean l -> removeAllQueuedItemsWithoutRefund
    boolean m -> refundAllQueuedItems
    float n -> setBuilt
    com.corrodinggames.rts.gameFramework.utility.ai o -> offsetSelfAbsolute
    boolean p -> resetUnitStats
    com.corrodinggames.rts.game.units.custom.logicBooleans.VariableScope$CachedWriter q -> setUnitStats
com.corrodinggames.rts.game.units.custom.a.a.k -> com.corrodinggames.rts.game.units.custom.a.a.k:
    com.corrodinggames.rts.game.units.custom.bp a -> produceUnits
    com.corrodinggames.rts.game.units.custom.bp b -> spawnUnits
com.corrodinggames.rts.game.units.custom.a.a.l -> com.corrodinggames.rts.game.units.custom.a.a.l:
    boolean a -> resetToDefaultTags
    com.corrodinggames.rts.game.units.custom.h b -> temporarilyAddTags
    com.corrodinggames.rts.game.units.custom.h c -> temporarilyRemoveTags
    com.corrodinggames.rts.game.units.custom.h d -> addGlobalTeamTags
    com.corrodinggames.rts.game.units.custom.h e -> removeGlobalTeamTags
com.corrodinggames.rts.game.units.custom.a.a.m -> com.corrodinggames.rts.game.units.custom.a.a.m:
    com.corrodinggames.rts.game.units.custom.d.b a -> takeResources
    boolean b -> takeResources_includeUnitsInTransport
    boolean c -> takeResources_includeParent
    float d -> takeResources_includeUnitsWithinRange
    com.corrodinggames.rts.game.q e -> takeResources_includeUnitsWithinRange_team
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean f -> takeResources_includeReference
    com.corrodinggames.rts.game.units.custom.h g -> takeResources_excludeUnitsWithoutTags
    boolean h -> takeResources_excludeUnitsWithoutAllResources
    com.corrodinggames.rts.game.units.custom.d.b i -> takeResources_excludeUnitsWithTheseResources
    com.corrodinggames.rts.game.units.custom.logicBooleans.UnitReference j -> takeResources_excludeUnitsWithoutCustomTarget1EqualTo
    int k -> takeResources_maxUnits
    com.corrodinggames.rts.game.units.custom.u l -> takeResources_triggerActionIfAnyCollected
    com.corrodinggames.rts.game.units.custom.u m -> takeResources_triggerActionIfNoneCollected
    com.corrodinggames.rts.game.units.custom.u n -> takeResources_triggerActionForEach
    boolean o -> takeResources_saveFirstUnitToCustomTarget1
    boolean p -> takeResources_saveFirstUnitToCustomTarget2
    boolean q -> takeResources_discardCollected
    boolean r -> takeResources_keepResourcesOnTarget
    boolean s -> takeResources_directTransferStoppingAtZero
com.corrodinggames.rts.game.units.custom.a.a.n -> com.corrodinggames.rts.game.units.custom.a.a.n:
    com.corrodinggames.rts.game.units.custom.h a -> tags
    float b -> rangeSq
    boolean c -> includeDead
    com.corrodinggames.rts.game.q d -> teamFilter
    com.corrodinggames.rts.gameFramework.utility.m e -> foundUnits
com.corrodinggames.rts.game.units.custom.a.a.o -> com.corrodinggames.rts.game.units.custom.a.a.o:
    com.corrodinggames.rts.game.units.custom.bp a -> addUnitsIntoTransport
    int b -> deleteNumUnitsFromTransport
    com.corrodinggames.rts.game.units.custom.h c -> deleteNumUnitsFromTransport_onlyWithTags
    boolean d -> startUnloadingTransport
    boolean e -> forceUnloadTransportNow
    int f -> forceUnloadTransportNow_onlyOnSlot
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean g -> transportTargetNow
com.corrodinggames.rts.game.units.custom.a.b -> com.corrodinggames.rts.game.units.custom.a.ActionWithCost:
    com.corrodinggames.rts.game.units.a.a b -> wrappedAction
    com.corrodinggames.rts.game.units.custom.d.b c -> buildCost
    com.corrodinggames.rts.game.units.custom.d.b d -> resourceCost
com.corrodinggames.rts.game.units.custom.a.c -> com.corrodinggames.rts.game.units.custom.a.ConfigurableCustomAction:
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean b -> availableCondition
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean c -> condition1
    com.corrodinggames.rts.game.units.custom.aj d -> action1
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean e -> condition2
    com.corrodinggames.rts.game.units.custom.aj f -> action2
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean g -> condition3
    com.corrodinggames.rts.game.units.custom.aj h -> action3
    boolean i -> alwaysShow
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean j -> guiBlinkingCondition
    com.corrodinggames.rts.game.units.custom.d.b k -> buildCost
    com.corrodinggames.rts.game.units.custom.d.b l -> resourceCost
    com.corrodinggames.rts.game.units.custom.d.b m -> upgradeCost
com.corrodinggames.rts.game.units.custom.a.d -> com.corrodinggames.rts.game.units.custom.a.CustomActionConfig:
    int a -> id
    com.corrodinggames.rts.game.units.custom.aj A -> highlightText
    com.corrodinggames.rts.game.units.custom.bn aa -> animation
    int aA -> texture3
    com.corrodinggames.rts.game.units.custom.u ab -> actionHandler
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean aB -> condition9
    com.corrodinggames.rts.game.units.custom.logicBooleans.UnitReference$UnitReferenceOrUnitType aC -> unitType
    java.lang.Float ad -> delay
    boolean aD -> isUnitType
    com.corrodinggames.rts.game.units.custom.d.b ae -> energyCost
    boolean aE -> isUnitType2
    com.corrodinggames.rts.game.units.custom.d.b af -> energyCost2
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean aF -> condition10
    java.lang.Integer ag -> energyCost3
    android.graphics.PointF ah -> offset
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean aH -> condition11
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean ai -> condition
    boolean aI -> isCondition
    com.corrodinggames.rts.game.units.custom.bh aj -> condition2
    int aJ -> condition12
    int ak -> condition3
    boolean aK -> isCondition2
    com.corrodinggames.rts.game.units.ao al -> condition4
    java.lang.String aL -> condition13
    com.corrodinggames.rts.game.units.custom.b.g am -> condition5
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean an -> condition6
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean ao -> condition7
    com.corrodinggames.rts.game.units.custom.u ap -> actionHandler2
    com.corrodinggames.rts.game.units.custom.u aq -> actionHandler3
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean ar -> condition8
    com.corrodinggames.rts.game.units.custom.z as -> spawnList
    com.corrodinggames.rts.game.units.custom.z at -> spawnList2
    com.corrodinggames.rts.game.units.custom.bl au -> spawnList3
    com.corrodinggames.rts.game.units.custom.bl av -> spawnList4
    com.corrodinggames.rts.game.units.custom.bl aw -> spawnList5
    com.corrodinggames.rts.game.units.custom.bl ax -> spawnList6
    com.corrodinggames.rts.gameFramework.m.e ay -> texture
    com.corrodinggames.rts.gameFramework.m.e az -> texture2
    java.lang.String b -> name
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean B -> highlightColorCondition
    java.lang.String c -> displayName
    com.corrodinggames.rts.game.units.custom.aj C -> highlightColor
    com.corrodinggames.rts.game.units.custom.aj d -> description
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean D -> iconCondition
    com.corrodinggames.rts.game.units.custom.logicBooleans.UnitReference$UnitReferenceOrUnitType e -> targetUnitType
    com.corrodinggames.rts.game.units.custom.aj E -> icon
    com.corrodinggames.rts.game.units.custom.logicBooleans.UnitReference$UnitReferenceOrUnitType f -> sourceUnitType
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean F -> iconColorCondition
    com.corrodinggames.rts.game.units.custom.logicBooleans.UnitReference$UnitReferenceOrUnitType g -> relatedUnitType
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean G -> iconColor
    com.corrodinggames.rts.game.units.custom.bb h -> message
    com.corrodinggames.rts.game.units.custom.v H -> iconUnitType
    com.corrodinggames.rts.game.units.custom.aj i -> requiredUnitType
    com.corrodinggames.rts.game.units.custom.v I -> iconUnitType2
    com.corrodinggames.rts.game.units.a.u j -> queueType
    com.corrodinggames.rts.game.units.custom.v J -> iconUnitType3
    java.lang.String k -> stringId
    boolean K -> isDefaultAction
    com.corrodinggames.rts.game.units.custom.v l -> spawnUnitType
    boolean L -> isDefaultBuildCommand
    com.corrodinggames.rts.game.units.custom.at[] m -> setUnitData
    boolean M -> isDefaultBuildCommand2
    boolean n -> addToBuildQueue
    boolean N -> isQueueUnitCommand
    boolean o -> isBuildAction
    boolean O -> isDefaultBuildCommand3
    float p -> buildTime
    boolean P -> isDefaultBuildCommand4
    com.corrodinggames.rts.game.units.custom.d.b q -> buildCost
    boolean Q -> isDefaultBuildCommand5
    com.corrodinggames.rts.game.units.custom.d.b r -> resourceCost
    com.corrodinggames.rts.game.units.custom.at[] R -> setUnitData2
    com.corrodinggames.rts.game.units.custom.h s -> animationSet
    float S -> cooldownTime
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean t -> displayCondition
    boolean T -> autoRepeat
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean u -> availableCondition
    boolean U -> autoRepeat2
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean v -> enabledCondition
    com.corrodinggames.rts.game.units.custom.o V -> animationReference
    boolean w -> showInBuildMenu
    java.lang.Float W -> animationSpeed
    boolean x -> disableInBuildMenu
    boolean X -> isAnimation
    boolean y -> hideInBuildMenu
    boolean Y -> isAnimation2
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean z -> highlightCondition
    boolean Z -> isAnimation3
com.corrodinggames.rts.game.units.custom.a.e -> com.corrodinggames.rts.game.units.custom.a.ActionType:
com.corrodinggames.rts.game.units.custom.a.f -> com.corrodinggames.rts.game.units.custom.a.BuildType:
com.corrodinggames.rts.game.units.custom.a.g -> com.corrodinggames.rts.game.units.custom.a.C5272g:
com.corrodinggames.rts.game.units.custom.aa -> com.corrodinggames.rts.game.units.custom.FileWatcher:
com.corrodinggames.rts.game.units.custom.ab -> com.corrodinggames.rts.game.units.custom.UnitMismatchException:
com.corrodinggames.rts.game.units.custom.ae -> com.corrodinggames.rts.game.units.custom.CustomEventInfo:
com.corrodinggames.rts.game.units.custom.ag -> com.corrodinggames.rts.game.units.custom.CustomUnitConfigParser:
    void a() -> init
    void a(com.corrodinggames.rts.gameFramework.m.e[]) -> a_texture_array
    void a(int) -> parse
    void a(com.corrodinggames.rts.game.units.custom.l,com.corrodinggames.rts.gameFramework.utility.ab,java.lang.String,java.lang.String,boolean) -> applyUnitChanges
    void a(com.corrodinggames.rts.gameFramework.a.i) -> a_sound
    void a(com.corrodinggames.rts.gameFramework.m.e) -> a_texture
    boolean a(com.corrodinggames.rts.gameFramework.utility.m) -> loadUnitFromFile
    com.corrodinggames.rts.gameFramework.utility.ab a(java.lang.String) -> getEditableCustomUnits
    java.util.ArrayList a(boolean) -> loadUnitFromStream
com.corrodinggames.rts.game.units.custom.aj -> com.corrodinggames.rts.game.units.custom.aj:
    com.corrodinggames.rts.game.units.custom.aj a -> EMPTY_INSTANCE
    com.corrodinggames.rts.game.units.custom.ak[] b -> parsedParts
    com.corrodinggames.rts.game.units.custom.bc[] c -> localizedParts
    java.lang.String d -> cachedString
    int e -> cacheState
    java.lang.String f -> formatString
    java.lang.String g -> errorMessage
    com.corrodinggames.rts.game.units.custom.l h -> customUnitConfig
com.corrodinggames.rts.game.units.custom.aq -> com.corrodinggames.rts.game.units.custom.aq:
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean a -> logicBoolean
com.corrodinggames.rts.game.units.custom.ar -> com.corrodinggames.rts.game.units.custom.ar:
    java.lang.String a -> content
com.corrodinggames.rts.game.units.custom.at -> com.corrodinggames.rts.game.units.custom.CustomUnitDataField:
com.corrodinggames.rts.game.units.custom.b -> com.corrodinggames.rts.game.units.custom.CustomUnitAnimation:
    com.corrodinggames.rts.game.units.custom.z e -> effect
    float f -> offsetX
    float g -> offsetY
    boolean h -> finalized
com.corrodinggames.rts.game.units.custom.bb -> com.corrodinggames.rts.game.units.custom.LocaleString:
com.corrodinggames.rts.game.units.custom.bc -> com.corrodinggames.rts.game.units.custom.bc:
    java.lang.String a -> locale
    java.lang.String b -> text
com.corrodinggames.rts.game.units.custom.bh -> com.corrodinggames.rts.game.units.custom.bh:
    java.lang.String bh -> projectileName
    int bi -> projectileId
    com.corrodinggames.rts.game.units.custom.l bj -> customUnitConfig
com.corrodinggames.rts.game.units.custom.bl -> com.corrodinggames.rts.game.units.custom.bl:
    java.util.ArrayList a -> soundList
    int b -> playIndex
com.corrodinggames.rts.game.units.custom.bm -> com.corrodinggames.rts.game.units.custom.bm:
    com.corrodinggames.rts.gameFramework.a.i a -> sound
    float b -> volume
    com.corrodinggames.rts.game.units.custom.bl c -> parent
com.corrodinggames.rts.game.units.custom.bn -> com.corrodinggames.rts.game.units.custom.bn:
    java.lang.String a -> name
    boolean A -> autoTarget
    float aa -> shootAngle2
    com.corrodinggames.rts.game.units.custom.o aA -> animationReference
    float aB -> shootSpeed5
    java.lang.Boolean ac -> canTargetAir2
    com.corrodinggames.rts.game.units.custom.u aC -> actionHandler
    float ad -> range2
    com.corrodinggames.rts.gameFramework.m.e aD -> texture
    float ae -> minRange2
    com.corrodinggames.rts.gameFramework.m.e[] aE -> textureArray
    float af -> shootDelay2
    com.corrodinggames.rts.gameFramework.m.e aF -> texture2
    float aG -> shootSpeed6
    float aH -> shootAccuracy3
    int aI -> rotationSpeed5
    java.lang.Float aj -> shootSpeed3
    com.corrodinggames.rts.game.units.custom.h aJ -> animationSet4
    com.corrodinggames.rts.game.units.custom.h ak -> animationSet3
    com.corrodinggames.rts.game.units.custom.bn ao -> linkedTurret
    float au -> rotationSpeed3
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean av -> logicCondition3
    float ax -> shootSpeed4
    boolean ay -> canTargetAir3
    int az -> rotationSpeed4
    java.lang.String b -> copyFrom
    boolean c -> turretMultiTargeting
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean C -> logicCondition
    boolean d -> canRotate
    com.corrodinggames.rts.game.units.custom.bl D -> sound
    int e -> rotationSpeed
    com.corrodinggames.rts.game.units.custom.z E -> spawnList
    float f -> range
    com.corrodinggames.rts.game.units.custom.z F -> spawnList2
    float g -> minRange
    java.lang.Integer G -> spawnCount
    float h -> shootDelay
    boolean H -> canSpawn
    boolean I -> canSpawn2
    float j -> shootSpeed
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean J -> spawnLogicCondition
    float k -> shootAccuracy
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean K -> spawnLogicCondition2
    boolean l -> canTargetAir
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean L -> spawnLogicCondition3
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean M -> spawnLogicCondition4
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean N -> spawnLogicCondition5
    com.corrodinggames.rts.game.units.custom.h O -> animationSet
    com.corrodinggames.rts.game.units.custom.h P -> animationSet2
    float t -> shootAngle
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean T -> logicCondition2
    java.lang.Float U -> rotationSpeed2
    com.corrodinggames.rts.game.units.custom.d.b v -> shootEffect
    float X -> shootSpeed2
    com.corrodinggames.rts.game.units.custom.bn y -> parentTurret
    float Y -> shootAccuracy2
    com.corrodinggames.rts.game.units.custom.bn z -> childTurret
com.corrodinggames.rts.game.units.custom.bo -> com.corrodinggames.rts.game.units.custom.bo:
    java.lang.String b -> messageDetail
    java.lang.String c -> filePath
    java.lang.String d -> errorContext
com.corrodinggames.rts.game.units.custom.bp -> com.corrodinggames.rts.game.units.custom.UnitSpawner:
    com.corrodinggames.rts.gameFramework.utility.m a -> spawnQueue
com.corrodinggames.rts.game.units.custom.bq -> com.corrodinggames.rts.game.units.custom.SpawnConfig:
    com.corrodinggames.rts.game.units.custom.v a -> unitType
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean b -> spawnSource
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean c -> copyWaypointsFrom
    int d -> spawnCount
    boolean e -> neutralTeam
    boolean f -> aggressiveTeam
    boolean g -> setToTeamOfLastAttacker
    float h -> spawnChance
    int i -> maxSpawnLimit
    boolean j -> gridAlign
    boolean k -> skipIfOverlapping
    boolean l -> falling
    int m -> techLevel
    boolean n -> alwaysStartDirAtZero
    float o -> offsetX
    float p -> offsetY
    float q -> offsetHeight
    float r -> offsetDir
    float s -> offsetRandomX
    float t -> offsetRandomY
    float u -> offsetRandomDir
    com.corrodinggames.rts.game.units.custom.d.b v -> addResources
    short w -> transportedUnitsToTransfer
com.corrodinggames.rts.game.units.custom.c -> com.corrodinggames.rts.game.units.custom.CustomUnitAnimationSet:
    com.corrodinggames.rts.game.units.custom.d a -> animationType
    int b -> animationId
    java.lang.String c -> animationName
    float d -> maxTime
com.corrodinggames.rts.game.units.custom.d -> com.corrodinggames.rts.game.units.custom.CustomUnitAnimationType:
com.corrodinggames.rts.game.units.custom.e -> com.corrodinggames.rts.game.units.custom.CustomUnitAnimationController:
    com.corrodinggames.rts.game.units.custom.f a -> currentAnimation
    float b -> currentTime
    float c -> previousTime
    float d -> speedMultiplier
    boolean e -> animationPlaying
    boolean f -> forceLoop
    boolean g -> forceVisible
    boolean h -> forceInvisible
    boolean i -> animationActive
    int j -> animationId
    float k -> fadeMultiplier
    float l -> fadeSpeed
    com.corrodinggames.rts.game.units.custom.j m -> unitInstance
    float[] n -> baseBlendValues
com.corrodinggames.rts.game.units.custom.f -> com.corrodinggames.rts.game.units.custom.AnimationConfig:
    java.lang.String a -> animationName
com.corrodinggames.rts.game.units.custom.g -> com.corrodinggames.rts.game.units.custom.AnimationTag:
    java.lang.String a -> tagName
com.corrodinggames.rts.game.units.custom.h -> com.corrodinggames.rts.game.units.custom.AnimationSet:
com.corrodinggames.rts.game.units.custom.i -> com.corrodinggames.rts.game.units.custom.CustomUnitAnimationTags:
    com.corrodinggames.rts.gameFramework.utility.m a -> activeTags
com.corrodinggames.rts.game.units.custom.j -> com.corrodinggames.rts.game.units.custom.CustomUnit:
    int a -> animationFrameIndex
    com.corrodinggames.rts.game.units.custom.at[] A -> attachmentPoints
    com.corrodinggames.rts.game.units.custom.e b -> animationController
    com.corrodinggames.rts.gameFramework.utility.m B -> transportedUnits
    float c -> currentFrameTime
    float d -> frameAnimationSpeed
    com.corrodinggames.rts.game.units.d.k dL -> unitEffectManager
    com.corrodinggames.rts.game.units.custom.b.i[] dT -> legInstances
    float e -> frameAnimationTimer
    com.corrodinggames.rts.game.units.custom.h ed -> currentActionHandler
    float f -> frameAnimationDelay
    boolean g -> frameAnimationLooping
    boolean h -> frameAnimationPlaying
    boolean i -> frameAnimationReverse
    float j -> unknownFloat1
    boolean k -> unknownBoolean1
    boolean l -> unknownBoolean2
    float m -> unknownFloat2
    boolean n -> isUnloading
    com.corrodinggames.rts.game.units.custom.l x -> unitConfig
    void a(float,boolean) -> isValidAttackTarget
    boolean a(com.corrodinggames.rts.game.units.am,boolean,boolean) -> canAttackTargetUnit
    float A(int) -> updateCustomUnit
    android.graphics.Rect a_(boolean) -> getUnitBounds
    boolean ac() -> isUnitAttacking
    boolean ae() -> isUnitDefensive
    boolean ag() -> isUnitStealth
    boolean ah() -> isUnitFlying
    boolean aj() -> canUnitAttack
    boolean al() -> isUnitRepairable
    float am() -> getUnitElevation
    float aM() -> getUnitHitPoints
    boolean an() -> isUnitOnGround
    android.graphics.Paint aN() -> getUnitPaint
    android.graphics.PointF aP() -> getUnitPosition
    boolean aR() -> isUnitSelected
    boolean aS() -> isUnitVisible
    int aT() -> mo14565aT
    float aU() -> getUnitRotation
    boolean aV() -> isUnitAlive
    float aZ() -> getUnitMaxSpeed
    android.graphics.PointF[] b() -> getTargetPriority
    float B() -> getEffectPitch
    float B(int) -> drawCustomUnit
    float ba() -> getUnitScale
    boolean bA() -> isTransportUnloading
    int bB() -> getLoadedUnitCount
    float bc() -> getUnitAnimationSpeed
    float bd() -> getUnitAnimationTime
    com.corrodinggames.rts.game.units.custom.d.b bD() -> getUnitConfig
    com.corrodinggames.rts.game.units.b be() -> getUnitBehaviorType
    boolean bf() -> isUnitBuilder
    boolean bg() -> isUnitExtractor
    boolean bi() -> isUnitGenerator
    boolean bj() -> isUnitConverter
    boolean bJ() -> isUnitDisabled
    boolean bm() -> isUnitUpgraded
    boolean bO() -> isUnitStunned
    int bp() -> getUnitUpgradeLevel
    boolean bP() -> isUnitSilenced
    void bq() -> resetUnitState
    void bu() -> updateUnitEffects
    boolean bU() -> isUnitInvulnerable
    void bv() -> updateUnitAnimation
    com.corrodinggames.rts.game.units.custom.d.b by() -> getUnitDisplayConfig
    float c(com.corrodinggames.rts.game.units.am) -> getUnitDistanceToTarget
    float C(int) -> getUnitWidth
    void C(com.corrodinggames.rts.game.units.am) -> loadTransportedUnit
    boolean c_() -> isUnitCloaked
    boolean d(com.corrodinggames.rts.game.units.am,boolean) -> getUnitHeight
    com.corrodinggames.rts.gameFramework.utility.ai D(int) -> getAttackRange
    void D(com.corrodinggames.rts.game.units.am) -> unloadTransportedUnit
    boolean E() -> spawnUnitFromTransport
    void E(com.corrodinggames.rts.game.units.am) -> getAttackDamage
    android.graphics.PointF[] e_() -> isUnitHidden
    com.corrodinggames.rts.gameFramework.utility.ai F(int) -> updateTransportAnimation
    android.graphics.PointF G(int) -> canTransportUnitType
    boolean G(com.corrodinggames.rts.game.units.am) -> getUnitArmor
    boolean H(com.corrodinggames.rts.game.units.am) -> getTransportedUnitCount
    boolean I() -> isTransportFull
    float J(int) -> getTransportSlotCount
    void K() -> getMaxTransportedUnits
    void L() -> getTransportedUnits
    float L(int) -> getUnitMass
    void M() -> getLoadedUnits
    com.corrodinggames.rts.gameFramework.m.e T() -> getTransportUnloadPosition
    void U() -> getTransportLoadPosition
    int V() -> getUnitMovementType
com.corrodinggames.rts.game.units.custom.k -> com.corrodinggames.rts.game.units.custom.CustomUnitEventData:
    com.corrodinggames.rts.game.units.custom.ae a -> eventInfo
    com.corrodinggames.rts.game.units.custom.j b -> customUnit
    com.corrodinggames.rts.game.units.am c -> unit
    com.corrodinggames.rts.game.units.custom.h d -> animationSet
    com.corrodinggames.rts.game.units.custom.logicBooleans.VariableScope e -> variableScope
com.corrodinggames.rts.game.units.custom.l -> com.corrodinggames.rts.game.units.custom.CustomUnitConfig:
    boolean A -> f127830A
    boolean aa -> alsoUseTurretImageForOtherSide
    com.corrodinggames.rts.gameFramework.utility.m aA -> energyCanTransferToOtherUnits
    boolean ab -> turretMultiTargeting
    boolean aB -> maxTransportingUnits
    com.corrodinggames.rts.game.o ac -> baseDamage
    com.corrodinggames.rts.game.units.custom.bb aC -> internalName
    com.corrodinggames.rts.gameFramework.m.e ad -> baseTexture
    com.corrodinggames.rts.game.units.custom.bb aD -> displayName
    boolean ae -> hp
    java.lang.String aE -> baseClassName
    int af -> maxHp
    boolean aF -> transportUnitsKillOnDeath
    int ag -> mass
    float aG -> transportUnitsHealBy
    int ah -> maxMass
    boolean aH -> transportUnitsCanUnloadUnits
    int ai -> techLevel
    boolean aI -> transportUnitsCanLoadUnits
    float aj -> armour
    boolean aJ -> transportUnitsCanLoadUnitWithTags
    boolean ak -> armourMinDamageToKeep
    boolean aK -> transportUnitsUnloadRight
    com.corrodinggames.rts.gameFramework.m.e al -> disableCustomShields
    float aL -> transportUnitsUnloadLeft
    boolean am -> shield
    boolean aM -> transportUnitsUnloadAndGiveOrder
    com.corrodinggames.rts.gameFramework.m.e an -> maxShield
    boolean aN -> transportSlotsNeeded
    com.corrodinggames.rts.gameFramework.m.e ao -> shieldRegen
    boolean aO -> transportSwitchToSlots
    com.corrodinggames.rts.gameFramework.m.e ap -> shieldRegenMoving
    boolean aP -> addResources
    boolean aq -> shieldDisplayOnlyDeflection
    boolean aQ -> f127766aQ
    com.corrodinggames.rts.gameFramework.m.e[] ar -> startShieldAtZero
    boolean aR -> f127767aR
    com.corrodinggames.rts.gameFramework.m.e[] as -> energy
    com.corrodinggames.rts.game.units.custom.h aS -> f127768aS
    com.corrodinggames.rts.gameFramework.m.e[] at -> maxEnergy
    boolean aT -> f127769aT
    com.corrodinggames.rts.gameFramework.m.e au -> energyRegen
    boolean aU -> f127770aU
    boolean av -> energyRegenWhenRecharging
    boolean aV -> f127771aV
    com.corrodinggames.rts.gameFramework.m.e aw -> energyNeedsToRechargeToFull
    boolean aW -> f127772aW
    com.corrodinggames.rts.game.units.custom.ba[] ax -> energyDisplayName
    int aX -> f127831aX
    boolean ay -> energyStartPercentage
    boolean aY -> isLand
    boolean az -> energyCanBeRecievedFromInAnotherUnit
    int aZ -> isExperimental
    com.corrodinggames.rts.game.units.custom.l b -> instance
    boolean B -> isHover
    boolean ba -> isBuilding
    int bA -> canAttackLand
    float bb -> fogOfWarSightRange
    int bB -> canAttackUnderwater
    float bc -> fogOfWarSightRangeWhileNotBuilt
    com.corrodinggames.rts.game.units.custom.bp bC -> canAttackNotTouchingWater
    float bd -> useBuildingSmoke
    boolean bD -> targetGround
    float be -> buildingToFootprintOffsetX
    boolean bE -> targetAir
    float bf -> buildingToFootprintOffsetY
    boolean bF -> targetBuildings
    boolean bg -> isFactory
    boolean bG -> targetProjectiles
    float bh -> isExtractor
    float bH -> targetOwnTeam
    boolean bi -> isTurret
    float bI -> targetNeutralTeam
    boolean bj -> isConstructionBox
    boolean bJ -> targetAllyTeam
    boolean bk -> canNotBeGivenOrdersByPlayer
    boolean bK -> targetEnemyTeam
    boolean bl -> canNotBeDirectlyAttacked
    boolean bL -> targetGroundOnlyLast
    int bm -> footprint
    boolean bM -> canAttackCondition
    boolean bn -> displayFootprint
    boolean bN -> canAttackWhileGarrisoned
    float bo -> constructionPylon
    com.corrodinggames.rts.game.units.custom.z bO -> canBeAttacked
    float bp -> pylonRadius
    com.corrodinggames.rts.game.units.custom.z bP -> isSelectable
    int bq -> pylonRequiresPower
    boolean bQ -> showOnMinimap
    boolean br -> pylonBuildWith
    float bR -> showOnMinimapToEnemies
    boolean bs -> pylonBuildWithOr
    boolean bS -> showActionsAndWaypoints
    com.corrodinggames.rts.game.units.ab bt -> radius
    float bT -> showOnHpHover
    boolean bu -> softRadius
    com.corrodinggames.rts.game.units.custom.z bU -> showInEditor
    boolean bv -> canRepair
    com.corrodinggames.rts.game.units.custom.z bV -> stayNeutral
    com.corrodinggames.rts.game.units.custom.z bw -> canGuard
    boolean bW -> createNeutral
    com.corrodinggames.rts.game.units.custom.z bx -> canPatrol
    float bX -> createOnAggressiveTeam
    com.corrodinggames.rts.game.units.custom.z by -> canAttack
    com.corrodinggames.rts.game.units.custom.z bY -> createOnNeutralTeam
    com.corrodinggames.rts.game.units.custom.bl bz -> canAttackFlying
    com.corrodinggames.rts.game.units.custom.z bZ -> createOnSameTeamAsParent
    android.graphics.Rect C -> tech
    float ca -> startInAggressiveTeam
    boolean cA -> canBeBuiltByOrTagsAndLogicOrTags
    com.corrodinggames.rts.game.units.custom.s cb -> startInNeutralTeam
    boolean cB -> canBeBuiltByOrTagsAndLogicAndTags
    boolean cc -> canBeBuiltBy
    boolean cC -> canBeBuiltByAndTagsAndLogicOrTags
    boolean cd -> canBeBuiltByUnit
    boolean cD -> canBeBuiltByAndTagsAndLogicAndTags
    boolean ce -> canBeBuiltByFactory
    boolean cE -> canBeBuiltByOrTagsOrLogicOrTags
    boolean cf -> canBeBuiltByBuilding
    float cF -> canBeBuiltByOrTagsOrLogicAndTags
    boolean cg -> canBeBuiltByAir
    int cG -> canBeBuiltByAndTagsOrLogicOrTags
    com.corrodinggames.rts.game.units.custom.d.b ch -> canBeBuiltByLand
    com.corrodinggames.rts.game.units.custom.h cH -> canBeBuiltByAndTagsOrLogicAndTags
    com.corrodinggames.rts.game.units.custom.d.b ci -> generation_resources
    int cI -> canBeBuiltByOrTagsAndLogicOrTagsAndLogic
    com.corrodinggames.rts.game.units.custom.d.b cj -> canBeBuiltByExperimental
    float cJ -> canBeBuiltByOrTagsAndLogicOrTagsOrLogic
    float ck -> canBeBuiltByBio
    float cK -> canBeBuiltByOrTagsAndLogicAndTagsAndLogic
    int cl -> canBeBuiltByTurret
    com.corrodinggames.rts.game.units.custom.as cL -> canBeBuiltByOrTagsAndLogicAndTagsOrLogic
    boolean cm -> canBeBuiltByExtractor
    boolean cM -> canBeBuiltByAndTagsAndLogicOrTagsAndLogic
    boolean cn -> canBeBuiltByBuilder
    float cN -> canBeBuiltByAndTagsAndLogicOrTagsOrLogic
    com.corrodinggames.rts.game.units.custom.d.b co -> canBeBuiltByCommander
    boolean cO -> canBeBuiltByAndTagsAndLogicAndTagsAndLogic
    com.corrodinggames.rts.game.units.custom.e.f cp -> canBeBuiltByCondition
    float cP -> canBeBuiltByAndTagsAndLogicAndTagsOrLogic
    com.corrodinggames.rts.game.units.custom.e.f cq -> canBeBuiltByTags
    float cQ -> canBeBuiltByOrTagsOrLogicOrTagsAndLogic
    int cr -> canBeBuiltByNotTags
    boolean cR -> canBeBuiltByOrTagsOrLogicOrTagsOrLogic
    float cs -> canBeBuiltByOrTags
    float cS -> canBeBuiltByOrTagsOrLogicAndTagsAndLogic
    com.corrodinggames.rts.game.units.custom.logicBooleans.VariableScope$CachedWriter ct -> canBeBuiltByAndTags
    com.corrodinggames.rts.game.units.custom.bb cT -> canBeBuiltByOrTagsOrLogicAndTagsOrLogic
    float cu -> canBeBuiltByOrLogic
    boolean cU -> canBeBuiltByAndTagsOrLogicOrTagsAndLogic
    com.corrodinggames.rts.game.units.custom.d.b cv -> canBeBuiltByAndLogic
    float cV -> canBeBuiltByAndTagsOrLogicOrTagsOrLogic
    com.corrodinggames.rts.game.units.custom.d.b cw -> canBeBuiltByOrTagsAndLogic
    int cW -> canBeBuiltByAndTagsOrLogicAndTagsAndLogic
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean cx -> canBeBuiltByOrTagsOrLogic
    android.graphics.Rect cX -> canBeBuiltByAndTagsOrLogicAndTagsOrLogic
    boolean cy -> canBeBuiltByAndTagsAndLogic
    android.graphics.Rect cY -> canBeBuiltByOrTagsAndLogicOrTagsAndLogicOrTags
    boolean cz -> canBeBuiltByAndTagsOrLogic
    android.graphics.Rect cZ -> canBeBuiltByOrTagsAndLogicOrTagsAndLogicAndTags
    java.lang.String D -> configPath
    float da -> canBeBuiltByOrTagsAndLogicOrTagsOrLogicOrTags
    com.corrodinggames.rts.game.units.custom.f dA -> canBeBuiltByAndTagsOrLogicAndTagsAndLogicOrTags
    float db -> canBeBuiltByOrTagsAndLogicOrTagsOrLogicAndTags
    boolean dB -> canBeBuiltByAndTagsOrLogicAndTagsAndLogicAndTags
    boolean dc -> canBeBuiltByOrTagsAndLogicAndTagsAndLogicOrTags
    boolean dC -> canBeBuiltByAndTagsOrLogicAndTagsOrLogicOrTags
    int dd -> canBeBuiltByOrTagsAndLogicAndTagsAndLogicAndTags
    boolean dD -> canBeBuiltByAndTagsOrLogicAndTagsOrLogicAndTags
    float de -> canBeBuiltByOrTagsAndLogicAndTagsOrLogicOrTags
    boolean dE -> canBeBuiltByOrTagsOrLogicOrTagsAndLogicOrTagsAndLogic
    int df -> canBeBuiltByOrTagsAndLogicAndTagsOrLogicAndTags
    com.corrodinggames.rts.game.units.custom.bn dF -> canBeBuiltByOrTagsOrLogicOrTagsAndLogicOrTagsOrLogic
    int dg -> canBeBuiltByAndTagsAndLogicOrTagsAndLogicOrTags
    int dG -> canBeBuiltByOrTagsOrLogicOrTagsAndLogicAndTagsAndLogic
    int dh -> canBeBuiltByAndTagsAndLogicOrTagsAndLogicAndTags
    float dH -> canBeBuiltByOrTagsOrLogicOrTagsAndLogicAndTagsOrLogic
    float di -> canBeBuiltByAndTagsAndLogicOrTagsOrLogicOrTags
    com.corrodinggames.rts.game.units.custom.m dI -> canBeBuiltByOrTagsOrLogicOrTagsOrLogicOrTagsAndLogic
    float dj -> canBeBuiltByAndTagsAndLogicOrTagsOrLogicAndTags
    float dJ -> canBeBuiltByOrTagsOrLogicOrTagsOrLogicOrTagsOrLogic
    java.lang.Float dk -> canBeBuiltByAndTagsAndLogicAndTagsAndLogicOrTags
    java.lang.Boolean dK -> canBeBuiltByOrTagsOrLogicOrTagsOrLogicAndTagsAndLogic
    float dl -> canBeBuiltByAndTagsAndLogicAndTagsAndLogicAndTags
    boolean dL -> canBeBuiltByOrTagsOrLogicOrTagsOrLogicAndTagsOrLogic
    boolean dm -> canBeBuiltByAndTagsAndLogicAndTagsOrLogicOrTags
    float dM -> canBeBuiltByOrTagsOrLogicAndTagsAndLogicOrTagsAndLogic
    java.lang.Float dn -> canBeBuiltByAndTagsAndLogicAndTagsOrLogicAndTags
    float dN -> canBeBuiltByOrTagsOrLogicAndTagsAndLogicOrTagsOrLogic
    float dO -> canBeBuiltByOrTagsOrLogicAndTagsAndLogicAndTagsAndLogic
    com.corrodinggames.rts.game.units.custom.bl dp -> canBeBuiltByOrTagsOrLogicOrTagsAndLogicAndTags
    boolean dP -> canBeBuiltByOrTagsOrLogicAndTagsAndLogicAndTagsOrLogic
    com.corrodinggames.rts.game.units.custom.bl dq -> canBeBuiltByOrTagsOrLogicOrTagsOrLogicOrTags
    boolean dQ -> canBeBuiltByOrTagsOrLogicAndTagsOrLogicOrTagsAndLogic
    com.corrodinggames.rts.gameFramework.utility.m dr -> canBeBuiltByOrTagsOrLogicOrTagsOrLogicAndTags
    boolean dR -> canBeBuiltByOrTagsOrLogicAndTagsOrLogicOrTagsOrLogic
    com.corrodinggames.rts.game.units.custom.f ds -> canBeBuiltByOrTagsOrLogicAndTagsAndLogicOrTags
    float dS -> canBeBuiltByOrTagsOrLogicAndTagsOrLogicAndTagsAndLogic
    com.corrodinggames.rts.game.units.custom.f dt -> canBeBuiltByOrTagsOrLogicAndTagsAndLogicAndTags
    float dT -> canBeBuiltByOrTagsOrLogicAndTagsOrLogicAndTagsOrLogic
    com.corrodinggames.rts.game.units.custom.f du -> canBeBuiltByOrTagsOrLogicAndTagsOrLogicOrTags
    float dU -> canBeBuiltByAndTagsOrLogicOrTagsAndLogicOrTagsAndLogic
    com.corrodinggames.rts.game.units.custom.f dv -> canBeBuiltByOrTagsOrLogicAndTagsOrLogicAndTags
    float dV -> canBeBuiltByAndTagsOrLogicOrTagsAndLogicOrTagsOrLogic
    com.corrodinggames.rts.game.units.custom.f dw -> canBeBuiltByAndTagsOrLogicOrTagsAndLogicOrTags
    float dW -> canBeBuiltByAndTagsOrLogicOrTagsAndLogicAndTagsAndLogic
    com.corrodinggames.rts.game.units.custom.f dx -> canBeBuiltByAndTagsOrLogicOrTagsAndLogicAndTags
    boolean dX -> canBeBuiltByAndTagsOrLogicOrTagsAndLogicAndTagsOrLogic
    com.corrodinggames.rts.game.units.custom.f dy -> canBeBuiltByAndTagsOrLogicOrTagsOrLogicOrTags
    boolean dY -> canBeBuiltByAndTagsOrLogicOrTagsOrLogicOrTagsAndLogic
    com.corrodinggames.rts.game.units.custom.f dz -> canBeBuiltByAndTagsOrLogicOrTagsOrLogicAndTags
    int dZ -> canBeBuiltByAndTagsOrLogicOrTagsOrLogicOrTagsOrLogic
    java.lang.String E -> generation_delay
    float ea -> canBeBuiltByAndTagsOrLogicOrTagsOrLogicAndTagsAndLogic
    boolean eA -> canBeBuiltByOrTagsOrLogicAndTagsAndLogicOrTagsAndLogicOrTags
    float eb -> canBeBuiltByAndTagsOrLogicOrTagsOrLogicAndTagsOrLogic
    int eB -> canBeBuiltByOrTagsOrLogicAndTagsAndLogicOrTagsAndLogicAndTags
    com.corrodinggames.rts.game.units.b ec -> canBeBuiltByAndTagsOrLogicAndTagsAndLogicOrTagsAndLogic
    boolean eC -> canBeBuiltByOrTagsOrLogicAndTagsAndLogicOrTagsOrLogicOrTags
    float ed -> canBeBuiltByAndTagsOrLogicAndTagsAndLogicOrTagsOrLogic
    boolean eD -> canBeBuiltByOrTagsOrLogicAndTagsAndLogicOrTagsOrLogicAndTags
    float ee -> canBeBuiltByAndTagsOrLogicAndTagsAndLogicAndTagsAndLogic
    boolean eE -> canBeBuiltByOrTagsOrLogicAndTagsAndLogicAndTagsAndLogicOrTags
    boolean ef -> canBeBuiltByAndTagsOrLogicAndTagsAndLogicAndTagsOrLogic
    boolean eF -> canBeBuiltByOrTagsOrLogicAndTagsAndLogicAndTagsAndLogicAndTags
    boolean eg -> canBeBuiltByAndTagsOrLogicAndTagsOrLogicOrTagsAndLogic
    float eG -> canBeBuiltByOrTagsOrLogicAndTagsAndLogicAndTagsOrLogicOrTags
    boolean eh -> canBeBuiltByAndTagsOrLogicAndTagsOrLogicOrTagsOrLogic
    boolean eH -> canBeBuiltByOrTagsOrLogicAndTagsAndLogicAndTagsOrLogicAndTags
    boolean ei -> canBeBuiltByAndTagsOrLogicAndTagsOrLogicAndTagsAndLogic
    boolean eI -> canBeBuiltByOrTagsOrLogicAndTagsOrLogicOrTagsAndLogicAndTags
    float ej -> canBeBuiltByAndTagsOrLogicAndTagsOrLogicAndTagsOrLogic
    boolean eJ -> f127832eJ
    float ek -> canBeBuiltByOrTagsOrLogicOrTagsAndLogicOrTagsAndLogicOrTags
    boolean eK -> f127833eK
    float el -> canBeBuiltByOrTagsOrLogicOrTagsAndLogicOrTagsAndLogicAndTags
    boolean eL -> f127834eL
    int em -> canBeBuiltByOrTagsOrLogicOrTagsAndLogicOrTagsOrLogicOrTags
    int eM -> f127835eM
    int en -> canBeBuiltByOrTagsOrLogicOrTagsAndLogicOrTagsOrLogicAndTags
    float eN -> canBeBuiltByOrTagsOrLogicAndTagsOrLogicOrTagsOrLogicAndTags
    float eo -> canBeBuiltByOrTagsOrLogicOrTagsAndLogicAndTagsAndLogicOrTags
    boolean eO -> canBeBuiltByOrTagsOrLogicAndTagsOrLogicAndTagsAndLogicOrTags
    boolean ep -> canBeBuiltByOrTagsOrLogicOrTagsAndLogicAndTagsAndLogicAndTags
    com.corrodinggames.rts.game.units.custom.h eP -> canBeBuiltByOrTagsOrLogicAndTagsOrLogicAndTagsAndLogicAndTags
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean eq -> canBeBuiltByOrTagsOrLogicOrTagsAndLogicAndTagsOrLogicOrTags
    com.corrodinggames.rts.gameFramework.utility.m eQ -> f127836eQ
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean er -> canBeBuiltByOrTagsOrLogicOrTagsAndLogicAndTagsOrLogicAndTags
    boolean eR -> canBeBuiltByOrTagsOrLogicAndTagsOrLogicAndTagsOrLogicAndTags
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean es -> canBeBuiltByOrTagsOrLogicOrTagsOrLogicOrTagsAndLogicOrTags
    boolean eS -> canBeBuiltByOrTagsOrLogicAndTagsOrLogicOrTagsAndLogicOrTags
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean et -> canBeBuiltByOrTagsOrLogicOrTagsOrLogicOrTagsAndLogicAndTags
    boolean eT -> canBeBuiltByOrTagsOrLogicAndTagsOrLogicOrTagsOrLogicOrTags
    boolean eu -> canBeBuiltByOrTagsOrLogicOrTagsOrLogicOrTagsOrLogicOrTags
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean eU -> f127773eU
    com.corrodinggames.rts.game.units.custom.h ev -> canBeBuiltByOrTagsOrLogicOrTagsOrLogicOrTagsOrLogicAndTags
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean eV -> f127774eV
    com.corrodinggames.rts.game.units.custom.h ew -> canBeBuiltByOrTagsOrLogicOrTagsOrLogicAndTagsAndLogicOrTags
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean eW -> f127775eW
    boolean ex -> canBeBuiltByOrTagsOrLogicOrTagsOrLogicAndTagsAndLogicAndTags
    boolean eX -> f127776eX
    boolean ey -> canBeBuiltByOrTagsOrLogicOrTagsOrLogicAndTagsOrLogicOrTags
    float eY -> f127777eY
    float ez -> canBeBuiltByOrTagsOrLogicOrTagsOrLogicAndTagsOrLogicAndTags
    int eZ -> f127837eZ
    java.lang.String F -> generation_free_in_sandbox
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean fa -> f127826fa
    int fA -> f127800fA
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean fb -> f127827fb
    float fB -> f127801fB
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean fc -> f127778fc
    float fC -> f127802fC
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean fd -> f127779fd
    float fD -> f127803fD
    boolean fe -> f127838fe
    int fE -> f127804fE
    com.corrodinggames.rts.game.units.custom.be ff -> f127780ff
    int fF -> f127805fF
    com.corrodinggames.rts.game.units.ao fg -> canBeBuiltByOrTagsOrLogicAndTagsOrLogicAndTagsOrLogicOrTags
    boolean fG -> f127806fG
    com.corrodinggames.rts.game.units.ao fh -> f127781fh
    com.corrodinggames.rts.game.units.custom.h fH -> f127807fH
    boolean fi -> f127782fi
    java.lang.String fI -> f127808fI
    boolean fj -> f127783fj
    boolean fJ -> f127809fJ
    boolean fk -> f127784fk
    float fK -> f127839fK
    com.corrodinggames.rts.game.units.custom.h fl -> f127785fl
    com.corrodinggames.rts.gameFramework.utility.m fL -> f127840fL
    int fm -> f127786fm
    boolean fM -> f127810fM
    com.corrodinggames.rts.game.units.custom.h fn -> f127787fn
    boolean fN -> f127811fN
    com.corrodinggames.rts.game.units.custom.h fo -> f127788fo
    com.corrodinggames.rts.game.units.custom.h fO -> f127812fO
    boolean fp -> f127789fp
    boolean fP -> f127813fP
    boolean fq -> f127790fq
    com.corrodinggames.rts.game.units.custom.bn[] fQ -> f127841fQ
    boolean fr -> f127791fr
    com.corrodinggames.rts.game.units.custom.bh[] fR -> f127814fR
    boolean fs -> f127792fs
    java.util.ArrayList fS -> f127842fS
    boolean ft -> f127793ft
    java.util.ArrayList fT -> f127843fT
    boolean fu -> f127794fu
    boolean fU -> f127844fU
    com.corrodinggames.rts.game.units.custom.h fv -> f127795fv
    com.corrodinggames.rts.game.units.custom.bn fV -> f127845fV
    boolean fw -> f127796fw
    com.corrodinggames.rts.gameFramework.utility.m fW -> f127846fW
    int fx -> f127797fx
    boolean fX -> f127815fX
    int fy -> f127798fy
    com.corrodinggames.rts.game.units.custom.r[] fY -> f127816fY
    float fz -> f127799fz
    com.corrodinggames.rts.game.units.custom.r[] fZ -> f127817fZ
    boolean G -> generation_repeat
    com.corrodinggames.rts.game.units.custom.r[] ga -> f127818ga
    com.corrodinggames.rts.gameFramework.utility.m gb -> f127847gb
    java.util.ArrayList gc -> f127848gc
    java.util.ArrayList gd -> f127849gd
    com.corrodinggames.rts.game.units.custom.ay[] ge -> f127828ge
    com.corrodinggames.rts.game.units.custom.ay[] gf -> f127829gf
    java.util.ArrayList gg -> f127850gg
    java.util.ArrayList gh -> f127851gh
    boolean gi -> f127819gi
    int gj -> f127852gj
    java.lang.String gk -> f127820gk
    java.lang.String gl -> f127821gl
    java.util.HashMap gm -> f127822gm
    com.corrodinggames.rts.game.units.at[] gn -> f127823gn
    com.corrodinggames.rts.game.units.a.z go -> f127853go
    com.corrodinggames.rts.gameFramework.utility.m gp -> f127854gp
    com.corrodinggames.rts.gameFramework.utility.m gq -> f127855gq
    boolean gr -> f127824gr
    boolean gs -> f127825gs
    com.corrodinggames.rts.gameFramework.utility.m gt -> f127856gt
    int H -> generation_unit
    java.lang.String I -> overrideAndReplace
    com.corrodinggames.rts.gameFramework.i.b J -> modInfo
    java.lang.String K -> onNewMapSpawn_ifUnitIsMissing
    java.lang.String L -> onNewMapSpawn_ifUnitIsPresent
    java.lang.String M -> onNewMapSpawn
    com.corrodinggames.rts.gameFramework.utility.m N -> autoTriggerAction
    com.corrodinggames.rts.game.units.custom.h O -> image_shield
    com.corrodinggames.rts.game.units.custom.h P -> image_turret
    java.lang.String Q -> image_shadow
    int R -> shadowOffsetX
    boolean s -> isBuiltFromSpawner
    int S -> shadowOffsetY
    boolean t -> isBio
    com.corrodinggames.rts.game.units.custom.ad T -> teamColors
    boolean u -> isBug
    int U -> turretSize
    boolean v -> isBuilder
    int V -> turretTurnSpeed
    boolean w -> isBuilderNonAssist
    int W -> turretRotateWithBody
    boolean x -> canBuildOnWater
    boolean y -> canBuildOnGround
    int Y -> lockTurretWithBody
    boolean z -> isAir
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean Z -> lockTurretWithBody_ignoreBaseTurret
    com.corrodinggames.rts.game.units.custom.f a(com.corrodinggames.rts.game.units.custom.n,com.corrodinggames.rts.game.units.custom.f,boolean) -> loadData
    java.lang.String a(java.lang.String) -> loadData
    com.corrodinggames.rts.game.units.custom.o a(java.lang.String,com.corrodinggames.rts.game.units.custom.o) -> loadCore
    void A() -> load
com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean -> com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean:
    com.corrodinggames.rts.game.units.custom.k activeEvent -> currentEventContext
    java.util.HashMap booleans -> booleanRegistry
    com.corrodinggames.rts.game.units.y outerUnitParameterContext -> externalUnitContext
    java.util.HashMap parameterMappings -> parameterCache
com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBooleanLoader -> com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBooleanLoader:
    java.util.regex.Pattern patternDoubleQuote -> doubleQuotePattern
    java.util.regex.Pattern patternFloat -> floatPattern
    java.util.regex.Pattern patternInteger -> integerPattern
    java.util.regex.Pattern patternSingleQuote -> singleQuotePattern
com.corrodinggames.rts.game.units.custom.m -> com.corrodinggames.rts.game.units.custom.CustomUnitDirectionConfig:
    boolean a -> useMainTurret
    float b -> directionUnits
    int c -> strideX
    int d -> strideY
    float e -> startingDirection
com.corrodinggames.rts.game.units.custom.n -> com.corrodinggames.rts.game.units.custom.CustomUnitAction:
com.corrodinggames.rts.game.units.custom.o -> com.corrodinggames.rts.game.units.custom.CustomUnitAnimationReference:
    java.lang.String a -> animationName
    com.corrodinggames.rts.game.units.custom.f b -> animationConfig
    com.corrodinggames.rts.game.units.custom.l c -> customUnitConfig
com.corrodinggames.rts.game.units.custom.p -> com.corrodinggames.rts.game.units.custom.CustomUnitTrigger:
    java.lang.String a -> triggerName
    float b -> delay
    boolean c -> enabled
    java.lang.String d -> condition
    boolean e -> runOnce
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean f -> logicCondition
    com.corrodinggames.rts.game.units.custom.bb g -> action
com.corrodinggames.rts.game.units.custom.q -> com.corrodinggames.rts.game.units.custom.CustomUnitConfigComparator:
com.corrodinggames.rts.game.units.custom.r -> com.corrodinggames.rts.game.units.custom.CustomUnitCondition:
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean a -> logicBoolean
    java.lang.String b -> conditionName
    com.corrodinggames.rts.game.units.custom.s c -> triggerType
    com.corrodinggames.rts.game.units.custom.a.g d -> action
com.corrodinggames.rts.game.units.custom.s -> com.corrodinggames.rts.game.units.custom.UpdateFrequency:
com.corrodinggames.rts.game.units.custom.t -> com.corrodinggames.rts.game.units.custom.CustomUnitConfigProcessor:
com.corrodinggames.rts.game.units.custom.u -> com.corrodinggames.rts.game.units.custom.CustomUnitActionHandler:
    com.corrodinggames.rts.gameFramework.utility.m a -> actionNames
    com.corrodinggames.rts.gameFramework.utility.m b -> actions
    java.lang.String c -> actionName
    java.lang.String d -> actionDescription
com.corrodinggames.rts.game.units.custom.v -> com.corrodinggames.rts.game.units.custom.UnitTypeReference:
    java.lang.String a -> configKey
    java.lang.String b -> sectionName
    java.lang.String c -> unitTypeName
    com.corrodinggames.rts.game.units.as d -> unitType
com.corrodinggames.rts.game.units.custom.w -> com.corrodinggames.rts.game.units.custom.CustomUnitTypeReference:
com.corrodinggames.rts.game.units.custom.x -> com.corrodinggames.rts.game.units.custom.CustomUnitProjectileReference:
    java.lang.String g -> projectileName
    com.corrodinggames.rts.game.units.custom.bh h -> projectile
com.corrodinggames.rts.game.units.custom.y -> com.corrodinggames.rts.game.units.custom.CustomUnitFloatValue:
    float a -> value
com.corrodinggames.rts.game.units.custom.z -> com.corrodinggames.rts.game.units.custom.CustomUnitSpawnList:
    java.lang.String a -> rawSpawnListString
    com.corrodinggames.rts.game.units.custom.ay[] b -> spawnItems
    com.corrodinggames.rts.game.units.custom.l c -> customUnitConfig
com.corrodinggames.rts.game.units.d -> com.corrodinggames.rts.game.units.UnitPathPoints:
com.corrodinggames.rts.game.units.d.a -> com.corrodinggames.rts.game.units.d.AirFactory:
    com.corrodinggames.rts.gameFramework.m.e a -> level1Texture
    com.corrodinggames.rts.gameFramework.m.e b -> level2Texture
    com.corrodinggames.rts.gameFramework.m.e[] c -> level1Textures
    com.corrodinggames.rts.gameFramework.m.e[] d -> level2Textures
    com.corrodinggames.rts.gameFramework.m.e e -> deadTexture
    int f -> factoryLevel
    float g -> animationTiming
    com.corrodinggames.rts.game.units.a.c h -> upgradeActionId
    void a(int) -> setFactoryLevel
    void a(com.corrodinggames.rts.gameFramework.j.as) -> writeToOutputStream
    void a(com.corrodinggames.rts.gameFramework.j.k) -> readFromInputStream
    void a(java.util.ArrayList,int) -> addAvailableActions
    void b() -> loadTextures
    boolean bJ() -> isSelectable
    com.corrodinggames.rts.game.units.a.c cm() -> getUpgradeAction
    com.corrodinggames.rts.gameFramework.m.e d() -> getTexture
    com.corrodinggames.rts.gameFramework.m.e k() -> getShadowTexture
    java.util.ArrayList N() -> getAvailableActions
com.corrodinggames.rts.game.units.d.a.a -> com.corrodinggames.rts.game.units.d.a.AntiAirTurret:
    com.corrodinggames.rts.gameFramework.m.e a -> topTexture
    com.corrodinggames.rts.gameFramework.m.e b -> topTextureT2
    com.corrodinggames.rts.gameFramework.m.e c -> iconTexture
    com.corrodinggames.rts.gameFramework.m.e[] d -> teamTextures
    com.corrodinggames.rts.game.units.a.s e -> upgradeAction
    java.util.ArrayList f -> actions
    void a(com.corrodinggames.rts.game.units.am,int) -> fireProjectile
    void a(com.corrodinggames.rts.game.units.d.j) -> onUpgrade
    void a(java.util.ArrayList) -> clearAndAddAction
    boolean af() -> isAggressive
    boolean ag() -> isStealth
    void b() -> loadTextures
    float b(int) -> getAttackDelay
    float B() -> getAttackSoundPitch
    int bl() -> getTechLevel
    float c(int) -> getTurretRestingRotationSpeed
    com.corrodinggames.rts.gameFramework.m.e d(int) -> getTopTexture
    float e(int) -> getMuzzlePoint
    android.graphics.PointF E(int) -> getTurretTurnSpeed
    float g(int) -> getTurretHeight
    float m() -> getAttackRange
    boolean r(int) -> canAttackWeapon
    void s(float) -> updateTurretRotation
    boolean u(int) -> canAttack
    com.corrodinggames.rts.gameFramework.m.e v() -> getIcon
    int v(int) -> getTurretIndex
com.corrodinggames.rts.game.units.d.a.b -> com.corrodinggames.rts.game.units.d.a.TurretFactory:
    com.corrodinggames.rts.gameFramework.m.e b -> turretTopL2Texture
    com.corrodinggames.rts.gameFramework.m.e c -> turretTopL3Texture
    java.lang.String C -> AA_TURRET_T1_TYPE
    com.corrodinggames.rts.gameFramework.m.e d -> turretTopArtilleryTexture
    java.lang.String D -> AA_TURRET_T2_TYPE
    android.graphics.Rect dK -> drawRect
    com.corrodinggames.rts.game.units.a.s dL -> upgradeToT2Action
    com.corrodinggames.rts.game.units.a.s dM -> upgradeToT3Action
    com.corrodinggames.rts.game.units.a.s dN -> upgradeToArtilleryAction
    com.corrodinggames.rts.game.units.a.s dO -> upgradeToFlamethrowerAction
    java.util.ArrayList dP -> upgradeActions
    com.corrodinggames.rts.gameFramework.m.e e -> turretTopFlameTexture
    java.lang.String E -> AA_FLAK_TURRET_TYPE
    com.corrodinggames.rts.gameFramework.m.e F -> iconTexture
    com.corrodinggames.rts.gameFramework.m.e g -> baseTexture
    com.corrodinggames.rts.gameFramework.m.e[] G -> teamIconTextures
    com.corrodinggames.rts.gameFramework.m.e[] h -> teamTextures
    boolean H -> isAnimating
    com.corrodinggames.rts.gameFramework.m.e i -> deadTexture
    float I -> animationTargetAngle
    boolean j -> isUpgraded
    float J -> animationTimer
    int k -> turretType
    boolean K -> animationDirection
    com.corrodinggames.rts.game.units.d.a.c l -> turretImplementation
    java.lang.String t -> GUN_TURRET_TYPE
    java.lang.String u -> GUN_TURRET_T2_TYPE
    java.lang.String v -> GUN_TURRET_T3_TYPE
    java.lang.String w -> ARTILLERY_TURRET_TYPE
    java.lang.String x -> FLAMETHROWER_TURRET_TYPE
    void a(float) -> update
    android.graphics.PointF a(com.corrodinggames.rts.game.units.d.a.b,int) -> getActions
    void a(com.corrodinggames.rts.gameFramework.j.as) -> writeToOutputStream
    void a(com.corrodinggames.rts.gameFramework.j.k) -> readFromInputStream
    void a_(java.lang.String) -> setTurretType
    boolean b(int,float) -> isTurret
    void b(java.lang.String) -> setTurretTypeInternal
    boolean c(float) -> draw
    com.corrodinggames.rts.game.units.d.a.c c(java.lang.String) -> createTurretImplementation
    com.corrodinggames.rts.gameFramework.m.e d() -> getBaseTexture
    com.corrodinggames.rts.gameFramework.m.e d(int) -> getTurretTopTexture
    void dB() -> loadTextures
    void dC() -> drawTurret
    float H(int) -> getTurretHeight
    boolean L() -> onDeath
    int M() -> getTurretTechLevel
    void M(int) -> setAttackSpeed
    void s(float) -> updateAnimation
    float w(int) -> getTurretTurnSpeed
com.corrodinggames.rts.game.units.d.a.c -> com.corrodinggames.rts.game.units.d.a.TurretImplementation:
    float a() -> getAttackRange
    void a(float) -> update
    float a(int) -> getAttackDelay
    void a(com.corrodinggames.rts.game.units.am,int) -> fireProjectile
    void a(com.corrodinggames.rts.game.units.d.a.c) -> copyFrom
    boolean a(java.lang.String) -> isSameType
    int b() -> getTechLevel
    float b(int) -> getAttackDamage
    android.graphics.PointF c(int) -> getTurretType
    com.corrodinggames.rts.gameFramework.m.e d(int) -> getTurretTopTexture
    float e(int) -> getTurretRestingRotationSpeed
    float f(int) -> getTurretTurnSpeed
    float g(int) -> getTurretHeight
    float h(int) -> getSomeOtherTurretHeight
com.corrodinggames.rts.game.units.d.a.d -> com.corrodinggames.rts.game.units.d.a.ArtilleryTurret:
    com.corrodinggames.rts.game.units.d.a.b b -> turretFactory
    java.lang.String c() -> getTurretType
com.corrodinggames.rts.game.units.d.a.e -> com.corrodinggames.rts.game.units.d.a.FlamethrowerTurret:
    com.corrodinggames.rts.game.units.d.a.b b -> turretFactory
com.corrodinggames.rts.game.units.d.a.f -> com.corrodinggames.rts.game.units.d.a.GunTurretT2:
    com.corrodinggames.rts.game.units.d.a.b b -> turretFactory
com.corrodinggames.rts.game.units.d.a.g -> com.corrodinggames.rts.game.units.d.a.GunTurretT3:
    com.corrodinggames.rts.game.units.d.a.b b -> turretFactory
com.corrodinggames.rts.game.units.d.a.h -> com.corrodinggames.rts.game.units.d.a.GunTurret:
    com.corrodinggames.rts.game.units.d.a.b b -> turretFactory
    int d() -> getBuildCost
com.corrodinggames.rts.game.units.d.b -> com.corrodinggames.rts.game.units.d.AirFactoryUpgradeT2:
com.corrodinggames.rts.game.units.d.c -> com.corrodinggames.rts.game.units.d.AntiNukeLauncher:
com.corrodinggames.rts.game.units.d.d -> com.corrodinggames.rts.game.units.d.Building:
    boolean a(com.corrodinggames.rts.game.units.as,float,float,com.corrodinggames.rts.game.n) -> canBuildingBePlacedAt
    float A() -> getBuildingEffectVolume
    boolean b_() -> isBuildingConstructionComplete
    boolean bI() -> isBuildingLocked
    android.graphics.Rect cc() -> getBuildingTargetRect
    android.graphics.Rect cd() -> getBuildingVelocityRect
    boolean ds() -> isBuildingActive
    boolean e() -> destroyAirUnit
    android.graphics.Paint f() -> getBuildingPaint
    void f_() -> updateBuildingLogic
    com.corrodinggames.rts.game.units.ao h() -> getBuildingMovementType
    boolean i() -> isBuildingSelectable
    boolean I() -> isBuildingTransportFull
    boolean Q() -> hasBuildingAttackRange
    void R(int) -> setBuildingAnimationState
    float z() -> getBuildingHealthBarSize
com.corrodinggames.rts.game.units.d.e -> com.corrodinggames.rts.game.units.d.CommandCenter:
    float e -> resourceGenerationTimer
    float f -> animationTimer1
    float g -> animationTimer2
    int h -> animationCounter
    float i -> animationTimer3
    float j -> animationTimer4
    float k -> frameTimer
    int l -> frameIndex
    float cy() -> getResourceGenerationRate
com.corrodinggames.rts.game.units.d.f -> com.corrodinggames.rts.game.units.d.ExperimentalLandFactory:
com.corrodinggames.rts.game.units.d.g -> com.corrodinggames.rts.game.units.d.ResourceExtractor:
com.corrodinggames.rts.game.units.d.h -> com.corrodinggames.rts.game.units.d.PowerFabricator:
com.corrodinggames.rts.game.units.d.i -> com.corrodinggames.rts.game.units.d.FactoryWithQueue:
com.corrodinggames.rts.game.units.d.j -> com.corrodinggames.rts.game.units.d.Projectile:
com.corrodinggames.rts.game.units.d.k -> com.corrodinggames.rts.game.units.d.FactoryQueueManager:
com.corrodinggames.rts.game.units.d.l -> com.corrodinggames.rts.game.units.d.FactoryQueueInterface:
com.corrodinggames.rts.game.units.d.m -> com.corrodinggames.rts.game.units.d.LandFactory:
com.corrodinggames.rts.game.units.d.n -> com.corrodinggames.rts.game.units.d.LandFactoryUpgradeAction:
com.corrodinggames.rts.game.units.d.o -> com.corrodinggames.rts.game.units.d.LandFactoryQueueManager:
com.corrodinggames.rts.game.units.d.p -> com.corrodinggames.rts.game.units.d.LaserDefense:
com.corrodinggames.rts.game.units.d.q -> com.corrodinggames.rts.game.units.d.NukeLauncher:
com.corrodinggames.rts.game.units.d.r -> com.corrodinggames.rts.game.units.d.RepairBay:
com.corrodinggames.rts.game.units.d.s -> com.corrodinggames.rts.game.units.d.AutoRepairCallback:
com.corrodinggames.rts.game.units.d.t -> com.corrodinggames.rts.game.units.d.SeaFactory:
    com.corrodinggames.rts.gameFramework.m.e a -> baseFactoryTexture
    com.corrodinggames.rts.gameFramework.m.e b -> tier2FactoryTexture
    com.corrodinggames.rts.gameFramework.m.e[] d -> baseFactoryTeamTextures
    com.corrodinggames.rts.gameFramework.m.e[] e -> tier2FactoryTeamTextures
    com.corrodinggames.rts.gameFramework.m.e f -> deadFactoryTexture
com.corrodinggames.rts.game.units.d.u -> com.corrodinggames.rts.game.units.d.SeaFactoryT2Upgrade:
com.corrodinggames.rts.game.units.d.v -> com.corrodinggames.rts.game.units.d.SupplyDepot:
com.corrodinggames.rts.game.units.d.w -> com.corrodinggames.rts.game.units.d.WallVertical:
    com.corrodinggames.rts.gameFramework.m.e a -> f334a
com.corrodinggames.rts.game.units.e -> com.corrodinggames.rts.game.units.CrystalResource:
    float b -> animationTimer
com.corrodinggames.rts.game.units.e.a -> com.corrodinggames.rts.game.units.e.Artillery:
com.corrodinggames.rts.game.units.e.b -> com.corrodinggames.rts.game.units.e.BuilderUnit:
    com.corrodinggames.rts.gameFramework.m.e a -> builderTexture
    com.corrodinggames.rts.gameFramework.m.e b -> builderTexture_dead
    com.corrodinggames.rts.gameFramework.m.e c -> builderShadowTexture
    com.corrodinggames.rts.gameFramework.m.e[] d -> builderTexture_teamColors
    com.corrodinggames.rts.gameFramework.m.e e -> builderChargeTexture
    com.corrodinggames.rts.gameFramework.m.e f -> builderDechargeTexture
    com.corrodinggames.rts.gameFramework.m.e g -> builderIconTexture
    com.corrodinggames.rts.gameFramework.m.e[] h -> builderIconTexture_teamColors
    android.graphics.PointF[] i -> targetPriorityPoints
    android.graphics.PointF[] j -> unitRenderPoints
    android.graphics.Paint k -> linePaint
    android.graphics.Paint l -> linePaintOver
    android.graphics.Paint m -> chargePaint
    com.corrodinggames.rts.game.units.a.s n -> reclaimAction
    void a(float,com.corrodinggames.rts.game.units.d) -> updateTargetPriorityPoints
    boolean a(com.corrodinggames.rts.game.units.am) -> isBuildingBlocked
    void a(java.util.ArrayList,int) -> addAvailableActions
    void b(float,com.corrodinggames.rts.game.units.d) -> drawTargetPriorityPoints
    com.corrodinggames.rts.game.units.ar f() -> getUnitType
    void K() -> loadTextures
com.corrodinggames.rts.game.units.e.c -> com.corrodinggames.rts.game.units.e.ExperimentalHoverTank:
com.corrodinggames.rts.game.units.e.d -> com.corrodinggames.rts.game.units.e.ExperimentalTank:
com.corrodinggames.rts.game.units.e.e -> com.corrodinggames.rts.game.units.e.HeavyHoverTank:
com.corrodinggames.rts.game.units.e.f -> com.corrodinggames.rts.game.units.e.HeavyTankUnit:
    int e -> turretFrameIndex
    float f -> turretAnimationTimer
    float g -> smokeTimer
    android.graphics.Rect h -> turretBounds
    void a(float) -> updateHeavyTankMovement
    void a(com.corrodinggames.rts.game.units.am,int) -> attackHeavyTankTarget
    float A() -> getHeavyTankEffectVolume
    android.graphics.Rect a_(boolean) -> getHeavyTankBounds
    boolean af() -> isHeavyTankAggressive
    float b(int) -> getHeavyTankAttackDamage
    float B() -> getHeavyTankSoundPitch
    float bc() -> getHeavyTankAnimationSpeed
    float bN() -> getHeavyTankMaxHealth
    boolean c(float) -> checkHeavyTankAcceleration
    float c(int) -> getHeavyTankAttackRange
    float C() -> getHeavyTankReloadTime
    com.corrodinggames.rts.gameFramework.m.e d() -> getHeavyTankTransportTexture
    com.corrodinggames.rts.gameFramework.m.e d(int) -> getHeavyTankTurretTexture
    float D() -> m14569D
    boolean e() -> destroyHeavyTank
    void e(float) -> damageHeavyTank
    void f() -> loadHeavyTankTextures
    boolean F() -> shouldHeavyTankRenderShadow
    float g(int) -> getHeavyTankAttackCooldown
    float G() -> getHeavyTankHealthBarSize
    float H() -> getHeavyTankTurretSize
    float I(int) -> getHeavyTankTurretOffsetY
    float J(int) -> getHeavyTankTransportSlots
    com.corrodinggames.rts.gameFramework.m.e k() -> getHeavyTankShadowTexture
    void K() -> spawnHeavyTankSmoke
    float m() -> getHeavyTankMovementSpeed
    float q(int) -> getHeavyTankProjectileSpeed
    float z() -> getHeavyTankHealthBarHeight
com.corrodinggames.rts.game.units.e.i -> com.corrodinggames.rts.game.units.e.HovercraftUnit:
    float e -> animationTimer
    float f -> unloadTimer
    boolean g -> isUnloading
    com.corrodinggames.rts.gameFramework.utility.m h -> transportedUnits
    boolean bA() -> isUnloading
    int bB() -> getTransportedUnitCount
    int bY() -> getTransportedUnitsWeight
    com.corrodinggames.rts.gameFramework.utility.m bz() -> getTransportedUnitsList
    int bZ() -> getMaxTransportWeight
    float C() -> loadUnit
    com.corrodinggames.rts.gameFramework.m.e d() -> canTransportUnit
    void ds() -> stopUnloading
    boolean e() -> destroyAirUnit
    boolean e(com.corrodinggames.rts.game.units.am,boolean) -> tryTransportUnit
    void f(boolean) -> releaseAllUnits
    void M() -> startUnloading
com.corrodinggames.rts.game.units.e.j -> com.corrodinggames.rts.game.units.e.LandUnit:
com.corrodinggames.rts.game.units.f -> com.corrodinggames.rts.game.units.DamageZone:
com.corrodinggames.rts.game.units.f.a -> com.corrodinggames.rts.game.units.f.UnitStatisticsManager:
com.corrodinggames.rts.game.units.f.b -> com.corrodinggames.rts.game.units.f.UnitList:
com.corrodinggames.rts.game.units.f.c -> com.corrodinggames.rts.game.units.f.UnitSpatialIndex:
com.corrodinggames.rts.game.units.g -> com.corrodinggames.rts.game.units.UnitSpawner:
com.corrodinggames.rts.game.units.h -> com.corrodinggames.rts.game.units.EditorOrBuilder:
    android.graphics.PointF[] a -> controlPoints
    android.graphics.PointF[] b -> targetPoints
    boolean c -> controlPointPaints
    android.graphics.Paint d -> targetPointPaints
    android.graphics.Paint e -> editorSelectionPaint
    android.graphics.Paint f -> editorSelectionTexture
    com.corrodinggames.rts.gameFramework.m.e g -> editorSelectionTexture2
    com.corrodinggames.rts.game.units.a.s h -> editorSelectionTexture3
    com.corrodinggames.rts.game.units.a.s i -> editorIconTexture
    com.corrodinggames.rts.game.units.a.s j -> editorIconTexture2
    com.corrodinggames.rts.game.units.a.s k -> editorIconTexture3
    com.corrodinggames.rts.game.units.a.s l -> editorIconTexture4
    com.corrodinggames.rts.game.units.a.s m -> editorIconTexture5
    com.corrodinggames.rts.game.units.a.s n -> editorIconTexture6
    com.corrodinggames.rts.game.units.a.s o -> editorIconTexture7
    com.corrodinggames.rts.game.units.a.s p -> editorIconTexture8
    com.corrodinggames.rts.game.units.a.s q -> editorIconTexture9
    java.lang.String r -> editorIconTexture10
com.corrodinggames.rts.game.units.i -> com.corrodinggames.rts.game.units.AddCreditsAction:
com.corrodinggames.rts.game.units.j -> com.corrodinggames.rts.game.units.ModFilterAction:
com.corrodinggames.rts.game.units.k -> com.corrodinggames.rts.game.units.TeamChangeAction:
com.corrodinggames.rts.game.units.u -> com.corrodinggames.rts.game.units.FogRevealer:
    int a -> sightRange
    float b -> lifeTimer
    int s() -> getSightRange
    boolean t() -> isRevealer
    boolean u() -> isStealth
com.corrodinggames.rts.game.units.w -> com.corrodinggames.rts.game.units.MovableUnit:
com.corrodinggames.rts.game.units.y -> com.corrodinggames.rts.game.units.UnitEntity:
    com.corrodinggames.rts.game.units.y ad -> transportedBy
    com.corrodinggames.rts.gameFramework.m.ag aE -> defaultTeamPaint
    com.corrodinggames.rts.gameFramework.m.ag aF -> selectedTeamPaint
    com.corrodinggames.rts.game.units.am[] aJ -> nearbyUnits
    float[] aK -> nearbyUnitDistances
    int aL -> nearbyUnitCount
    com.corrodinggames.rts.game.units.af[] av -> pathPositions
    int aw -> activePathCount
    android.graphics.PorterDuffColorFilter aX -> overlayFilterLightGreen
    android.graphics.PorterDuffColorFilter aY -> overlayFilterGreen
    android.graphics.PorterDuffColorFilter aZ -> overlayFilterRed
    android.graphics.Paint B -> paralyzedOverlayPaint
    android.graphics.PorterDuffColorFilter ba -> overlayFilterBlue
    android.graphics.Paint bb -> overlayPaint1
    android.graphics.Paint bc -> overlayPaint2
    android.graphics.Paint bd -> overlayPaint3
    android.graphics.PointF be -> tempPointF1
    android.graphics.PointF bg -> tempPointF2
    android.graphics.PointF bh -> tempPointF3
    android.graphics.PointF bj -> tempPointF4
    android.graphics.Point bk -> tempPoint1
    android.graphics.Point bl -> tempPoint2
    com.corrodinggames.rts.gameFramework.m.ag D -> baseTeamTint
    com.corrodinggames.rts.gameFramework.m.ag E -> selectedTeamTint
    int f -> waypointCount
    com.corrodinggames.rts.game.units.au[] g -> waypoints
    boolean h -> isMoving
    boolean j -> canAttack
    boolean k -> isPathingActive
    com.corrodinggames.rts.gameFramework.m.e M -> baseTexture
    com.corrodinggames.rts.gameFramework.m.e N -> shadowTexture
    com.corrodinggames.rts.game.units.a P -> attackMode
    int Q -> attackCooldown
    com.corrodinggames.rts.game.units.am R -> attackTarget
    float S -> turretRotation
    boolean t -> isDead
    float T -> targetTurretRotation
    boolean u -> isVisible
    float U -> turretTurnSpeed
    float V -> drawHeight
    float W -> radius
    float X -> health
    float Y -> maxHealth
    com.corrodinggames.rts.game.units.am Z -> lastDamagedBy
    void a(com.corrodinggames.rts.game.units.y,com.corrodinggames.rts.game.units.y) -> copyWaypoints
    void a(com.corrodinggames.rts.gameFramework.j.k) -> readData
    void b(float) -> setBuiltPercentage
    float D() -> getBaseTexture
    android.graphics.PointF K(int) -> getShadowTexture
    android.graphics.Paint R() -> getSelectionPaint
com.corrodinggames.rts.game.units.z -> com.corrodinggames.rts.game.units.z:
    com.corrodinggames.rts.game.units.am a -> sourceUnit
    com.corrodinggames.rts.game.units.am b -> targetUnit
    boolean c -> isActive
    com.corrodinggames.rts.game.units.a.s d -> action
com.corrodinggames.rts.gameFramework.a.a -> com.corrodinggames.rts.gameFramework.audio.AndroidSoundFactory:
    java.util.concurrent.LinkedBlockingQueue a -> soundRequestQueue
    int b -> MAX_STREAMS
    com.corrodinggames.rts.gameFramework.utility.ad c -> soundPlaybackList
    com.corrodinggames.rts.gameFramework.a.d d -> soundThread
    int e -> SOUND_THREAD_SLEEP_MS
    android.content.Context f -> context
    android.media.SoundPool g -> soundPool
    void a() -> startThread
    com.corrodinggames.rts.gameFramework.a.i a(int) -> createSound
    void a(android.content.Context) -> setContext
    com.corrodinggames.rts.gameFramework.a.i a(java.lang.String,com.corrodinggames.rts.gameFramework.utility.j,boolean) -> loadSound
com.corrodinggames.rts.gameFramework.a.b -> com.corrodinggames.rts.gameFramework.sound.AndroidSound:
    com.corrodinggames.rts.gameFramework.a.a a -> soundFactory
    int b -> soundId
    com.corrodinggames.rts.gameFramework.a.a c -> parentFactory
    int a() -> getSoundId
    void a(float,float,int,int,float) -> play
    void b(float,float,int,int,float) -> playDirect
com.corrodinggames.rts.gameFramework.a.c -> com.corrodinggames.rts.gameFramework.sound.SoundRequest:
    com.corrodinggames.rts.gameFramework.a.b a -> sound
    float b -> volume
    float c -> pitch
    int d -> priority
    int e -> loop
    float f -> rate
    void a() -> process
com.corrodinggames.rts.gameFramework.a.d -> com.corrodinggames.rts.gameFramework.sound.SoundThread:
    com.corrodinggames.rts.gameFramework.a.a a -> soundFactory
com.corrodinggames.rts.gameFramework.a.e -> com.corrodinggames.rts.gameFramework.audio.SoundEngine:
    java.util.ArrayList a -> playingSounds
    com.corrodinggames.rts.gameFramework.a.i A -> bugDieSound
    boolean b -> soundDisabled
    com.corrodinggames.rts.gameFramework.a.i B -> bugAttackSound
    com.corrodinggames.rts.gameFramework.a.h c -> soundFactory
    com.corrodinggames.rts.gameFramework.a.i C -> nukeExplodeSound
    com.corrodinggames.rts.gameFramework.a.i d -> attack2Sound
    com.corrodinggames.rts.gameFramework.a.i D -> nukeLaunchSound
    com.corrodinggames.rts.gameFramework.a.i e -> attackSound
    com.corrodinggames.rts.gameFramework.a.i E -> laserDeflectSound
    com.corrodinggames.rts.gameFramework.a.i f -> moveSound
    com.corrodinggames.rts.gameFramework.a.i F -> laserDeflect2Sound
    com.corrodinggames.rts.gameFramework.a.i g -> clickSound
    com.corrodinggames.rts.gameFramework.a.i h -> clickAddSound
    com.corrodinggames.rts.gameFramework.a.i i -> clickRemoveSound
    com.corrodinggames.rts.gameFramework.a.i j -> warningSound
    com.corrodinggames.rts.gameFramework.a.i k -> messageSound
    com.corrodinggames.rts.gameFramework.a.i l -> interfaceErrorSound
    com.corrodinggames.rts.gameFramework.a.i m -> missileFireSound
    com.corrodinggames.rts.gameFramework.a.i n -> missileHitSound
    com.corrodinggames.rts.gameFramework.a.i o -> unitExplodeSound
    com.corrodinggames.rts.gameFramework.a.i p -> buildingExplodeSound
    com.corrodinggames.rts.gameFramework.a.i q -> tankFiringSound
    com.corrodinggames.rts.gameFramework.a.i r -> cannonFiringSound
    com.corrodinggames.rts.gameFramework.a.i s -> gunFireSound
    com.corrodinggames.rts.gameFramework.a.i t -> gunFire3Sound
    com.corrodinggames.rts.gameFramework.a.i u -> gunFire4Sound
    com.corrodinggames.rts.gameFramework.a.i v -> largeGunFire1Sound
    com.corrodinggames.rts.gameFramework.a.i w -> largeGunFire2Sound
    com.corrodinggames.rts.gameFramework.a.i x -> lightingBurstSound
    com.corrodinggames.rts.gameFramework.a.i y -> plasmaFireSound
    com.corrodinggames.rts.gameFramework.a.i z -> plasmaFire2Sound
    boolean a() -> isSoundEnabled
    boolean a(float) -> isVolumeEnabled
    void a(android.content.Context) -> loadSounds
    boolean a(com.corrodinggames.rts.gameFramework.a.i,float) -> trackSound
    void a(com.corrodinggames.rts.gameFramework.a.i,float,float,float) -> playSound
    void a(com.corrodinggames.rts.gameFramework.a.i,float,float,float,float) -> playSoundAt
    com.corrodinggames.rts.gameFramework.a.i a(java.lang.String) -> getSound
    com.corrodinggames.rts.gameFramework.a.i a(java.lang.String,com.corrodinggames.rts.gameFramework.utility.j,boolean) -> loadSound
    void b() -> noop
    void b(float) -> clearPlayingSounds
    void b(com.corrodinggames.rts.gameFramework.a.i,float) -> playInterfaceSound
    com.corrodinggames.rts.gameFramework.a.i b(java.lang.String) -> getNullSound
    void c(com.corrodinggames.rts.gameFramework.a.i,float) -> playGameSound
com.corrodinggames.rts.gameFramework.a.f -> com.corrodinggames.rts.gameFramework.audio.NullSound:
com.corrodinggames.rts.gameFramework.a.h -> com.corrodinggames.rts.gameFramework.audio.SoundFactory:
com.corrodinggames.rts.gameFramework.a.i -> com.corrodinggames.rts.gameFramework.audio.Sound:
com.corrodinggames.rts.gameFramework.ad -> com.corrodinggames.rts.gameFramework.KeyBinding:
com.corrodinggames.rts.gameFramework.am -> com.corrodinggames.rts.gameFramework.MusicManager:
    com.corrodinggames.rts.gameFramework.aq a -> musicFactory
    com.corrodinggames.rts.gameFramework.as A -> nextTrack
    java.lang.Object b -> pauseLock
    boolean B -> fadingIn
    java.lang.Object c -> updateLock
    boolean C -> fadingOut
    float d -> delta
    float D -> fadeLevel
    com.corrodinggames.rts.gameFramework.au e -> musicUpdateThread
    boolean E -> crossfade
    boolean f -> updateRunning
    boolean F -> quickFade
    boolean g -> updateCoreRunning
    boolean G -> fadedOut
    float h -> updateCoreTime
    float H -> fadeTimer
    int i -> updateCoreCount
    java.util.ArrayList I -> recentTracks
    boolean j -> lockupDetected
    java.util.HashMap J -> musicCache
    com.corrodinggames.rts.gameFramework.as k -> currentTrack
    int K -> loadErrorCount
    boolean l -> isPlaying
    boolean L -> crashed
    java.lang.String m -> currentTrackPath
    boolean M -> crashedMessageShown
    boolean n -> noLoop
    long N -> lastUpdate
    boolean o -> volumeChanged
    float p -> currentVolume
    float q -> trackTimeout
    float r -> trackTimeoutRetry
    boolean s -> nextTrackRequested
    java.lang.String t -> nextTrackPath
    boolean u -> disabled
    java.lang.String v -> lastMessage
    android.content.Context w -> context
    boolean x -> firstPlay
    boolean y -> checkNextTrack
    int z -> errorCount
    float a() -> getMusicVolume
    void a(float) -> update
    void a(android.content.Context) -> init
    java.lang.String a(com.corrodinggames.rts.gameFramework.at) -> getRandomMusicPathFromCategories
    java.lang.String a(com.corrodinggames.rts.gameFramework.at,com.corrodinggames.rts.gameFramework.at) -> getRandomMusicPath
    void a(java.lang.String) -> playMusic
    com.corrodinggames.rts.gameFramework.ar a(java.lang.String,boolean) -> loadMusic
    boolean b() -> isMusicEnabled
    boolean b(float) -> updateMusic
    java.lang.String b(java.lang.String) -> getMusicDisplayName
    void c() -> onNewGame
    void c(float) -> updateMusicInner
    java.util.ArrayList d() -> getAllMusicPaths
    void e() -> skipToNextTrack
    void f() -> pause
    void g() -> pauseMusic
    void h() -> resume
    void i() -> release
    boolean j() -> isFading
com.corrodinggames.rts.gameFramework.an -> com.corrodinggames.rts.gameFramework.AndroidMusicFactory:
    java.util.ArrayList a -> mediaPlayers
    java.util.ArrayList b -> availablePlayers
    java.util.ArrayList c -> playingPlayers
    boolean d -> loaded
    com.corrodinggames.rts.gameFramework.as a() -> createMusicTrack
    void a(com.corrodinggames.rts.gameFramework.am) -> init
    com.corrodinggames.rts.gameFramework.ar a(java.lang.String) -> createMusic
com.corrodinggames.rts.gameFramework.ao -> com.corrodinggames.rts.gameFramework.AndroidMusic:
com.corrodinggames.rts.gameFramework.ap -> com.corrodinggames.rts.gameFramework.AndroidMusicTrack:
com.corrodinggames.rts.gameFramework.aq -> com.corrodinggames.rts.gameFramework.MusicFactory:
    com.corrodinggames.rts.gameFramework.am e -> musicManager
    void a(float) -> createMusicTrack
    void a(int) -> createMusic
    void b() -> release
    boolean c() -> isMusicPlaying
    boolean d() -> isThreaded
    int e() -> isMusicSupported
com.corrodinggames.rts.gameFramework.ar -> com.corrodinggames.rts.gameFramework.Music:
    java.lang.String b -> path
com.corrodinggames.rts.gameFramework.as -> com.corrodinggames.rts.gameFramework.MusicTrack:
com.corrodinggames.rts.gameFramework.at -> com.corrodinggames.rts.gameFramework.MusicCategory:
    java.lang.String[] d -> trackPaths
    void a() -> load
    java.lang.String a(java.lang.String) -> getFullPath
    java.lang.String[] b() -> getTrackPaths
    void c() -> loadAll
    java.lang.String d() -> getMusicPath
com.corrodinggames.rts.gameFramework.au -> com.corrodinggames.rts.gameFramework.MusicUpdateThread:
    com.corrodinggames.rts.gameFramework.am a -> musicManager
com.corrodinggames.rts.gameFramework.ay -> com.corrodinggames.rts.gameFramework.SizedObject:
com.corrodinggames.rts.gameFramework.az -> com.corrodinggames.rts.gameFramework.PositionedObject:
com.corrodinggames.rts.gameFramework.b -> com.corrodinggames.rts.gameFramework.CommandGroup:
com.corrodinggames.rts.gameFramework.b.a -> com.corrodinggames.rts.gameFramework.b.ShaderProgram:
com.corrodinggames.rts.gameFramework.b.a.a -> com.corrodinggames.rts.gameFramework.b.a.ShaderAttributeType:
com.corrodinggames.rts.gameFramework.b.a.a.a -> com.corrodinggames.rts.gameFramework.b.a.a.FontShader:
com.corrodinggames.rts.gameFramework.b.a.a.b -> com.corrodinggames.rts.gameFramework.b.a.a.ShaderProgramBase:
com.corrodinggames.rts.gameFramework.b.a.b -> com.corrodinggames.rts.gameFramework.b.a.FontRenderer:
com.corrodinggames.rts.gameFramework.b.a.c -> com.corrodinggames.rts.gameFramework.b.a.GlyphInfo:
com.corrodinggames.rts.gameFramework.b.a.d -> com.corrodinggames.rts.gameFramework.b.a.TextRenderer:
com.corrodinggames.rts.gameFramework.b.a.e -> com.corrodinggames.rts.gameFramework.b.a.FontPage:
com.corrodinggames.rts.gameFramework.b.a.f -> com.corrodinggames.rts.gameFramework.b.a.ShaderUtils:
com.corrodinggames.rts.gameFramework.b.a.g -> com.corrodinggames.rts.gameFramework.b.a.TextMesh:
com.corrodinggames.rts.gameFramework.b.aa -> com.corrodinggames.rts.gameFramework.b.VertexBuffer:
com.corrodinggames.rts.gameFramework.b.ab -> com.corrodinggames.rts.gameFramework.b.IRenderCallback:
com.corrodinggames.rts.gameFramework.b.ac -> com.corrodinggames.rts.gameFramework.b.TextureAtlas:
com.corrodinggames.rts.gameFramework.b.ad -> com.corrodinggames.rts.gameFramework.b.BackingTexture:
com.corrodinggames.rts.gameFramework.b.ae -> com.corrodinggames.rts.gameFramework.b.SubTexture:
com.corrodinggames.rts.gameFramework.b.af -> com.corrodinggames.rts.gameFramework.b.ITextureFilter:
com.corrodinggames.rts.gameFramework.b.ag -> com.corrodinggames.rts.gameFramework.b.TextureUtils:
com.corrodinggames.rts.gameFramework.b.ah -> com.corrodinggames.rts.gameFramework.b.DynamicTexture:
com.corrodinggames.rts.gameFramework.b.ai -> com.corrodinggames.rts.gameFramework.b.BitmapCacheKey:
com.corrodinggames.rts.gameFramework.b.b -> com.corrodinggames.rts.gameFramework.b.Texture:
com.corrodinggames.rts.gameFramework.b.c -> com.corrodinggames.rts.gameFramework.b.ShaderInterface:
com.corrodinggames.rts.gameFramework.b.d -> com.corrodinggames.rts.gameFramework.b.TextureShader:
com.corrodinggames.rts.gameFramework.b.e -> com.corrodinggames.rts.gameFramework.b.BitmapTexture:
com.corrodinggames.rts.gameFramework.b.f -> com.corrodinggames.rts.gameFramework.b.TextureManager:
com.corrodinggames.rts.gameFramework.b.g -> com.corrodinggames.rts.gameFramework.b.CircleShader:
com.corrodinggames.rts.gameFramework.b.h -> com.corrodinggames.rts.gameFramework.b.IShaderProgram:
com.corrodinggames.rts.gameFramework.b.i -> com.corrodinggames.rts.gameFramework.b.FilterGroup:
com.corrodinggames.rts.gameFramework.b.j -> com.corrodinggames.rts.gameFramework.b.FilterCallback:
com.corrodinggames.rts.gameFramework.b.k -> com.corrodinggames.rts.gameFramework.b.IGraphicsEngine:
com.corrodinggames.rts.gameFramework.b.l -> com.corrodinggames.rts.gameFramework.b.MatrixCalculator:
com.corrodinggames.rts.gameFramework.b.m -> com.corrodinggames.rts.gameFramework.b.ShaderParameter:
com.corrodinggames.rts.gameFramework.b.n -> com.corrodinggames.rts.gameFramework.b.OpenGLRenderer:
com.corrodinggames.rts.gameFramework.b.o -> com.corrodinggames.rts.gameFramework.b.ShaderAttribute:
com.corrodinggames.rts.gameFramework.b.p -> com.corrodinggames.rts.gameFramework.b.ShaderContext:
com.corrodinggames.rts.gameFramework.b.q -> com.corrodinggames.rts.gameFramework.b.ShaderVariable:
com.corrodinggames.rts.gameFramework.b.r -> com.corrodinggames.rts.gameFramework.b.TransformState:
com.corrodinggames.rts.gameFramework.b.s -> com.corrodinggames.rts.gameFramework.b.ShaderUniform:
com.corrodinggames.rts.gameFramework.b.t -> com.corrodinggames.rts.gameFramework.b.TextureResource:
com.corrodinggames.rts.gameFramework.b.u -> com.corrodinggames.rts.gameFramework.b.ITextureResource:
com.corrodinggames.rts.gameFramework.b.v -> com.corrodinggames.rts.gameFramework.b.PaintStyle:
com.corrodinggames.rts.gameFramework.b.w -> com.corrodinggames.rts.gameFramework.b.IntArrayBuffer:
com.corrodinggames.rts.gameFramework.b.x -> com.corrodinggames.rts.gameFramework.b.GLTexture:
com.corrodinggames.rts.gameFramework.b.y -> com.corrodinggames.rts.gameFramework.b.TextureLayer:
com.corrodinggames.rts.gameFramework.b.z -> com.corrodinggames.rts.gameFramework.b.ShaderLocations:
com.corrodinggames.rts.gameFramework.ba -> com.corrodinggames.rts.gameFramework.ReplayEngine:
com.corrodinggames.rts.gameFramework.bb -> com.corrodinggames.rts.gameFramework.ReplayWriter:
com.corrodinggames.rts.gameFramework.bc -> com.corrodinggames.rts.gameFramework.ChatMessage:
com.corrodinggames.rts.gameFramework.bd -> com.corrodinggames.rts.gameFramework.ReplayCommand:
com.corrodinggames.rts.gameFramework.be -> com.corrodinggames.rts.gameFramework.GameStateManager:
com.corrodinggames.rts.gameFramework.bf -> com.corrodinggames.rts.gameFramework.GameStateData:
com.corrodinggames.rts.gameFramework.bg -> com.corrodinggames.rts.gameFramework.GameStatistics:
    java.util.ArrayList d() -> getActiveTeamStatistics
com.corrodinggames.rts.gameFramework.bh -> com.corrodinggames.rts.gameFramework.Point2i:
com.corrodinggames.rts.gameFramework.bi -> com.corrodinggames.rts.gameFramework.IntLookupTable:
com.corrodinggames.rts.gameFramework.bj -> com.corrodinggames.rts.gameFramework.StatisticType:
com.corrodinggames.rts.gameFramework.bk -> com.corrodinggames.rts.gameFramework.UnitEventListener:
com.corrodinggames.rts.gameFramework.bl -> com.corrodinggames.rts.gameFramework.UnitEventManager:
com.corrodinggames.rts.gameFramework.bm -> com.corrodinggames.rts.gameFramework.TeamStatistics:
com.corrodinggames.rts.gameFramework.bn -> com.corrodinggames.rts.gameFramework.TeamHistory:
com.corrodinggames.rts.gameFramework.bo -> com.corrodinggames.rts.gameFramework.StatisticsData:
com.corrodinggames.rts.gameFramework.bp -> com.corrodinggames.rts.gameFramework.SaveGameVersion:
com.corrodinggames.rts.gameFramework.bq -> com.corrodinggames.rts.gameFramework.Serializable:
com.corrodinggames.rts.gameFramework.br -> com.corrodinggames.rts.gameFramework.PerformanceProfiler:
com.corrodinggames.rts.gameFramework.bs -> com.corrodinggames.rts.gameFramework.ProfilerSection:
com.corrodinggames.rts.gameFramework.bt -> com.corrodinggames.rts.gameFramework.ProfilerTimer:
com.corrodinggames.rts.gameFramework.bu -> com.corrodinggames.rts.gameFramework.ProfilerData:
com.corrodinggames.rts.gameFramework.c -> com.corrodinggames.rts.gameFramework.CommandController:
com.corrodinggames.rts.gameFramework.c.a -> com.corrodinggames.rts.gameFramework.debug.DebugServer:
com.corrodinggames.rts.gameFramework.c.b -> com.corrodinggames.rts.gameFramework.debug.DebugClientHandler:
com.corrodinggames.rts.gameFramework.c.c -> com.corrodinggames.rts.gameFramework.debug.DebugUpdateTask:
com.corrodinggames.rts.gameFramework.d -> com.corrodinggames.rts.gameFramework.CommandTarget:
com.corrodinggames.rts.gameFramework.d.a -> com.corrodinggames.rts.gameFramework.d.BuildPreview:
    float a -> timer
    android.graphics.RectF A -> tempRectF3
    float b -> lifeTimer
    android.graphics.Paint B -> paint
    boolean c -> isDead
    android.graphics.Paint C -> foundationPaint
    com.corrodinggames.rts.game.units.as d -> unitType
    android.graphics.Paint D -> foundationPaintInactive
    com.corrodinggames.rts.game.n e -> team
    android.graphics.RectF E -> tempRectF4
    int f -> someCounterF
    float g -> tempPoint
    float h -> tempRectF1
    boolean i -> showFoundation
    com.corrodinggames.rts.game.n j -> placingTeam
    boolean k -> someFlagK
    int l -> gridX
    int m -> gridY
    boolean n -> isBuilding
    com.corrodinggames.rts.game.units.y o -> builder
    boolean p -> wasEverPlaceable
    boolean q -> forceDraw
    int r -> buildQueueId
    float s -> fadeInProgress
    float t -> fadeInSpeed
    boolean u -> someFlagU
    com.corrodinggames.rts.game.units.am v -> attachedUnit
    com.corrodinggames.rts.gameFramework.utility.o w -> activePreviews
    android.graphics.RectF z -> tempRectF2
    void a() -> clearAll
    void a(float) -> updateAll
    com.corrodinggames.rts.gameFramework.d.a a(com.corrodinggames.rts.game.n,float,float) -> findClosestPreview
    boolean a(com.corrodinggames.rts.game.n,int,int,int) -> isTileOverBlueprint
    boolean a(com.corrodinggames.rts.game.n,android.graphics.RectF,int) -> isRectOverBlueprint
    boolean a(com.corrodinggames.rts.game.n,com.corrodinggames.rts.game.units.y,int) -> isUnitOverBlueprint
    boolean a(com.corrodinggames.rts.game.units.y,com.corrodinggames.rts.game.units.y) -> doUnitsOverlap
    boolean b() -> isValid
    void b(float) -> drawAll
    void c(float) -> update
    void d(float) -> draw
com.corrodinggames.rts.gameFramework.d.b -> com.corrodinggames.rts.gameFramework.d.CloudRenderer:
    boolean a -> isInitialized
    com.corrodinggames.rts.gameFramework.m.e b -> noiseTexture
    android.graphics.Paint c -> paint
    android.graphics.RectF d -> drawRect
    float e -> scrollX
    float f -> scrollY
    boolean a() -> shouldRender
    void a(float) -> update
    void b() -> initialize
    void b(float) -> draw
com.corrodinggames.rts.gameFramework.d.c -> com.corrodinggames.rts.gameFramework.d.EffectManager:
    int a -> activeEffectsCount
    int b -> maxEffectsVeryLow
    int c -> maxEffectsLow
    int d -> maxEffectsHigh
    int e -> maxEffectsVeryHigh
    com.corrodinggames.rts.gameFramework.d.e[] f -> effects
    int g -> nextFreeEffect
    boolean h -> useStrictCounting
    int i -> maxParticlesVeryLow
    int j -> maxParticlesLow
    com.corrodinggames.rts.gameFramework.m.ae k -> shader
    com.corrodinggames.rts.gameFramework.m.e l -> texture
    com.corrodinggames.rts.gameFramework.m.e m -> texture2
    android.graphics.RectF n -> rectF
    android.graphics.Rect o -> rect
    android.graphics.Rect p -> rect2
    android.graphics.Paint q -> paint
    android.graphics.Paint r -> paint2
    com.corrodinggames.rts.gameFramework.d.g[] s -> effectTemplates
    com.corrodinggames.rts.gameFramework.d.h t -> overrideEffectQuality
    boolean u -> onlyOnScreen
    boolean v -> forceHighQuality
    android.graphics.Paint w -> linePaint
    float x -> lastUpdate
    boolean[] y -> someBooleanArray
    void a() -> setOnlyOnScreen
    void a(float) -> update
    float a(float,float) -> random
    void a(float,float,float) -> createExplosion
    com.corrodinggames.rts.gameFramework.d.e a(float,float,float,float) -> createFlameEffect
    void a(float,float,float,float,float) -> createExplosionWithVelocity
    com.corrodinggames.rts.gameFramework.d.e a(float,float,float,float,float,float) -> createLaserEffect
    com.corrodinggames.rts.gameFramework.d.e a(float,float,float,float,int) -> createFlameEffect
    com.corrodinggames.rts.gameFramework.d.e a(float,float,float,float,int,int) -> createFlameEffectInternal
    com.corrodinggames.rts.gameFramework.d.e a(float,float,float,int) -> createLightEffect
    com.corrodinggames.rts.gameFramework.d.e a(float,float,float,int,float,float) -> createRedLaserEffect
    void a(float,float,float,int,float,float,float) -> createDirectedExplosion
    com.corrodinggames.rts.gameFramework.d.e a(float,float,float,com.corrodinggames.rts.gameFramework.d.d,boolean,com.corrodinggames.rts.gameFramework.d.h) -> createEffect
    int a(float,int) -> drawEffect
    void a(android.content.Context) -> loadContent
    void a(com.corrodinggames.rts.gameFramework.d.e,com.corrodinggames.rts.gameFramework.w) -> attachEffectToGameObject
    com.corrodinggames.rts.gameFramework.d.e a(com.corrodinggames.rts.gameFramework.d.h) -> getNewEffect
    com.corrodinggames.rts.gameFramework.d.e a(com.corrodinggames.rts.gameFramework.w,int) -> createLightEffect
    com.corrodinggames.rts.gameFramework.d.e a(com.corrodinggames.rts.gameFramework.w,int,float) -> createLightEffect
    int a(java.lang.String) -> a_string_method
    void a(boolean) -> setBitmapQuality
    com.corrodinggames.rts.gameFramework.d.e a(boolean,com.corrodinggames.rts.gameFramework.d.h) -> findFreeEffect
    void b() -> setForceHighQuality
    int b(float) -> getEffectCount
    com.corrodinggames.rts.gameFramework.d.e b(float,float,float) -> createSmallExplosion
    com.corrodinggames.rts.gameFramework.d.e b(float,float,float,float) -> createSmokeEffect
    com.corrodinggames.rts.gameFramework.d.e b(float,float,float,float,float) -> createBloodEffectInternal
    com.corrodinggames.rts.gameFramework.d.e b(float,float,float,float,int) -> createFlameEffect2
    com.corrodinggames.rts.gameFramework.d.e b(float,float,float,int) -> createLightEffectInternal
    com.corrodinggames.rts.gameFramework.d.e b(float,float,float,com.corrodinggames.rts.gameFramework.d.d,boolean,com.corrodinggames.rts.gameFramework.d.h) -> createEffectInternal
    void b(com.corrodinggames.rts.gameFramework.d.h) -> setOverrideEffectQuality
    com.corrodinggames.rts.gameFramework.d.e c(float,float,float) -> createLargeExplosion
    com.corrodinggames.rts.gameFramework.d.e c(float,float,float,float,int) -> createMuzzleFlash
    com.corrodinggames.rts.gameFramework.d.e c(float,float,float,int) -> createSmallExplosion
    com.corrodinggames.rts.gameFramework.d.e d(float,float,float) -> createBloodEffect
    com.corrodinggames.rts.gameFramework.d.e d(float,float,float,int) -> createSmallExplosionInternal
    com.corrodinggames.rts.gameFramework.d.e e(float,float,float) -> createBloodEffect2
    com.corrodinggames.rts.gameFramework.d.e f(float,float,float) -> createShockwaveEffect
com.corrodinggames.rts.gameFramework.d.d -> com.corrodinggames.rts.gameFramework.d.EffectType:
com.corrodinggames.rts.gameFramework.d.e -> com.corrodinggames.rts.gameFramework.d.Effect:
    com.corrodinggames.rts.gameFramework.m.ag a() -> getFreshTexture
    com.corrodinggames.rts.gameFramework.m.ag a(float) -> getTexture
    void a(int,com.corrodinggames.rts.gameFramework.d.g,android.graphics.Rect) -> getEffectSprite
    void a(com.corrodinggames.rts.gameFramework.d.e) -> recycle
    boolean a(com.corrodinggames.rts.gameFramework.l,boolean) -> update
    void b() -> reset
    void b(float) -> draw
    void c() -> free
com.corrodinggames.rts.gameFramework.d.f -> com.corrodinggames.rts.gameFramework.d.EffectEmitter:
com.corrodinggames.rts.gameFramework.d.g -> com.corrodinggames.rts.gameFramework.d.SpriteSheet:
    void a() -> createOutline
    void a(int,float,float,android.graphics.Paint) -> drawSprite
com.corrodinggames.rts.gameFramework.d.h -> com.corrodinggames.rts.gameFramework.d.EffectQuality:
    boolean a(com.corrodinggames.rts.gameFramework.d.h) -> isLowerThan
com.corrodinggames.rts.gameFramework.e -> com.corrodinggames.rts.gameFramework.Command:
com.corrodinggames.rts.gameFramework.e.a -> com.corrodinggames.rts.gameFramework.e.FileHelper:
    com.corrodinggames.rts.gameFramework.e.c a -> defaultFileLoader
    com.corrodinggames.rts.gameFramework.e.c b -> activeFileLoader
    java.lang.Boolean c -> useStorageApi
    java.lang.String d -> overriddenExternalPath
    java.lang.String e -> loadError
    java.lang.String a() -> getInternalPath
    com.corrodinggames.rts.gameFramework.e.c a(int) -> createFileLoader
    java.io.File a(android.content.Context,java.lang.String,java.lang.String) -> createTempFileInContext
    com.corrodinggames.rts.gameFramework.utility.j a(java.io.File) -> openFile
    boolean a(java.io.File,java.io.File) -> renameFile
    java.io.OutputStream a(java.io.File,boolean) -> openOutputStream
    boolean a(java.lang.String) -> isManagedPath
    java.lang.String a(java.lang.String,java.lang.String) -> findFileWithExtension
    java.io.File a(java.lang.String,java.lang.String,boolean) -> createTempFile
    java.lang.String[] a(java.lang.String,boolean) -> listFilesRecursive
    com.corrodinggames.rts.gameFramework.e.b a(boolean) -> getFileAccessFlags
    void b() -> initialize
    boolean b(java.io.File) -> deleteDirectory
    boolean b(java.io.File,java.io.File) -> renameFileInternal
    void b(java.lang.String) -> setWritePath
    java.io.OutputStream b(java.lang.String,boolean) -> openOutputStreamByPath
    java.lang.String c() -> getReadPath
    void c(java.io.File) -> scanFile
    boolean c(java.lang.String) -> isAbstractPath
    java.lang.String d() -> getExternalStoragePath
    java.lang.String d(java.lang.String) -> getFileName
    java.lang.String e() -> getWorkingDirectory
    java.lang.String e(java.lang.String) -> convertAbstractPath
    boolean f() -> isZip
    boolean f(java.lang.String) -> isDirectoryNonZip
    boolean g(java.lang.String) -> isDirectory
    java.lang.String[] h(java.lang.String) -> listFiles
    boolean i(java.lang.String) -> fileExists
    com.corrodinggames.rts.gameFramework.utility.j j(java.lang.String) -> openAsset
    com.corrodinggames.rts.gameFramework.utility.j k(java.lang.String) -> openFileByPath
    boolean l(java.lang.String) -> deleteFile
    long m(java.lang.String) -> getFileSize
    java.lang.String n(java.lang.String) -> getAbsolutePath
    java.lang.String o(java.lang.String) -> mapPath
    java.lang.String p(java.lang.String) -> getSourcePath
com.corrodinggames.rts.gameFramework.e.b -> com.corrodinggames.rts.gameFramework.e.FileAccessFlags:
    boolean a -> useOverriddenExternalPath
    boolean b -> useSaf
    boolean c -> useDirectAccess
com.corrodinggames.rts.gameFramework.e.c -> com.corrodinggames.rts.gameFramework.e.FileLoader:
    java.lang.String a -> TAG
    boolean b -> debug
    boolean c -> trace
    boolean d -> disableAssets
    java.lang.String e -> lastError
    java.lang.String f -> externalStoragePath
    java.lang.String a() -> getLastError
    void a(java.io.File) -> scanFile
    boolean a(java.io.File,java.io.File) -> renameFile
    void a(java.lang.String) -> setLastError
    java.lang.String a(java.lang.String,java.lang.String) -> findFileExtension
    java.io.File a(java.lang.String,java.lang.String,boolean) -> getRWFile
    boolean a(java.lang.String,boolean) -> isDirectory
    boolean b(java.io.File) -> deleteFile
    boolean b(java.lang.String) -> isAbstractPath
    java.lang.String c() -> getCachePath
    boolean c(java.lang.String) -> isAbsolutePath
    java.io.OutputStream c(java.lang.String,boolean) -> openOutputStream
    java.lang.String d(java.lang.String) -> applyModPath
    java.lang.String e(java.lang.String) -> getFileName
    java.lang.String f() -> getExternalStoragePath
    java.lang.String f(java.lang.String) -> convertAbstractPath
    boolean g(java.lang.String) -> fileExists
    java.io.File h(java.lang.String) -> createFileCaseInsensitive
    com.corrodinggames.rts.gameFramework.utility.j i(java.lang.String) -> openAsset
    com.corrodinggames.rts.gameFramework.utility.j j(java.lang.String) -> openAssetSteam
    boolean k(java.lang.String) -> createDirectory
    long l(java.lang.String) -> getLastModified
    java.lang.String m(java.lang.String) -> getStorageTypeForPath
    java.lang.String n(java.lang.String) -> fixPath
    boolean p(java.lang.String) -> isSaf
com.corrodinggames.rts.gameFramework.e.d -> com.corrodinggames.rts.gameFramework.e.CustomPathFileLoader:
    java.lang.String g -> dirPath
    java.lang.String h -> name
    java.lang.String i -> mapPath
    java.lang.String d() -> getName
    boolean e() -> isZip
com.corrodinggames.rts.gameFramework.e.e -> com.corrodinggames.rts.gameFramework.e.MergedFileLoader:
    com.corrodinggames.rts.gameFramework.e.c g -> fileLoader1
    com.corrodinggames.rts.gameFramework.e.c h -> fileLoader2
    java.lang.String i -> tag1
    java.lang.String j -> tag2
    java.lang.String o(java.lang.String) -> addTag1Prefix
    java.lang.String q(java.lang.String) -> fixPath
    com.corrodinggames.rts.gameFramework.e.c r(java.lang.String) -> getFileLoaderForPath
    com.corrodinggames.rts.gameFramework.e.c s(java.lang.String) -> getPrimaryFileLoaderForPath
com.corrodinggames.rts.gameFramework.e.f -> com.corrodinggames.rts.gameFramework.e.NullFileLoader:
    java.lang.String b() -> getPath
    java.lang.String[] b(java.lang.String,boolean) -> listDir
com.corrodinggames.rts.gameFramework.e.g -> com.corrodinggames.rts.gameFramework.e.CacheManager:
    boolean a -> DEBUG
    java.lang.String a(char) -> getCharAsString
    java.lang.String a(java.lang.String) -> encodeFileName
    java.lang.String a(java.lang.String,char) -> encodeChar
    java.io.FileInputStream a(java.lang.String,java.lang.String) -> readFromCache
    boolean a(java.lang.String,java.lang.String,java.io.InputStream) -> saveToCache
    boolean a(java.lang.String,java.lang.String,java.lang.String) -> saveToCache
    java.lang.String a(java.lang.String,java.lang.String,boolean) -> getCachePath
    java.lang.String b(java.lang.String,java.lang.String) -> readStringFromCache
    com.corrodinggames.rts.gameFramework.e.h b(java.lang.String,java.lang.String,java.lang.String) -> openAssetCachedInternal
    void c(java.lang.String,java.lang.String) -> deleteFromCache
    java.lang.String[] d(java.lang.String,java.lang.String) -> listDirCached
    java.io.InputStream e(java.lang.String,java.lang.String) -> openAssetCached
    boolean f(java.lang.String,java.lang.String) -> existsInCache
com.corrodinggames.rts.gameFramework.e.h -> com.corrodinggames.rts.gameFramework.e.CachedInputStream:
    java.io.InputStream a -> inputStream
    void a() -> close
com.corrodinggames.rts.gameFramework.f -> com.corrodinggames.rts.gameFramework.Utility:
    void a() -> resetSharedRandomSeed
    java.lang.String a(byte[]) -> toHexString
    void a(byte[],byte[]) -> compareByteArrays
    double a(double) -> md5FromString
    double a(double,double) -> min
    java.lang.String a(double,int) -> toHexString
    float a(float) -> sortRect
    float a(float,float) -> trim
    float a(float,float,float) -> distanceSq
    float a(float,float,float,float) -> distanceSq
    void a(float,float,float,android.graphics.PointF) -> rotatePoint
    float a(float,float,int) -> getRandomIntInRange
    java.lang.String a(float,int) -> padString
    float a(float,boolean) -> countOccurrences
    int a(int) -> sqrt
    int a(int,int) -> getRandomIntInRange
    int a(int,int,float) -> getRandomIntInRange
    int a(int,int,int) -> getDeterministicRandomIntInRange
    int a(int,int,int,int) -> countChars
    java.lang.String a(long) -> copyStream
    long a(long,long) -> getStackTrace
    boolean a(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF) -> replace
    void a(android.graphics.Rect) -> sqrt
    void a(android.graphics.Rect,float) -> grow
    boolean a(android.graphics.Rect,android.graphics.RectF) -> readFileToString
    void a(android.graphics.RectF) -> sortRect
    void a(android.graphics.RectF,float) -> grow
    boolean a(android.graphics.RectF,android.graphics.RectF) -> getStackTrace
    float a(com.corrodinggames.rts.game.units.am,float,float,int) -> copyStream
    int a(com.corrodinggames.rts.game.units.am,int,int) -> readStreamToString
    int a(com.corrodinggames.rts.gameFramework.w,int,int,int) -> getDeterministicRandomInt
    java.lang.String a(java.io.File) -> join
    java.lang.String a(java.io.InputStream) -> readStreamToString
    void a(java.io.InputStream,java.io.OutputStream) -> copyStream
    java.lang.String a(java.lang.CharSequence,java.lang.Iterable) -> formatDate
    java.lang.String a(java.lang.Class,int) -> countChars
    java.lang.String a(java.lang.Exception) -> formatLong
    java.lang.String a(java.lang.Exception,boolean) -> areEqual
    boolean a(java.lang.Integer,java.lang.Integer) -> sqrt
    java.lang.String a(java.lang.String) -> formatDate
    int a(java.lang.String,char) -> concat
    java.lang.String a(java.lang.String,int) -> padLeft
    java.lang.String a(java.lang.String,int,java.lang.String) -> replace
    java.lang.String a(java.lang.String,java.lang.String) -> booleanToString
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> readStreamToString
    java.lang.String a(boolean) -> padString
    java.lang.String b() -> toString
    java.lang.String b(byte[]) -> formatDouble
    java.lang.String b(double) -> truncateString
    java.lang.String b(double,int) -> formatDouble
    float b(float) -> radiansToDegrees
    float b(float,float) -> clamp
    float b(float,float,float) -> clampTo255
    float b(float,float,float,float) -> distance
    float b(float,float,int) -> clamp
    int b(int) -> clampTo255
    int b(int,int) -> max
    int b(int,int,int) -> distance
    int b(int,int,int,int) -> longToIntArray
    int[] b(long) -> isGreaterThan
    void b(android.graphics.Rect,float) -> grow2
    float b(com.corrodinggames.rts.game.units.am,float,float,int) -> clamp
    java.lang.String b(java.io.InputStream) -> endsWith
    java.lang.String b(java.lang.Exception) -> isGreaterThan
    java.lang.String b(java.lang.String) -> getParentDir
    boolean b(java.lang.String,char) -> endsWithChar
    java.lang.String b(java.lang.String,int) -> truncateWithEllipsis
    java.lang.String b(java.lang.String,java.lang.String) -> getRandomUUID
    int c() -> doubleToString
    byte[] c(byte[]) -> isSame
    java.lang.String c(double) -> md5
    float c(float) -> abs
    float c(float,float) -> randomFloatInRange
    float c(float,float,float) -> endsWith
    int c(float,float,float,float) -> distanceInt
    int c(int) -> getRandomInt
    int c(int,int) -> min
    java.lang.String c(java.lang.String) -> md5
    java.lang.String[] c(java.lang.String,char) -> splitByChar
    java.lang.String c(java.lang.String,int) -> split
    boolean c(java.lang.String,java.lang.String) -> getRandomBoolean
    float d(float) -> round
    float d(float,float) -> m14571d
    android.graphics.PointF d(float,float,float) -> createPointWithOffset
    float d(float,float,float,float) -> getAngleBetweenPoints
    int d(int) -> abs
    java.lang.String d(java.lang.String) -> abs
    java.lang.String d(java.lang.String,int) -> removeEnd
    boolean d(java.lang.String,java.lang.String) -> md5
    float e(float) -> ceil
    float e(float,float) -> createAndOpenFile
    boolean e(float,float,float) -> isDifferenceWithinTolerance
    java.lang.String e(int) -> getRandomAlphanumericString
    java.lang.String e(java.lang.String) -> truncate
    java.lang.String e(java.lang.String,int) -> truncate
    int f(float) -> max
    float f(float,float) -> max
    float f(float,float,float) -> fromHexString
    java.lang.String f(int) -> formatNumber
    byte[] f(java.lang.String) -> removeStart
    java.lang.String f(java.lang.String,int) -> formatSize
    java.lang.String g(float) -> min
    float g(float,float) -> min
    java.lang.String g(int) -> formatMilliseconds
    java.lang.String g(java.lang.String) -> getFileNameFromPath
    java.lang.String h(float) -> toString
    boolean h(float,float) -> isClose
    java.lang.String h(int) -> toHexString
    java.lang.String h(java.lang.String) -> getRealPath
    float i(float) -> getRealAssetPath
    float i(float,float) -> fastAtan2
    java.lang.String i(java.lang.String) -> endsWithSlash
    float j(float) -> fastSin
    boolean j(float,float) -> isGreaterThan
    java.lang.String j(java.lang.String) -> getFileName
    float k(float) -> fastCos
    boolean k(float,float) -> isLessThan
    java.lang.String k(java.lang.String) -> getFileNameWithoutExtension
    java.lang.Integer l(java.lang.String) -> parseIntOrNull
    java.lang.Long m(java.lang.String) -> parseLongOrNull
    boolean n(java.lang.String) -> removeBadChars
    java.lang.String o(java.lang.String) -> urlDecode
    java.lang.String p(java.lang.String) -> split
    java.lang.String q(java.lang.String) -> isAlphanumeric
    boolean r(java.lang.String) -> isNumeric
    boolean s(java.lang.String) -> isInteger
com.corrodinggames.rts.gameFramework.f.a -> com.corrodinggames.rts.gameFramework.f.GameInterfaceRenderer:
    com.corrodinggames.rts.gameFramework.f.g a -> gameUI
    android.graphics.RectF A -> selectionRectF3
    com.corrodinggames.rts.game.units.am aa -> selectedUnit
    java.util.ArrayList aA -> arrayList
    com.corrodinggames.rts.game.units.a.s ab -> unitCommand
    android.graphics.Rect aB -> rect
    float ac -> commandTimer
    float aC -> infoTextTimer
    long ad -> lastCommandTime
    com.corrodinggames.rts.gameFramework.f.v aD -> vObject
    float ae -> commandX
    float af -> commandY
    java.lang.String ag -> unselectAllText
    java.lang.String ah -> allyUnitText
    java.lang.String ai -> enemyUnitText
    java.lang.String aj -> neutralUnitText
    java.lang.String ak -> ownedByText
    java.lang.String al -> unitCapReachedText
    java.lang.String am -> messageText
    float an -> messageTimer
    float ao -> infoTextAlpha
    boolean ap -> showInfoText
    java.util.ArrayList aq -> unitList
    com.corrodinggames.rts.game.units.a.y as -> commandY2
    com.corrodinggames.rts.game.units.a.d at -> commandD
    java.util.ArrayList au -> unitList2
    java.util.ArrayList av -> unitList3
    com.corrodinggames.rts.gameFramework.utility.m aw -> gameObjectList
    java.util.ArrayList ax -> unitList4
    android.graphics.RectF ay -> rectF
    com.corrodinggames.rts.gameFramework.l b -> gameEngine
    android.graphics.Rect B -> minimapRect
    boolean c -> isDragging
    android.graphics.RectF C -> minimapRectF
    boolean d -> isDraggingSelectionBox
    boolean D -> isZoomButtonPressed
    boolean e -> isSelecting
    float E -> initialTouchY
    float f -> selectionTimer
    float F -> zoomButtonTimer
    android.graphics.Paint g -> paintSelectionBox
    float G -> mouseWheelZoomAccumulator
    android.graphics.Paint h -> paintHealthBar
    android.graphics.Paint i -> paintUnitInfo
    boolean I -> isMultiTouchZooming
    android.graphics.Paint j -> paintUnitName
    float J -> multiTouchCenterX
    android.graphics.Paint k -> paintUnitType
    float K -> multiTouchCenterY
    android.graphics.Paint l -> paintUnitTeam
    float L -> multiTouchInitialDistance
    android.graphics.Paint m -> paintUnitStatus
    float M -> multiTouchCurrentX
    com.corrodinggames.rts.gameFramework.m.ag n -> paint1
    float N -> multiTouchCurrentY
    com.corrodinggames.rts.gameFramework.m.ag o -> paint2
    float O -> multiTouchCurrentDistance
    android.graphics.Paint p -> paintMinimap
    int P -> multiTouchPointerCount
    android.graphics.Paint q -> textPaint
    float Q -> initialZoomLevel
    android.graphics.Paint r -> textPaint2
    float R -> gestureZoomTimer
    android.graphics.Rect s -> zoomButtonRect
    com.corrodinggames.rts.gameFramework.m.e S -> zoomButtonTexture
    android.graphics.RectF t -> zoomButtonRectF
    com.corrodinggames.rts.gameFramework.m.e T -> lockIconTexture
    android.graphics.Rect u -> unitRect
    com.corrodinggames.rts.gameFramework.m.e U -> pauseTexture
    android.graphics.Rect v -> unitRect2
    com.corrodinggames.rts.gameFramework.m.e V -> replayPauseTexture
    android.graphics.Rect w -> unitRect3
    com.corrodinggames.rts.gameFramework.m.e W -> fastTexture
    android.graphics.RectF x -> selectionRectF
    com.corrodinggames.rts.gameFramework.m.e X -> leaderboardTexture
    android.graphics.RectF y -> selectionRectF2
    android.graphics.Paint Y -> staticPaint
    android.graphics.Rect z -> selectionRect
    android.graphics.PorterDuffColorFilter Z -> staticColorFilter
    void a() -> initializeStrings
    void a(float) -> handleZoomAndGestures
    void b() -> initializeUI
    void b(float) -> handleUnitSelection
    float p() -> getMaxZoomLevel
    float q() -> getMinZoomLevel
    float r() -> getScreenRatio
com.corrodinggames.rts.gameFramework.f.au -> com.corrodinggames.rts.gameFramework.f.CacheEntry:
com.corrodinggames.rts.gameFramework.f.b -> com.corrodinggames.rts.gameFramework.f.BackgroundTask:
    java.lang.String a -> taskName
    java.lang.String a() -> getTaskName
    void b() -> run
com.corrodinggames.rts.gameFramework.f.c -> com.corrodinggames.rts.gameFramework.f.UnitActionTimer:
    com.corrodinggames.rts.game.units.am a -> unit
    com.corrodinggames.rts.game.units.a.s b -> action
    float c -> timer
    boolean d -> isNegative
    boolean e -> field_e
    com.corrodinggames.rts.gameFramework.utility.m f -> timers
    void a(float) -> updateTimers
    com.corrodinggames.rts.gameFramework.f.c a(com.corrodinggames.rts.game.units.am,com.corrodinggames.rts.game.units.a.s,boolean) -> findTimer
    void a(com.corrodinggames.rts.game.units.am,com.corrodinggames.rts.game.units.a.s,boolean,boolean) -> startTimer
    float b(com.corrodinggames.rts.game.units.am,com.corrodinggames.rts.game.units.a.s,boolean) -> getTimerValue
com.corrodinggames.rts.gameFramework.f.d -> com.corrodinggames.rts.gameFramework.f.TextRenderer:
    android.graphics.Rect a -> tempRect
    java.util.ArrayList b -> lines
    android.graphics.RectF c -> backgroundRect
    android.graphics.RectF d -> textBounds
    int a(android.graphics.Paint) -> getLineHeight
    float a(com.corrodinggames.rts.gameFramework.m.e,float,float) -> getScale
    float a(com.corrodinggames.rts.gameFramework.m.e,float,float,float,float) -> getScaleWithBounds
    void a(java.lang.String,float,float,android.graphics.Paint,android.graphics.Paint,float,float,float,float) -> drawTextWithBackground
    java.util.ArrayList a(java.lang.String,android.graphics.Rect,android.graphics.Paint,android.graphics.Paint,boolean) -> wrapText
    int b(android.graphics.Paint) -> getCharWidth
com.corrodinggames.rts.gameFramework.f.e -> com.corrodinggames.rts.gameFramework.f.GameStatistic:
    java.lang.String a -> name
    java.lang.String b -> stringValue
    float c -> floatValue
    float d -> field_d
    java.util.ArrayList a() -> getGameStatistics
com.corrodinggames.rts.gameFramework.f.f -> com.corrodinggames.rts.gameFramework.f.EndGameScreen:
    android.graphics.Paint a -> textPaint
    boolean b -> field_b
    float c -> timer
    float d -> fireworkTimer
    android.graphics.Rect e -> textBounds
    android.graphics.Rect f -> tempRect
    android.graphics.Rect g -> rateGamePopupRect
    com.corrodinggames.rts.gameFramework.f.y h -> statsView
    java.util.ArrayList i -> backgroundTasks
    int j -> buttonHeight
    int k -> buttonWidth
    int l -> buttonSpacing
    android.graphics.Rect m -> screenBounds
    boolean n -> field_n
    boolean o -> field_o
    java.lang.String p -> rateGameText
    java.lang.String q -> rateGameYesText
    java.lang.String r -> rateGameNoText
    boolean s -> showRateGamePopup
    float t -> field_t
    void a() -> setupButtonActions
    void a(float) -> update
    boolean b() -> isGameOver
    void b(float) -> draw
    void c() -> loadStats
    void c(float) -> drawRateGamePopup
com.corrodinggames.rts.gameFramework.f.g -> com.corrodinggames.rts.gameFramework.f.GameUI:
    com.corrodinggames.rts.game.units.a.e l -> attackMoveAction
    com.corrodinggames.rts.game.units.a.f m -> guardUnitAction
    com.corrodinggames.rts.game.units.a.i n -> patrolAction
    com.corrodinggames.rts.game.units.a.d o -> attackModeAction
    com.corrodinggames.rts.game.units.a.j p -> pingMapAction
    com.corrodinggames.rts.game.units.a.r q -> mapPingToolAction
    com.corrodinggames.rts.game.units.a.q r -> teamChatToolAction
com.corrodinggames.rts.gameFramework.f.h -> com.corrodinggames.rts.gameFramework.f.ConfirmationResult:
com.corrodinggames.rts.gameFramework.f.i -> com.corrodinggames.rts.gameFramework.f.IconGroup:
com.corrodinggames.rts.gameFramework.f.j -> com.corrodinggames.rts.gameFramework.f.PlacementFinder:
    android.graphics.Point a -> tempPoint
    android.graphics.Point a(int,int,int) -> findClosestOpenPlacement
com.corrodinggames.rts.gameFramework.f.k -> com.corrodinggames.rts.gameFramework.f.Leaderboard:
    com.corrodinggames.rts.gameFramework.f.g a -> gameUi
    com.corrodinggames.rts.gameFramework.l b -> gameEngine
    android.graphics.Paint c -> textPaint
    android.graphics.Paint d -> titlePaint
    android.graphics.RectF e -> backgroundRect
    void a() -> initialize
    int a(float,int) -> draw
com.corrodinggames.rts.gameFramework.f.l -> com.corrodinggames.rts.gameFramework.f.LeaderboardRow:
    android.graphics.Paint a -> labelPaint
    java.lang.String b -> label
    int c -> teamId
    float d -> labelWidth
    android.graphics.Paint e -> valuePaint
    java.lang.String f -> value
    int g -> color
    float h -> valueWidth
com.corrodinggames.rts.gameFramework.f.m -> com.corrodinggames.rts.gameFramework.f.MessageManager:
    int a -> MAX_MESSAGES
    com.corrodinggames.rts.gameFramework.f.g b -> gameUi
    com.corrodinggames.rts.gameFramework.l c -> gameEngine
    android.graphics.Paint d -> textPaint
    boolean e -> hasShownMuteWarning
    java.util.ArrayList f -> messages
    void a() -> initialize
    int a(float,int) -> draw
    com.corrodinggames.rts.gameFramework.f.n a(java.lang.String,java.lang.String) -> addMessage
    void b() -> clear
    void c() -> pruneMessages
com.corrodinggames.rts.gameFramework.f.n -> com.corrodinggames.rts.gameFramework.f.Message:
    java.lang.String a -> author
    java.lang.String b -> text
    long c -> timestamp
    java.lang.String d -> formattedTimestamp
    int e -> field_e
    int f -> field_f
    int a() -> getTimeDifference
    boolean b() -> shouldDisplay
com.corrodinggames.rts.gameFramework.f.o -> com.corrodinggames.rts.gameFramework.f.Minimap:
    float a -> x
    android.graphics.Paint A -> paint11
    java.util.ArrayList aa -> list2
    android.graphics.Rect ab -> rect4
    java.util.ArrayList ac -> resPool
    android.graphics.Point ad -> point
    com.corrodinggames.rts.gameFramework.m.m ae -> graphicsOperation
    java.util.ArrayList af -> _graphicsOperations
    java.util.ArrayList ag -> list3
    float b -> y
    android.graphics.Paint B -> paint12
    float c -> width
    android.graphics.Paint C -> paint13
    float d -> height
    android.graphics.Paint D -> paint14
    boolean e -> isSetup
    android.graphics.Rect E -> rect2
    boolean f -> isMapReady
    com.corrodinggames.rts.gameFramework.m.e F -> backgroundTexture
    int g -> mapWidth
    com.corrodinggames.rts.gameFramework.m.y G -> backgroundGraphics
    int h -> mapHeight
    com.corrodinggames.rts.gameFramework.m.e H -> fogTexture
    float i -> scaleX
    com.corrodinggames.rts.gameFramework.m.y I -> fogGraphics
    float j -> scaleY
    com.corrodinggames.rts.gameFramework.m.e J -> unitsTexture
    int k -> field_k
    com.corrodinggames.rts.gameFramework.m.y K -> unitsGraphics
    int l -> field_l
    float L -> field_L
    boolean m -> field_m
    float M -> field_M
    android.graphics.Paint n -> paint
    float N -> field_N
    android.graphics.Paint o -> paint2
    boolean O -> field_O
    android.graphics.Paint p -> paint3
    boolean P -> field_P
    float q -> field_q
    float Q -> field_Q
    float r -> field_r
    int R -> field_R
    android.graphics.Paint s -> paint4
    int S -> field_S
    android.graphics.Paint t -> paint5
    com.corrodinggames.rts.gameFramework.m.e T -> pingTexture
    android.graphics.Paint u -> paint6
    com.corrodinggames.rts.gameFramework.m.e U -> buildingTexture
    android.graphics.Paint v -> paint7
    android.graphics.Rect V -> rect3
    android.graphics.Rect w -> rect
    com.corrodinggames.rts.gameFramework.m.ag[] W -> pings
    android.graphics.Paint x -> paint8
    com.corrodinggames.rts.gameFramework.m.ag X -> lastPing
    android.graphics.Paint y -> paint9
    float Y -> lastPingTime
    android.graphics.Paint z -> paint10
    java.util.ArrayList Z -> list
    void a() -> updateMinimapPosition
    void a(float) -> update
    void a(float,float) -> drawFog
    int a(int) -> darkenColor
    void a(int,int,float,com.corrodinggames.rts.game.units.am) -> ping
    void a(int,int,com.corrodinggames.rts.gameFramework.f.r) -> addEffect
    com.corrodinggames.rts.gameFramework.f.s a(int,android.graphics.Paint) -> getLineDrawer
    void a(android.content.Context) -> init
    void a(com.corrodinggames.rts.game.b.b,boolean) -> reset
    void a(com.corrodinggames.rts.game.units.am) -> addGraphicsOperation
    void a(com.corrodinggames.rts.gameFramework.f.s) -> returnLineDrawer
    void a(com.corrodinggames.rts.gameFramework.m.y,int,int,float,float) -> drawUnitsAndBuildings
    int b() -> getBottomY
    float b(float) -> worldToMinimapX
    android.graphics.Point b(float,float) -> worldToScreen
    void c() -> release
    float c(float) -> clampX
    android.graphics.Point c(float,float) -> screenToWorld
    float d() -> getCameraZoom
    float d(float) -> clampY
    void e() -> createImageBuffers
    void e(float) -> draw
    void f() -> updateDimensions
    void g() -> setup
    void h() -> updateElementPositions
com.corrodinggames.rts.gameFramework.f.p -> com.corrodinggames.rts.gameFramework.f.MinimapEffect:
    int a -> x
    int b -> y
    float c -> intensity
    float d -> duration
    com.corrodinggames.rts.gameFramework.f.r e -> type
    com.corrodinggames.rts.gameFramework.f.o f -> minimap
com.corrodinggames.rts.gameFramework.f.q -> com.corrodinggames.rts.gameFramework.f.MinimapPing:
    boolean a -> isEnemy
    int b -> x
    int c -> y
    float d -> radius
    com.corrodinggames.rts.gameFramework.f.o f -> minimap
com.corrodinggames.rts.gameFramework.f.r -> com.corrodinggames.rts.gameFramework.f.MinimapEffectType:
com.corrodinggames.rts.gameFramework.f.s -> com.corrodinggames.rts.gameFramework.f.LineDrawer:
    float[] a -> vertices
    int b -> vertexIndex
    android.graphics.Paint c -> paint
    int d -> capacity
    boolean e -> drawAsPoints
    android.graphics.RectF f -> pointRect
    void a(float,float) -> addPoint
    void a(com.corrodinggames.rts.gameFramework.m.y) -> draw
com.corrodinggames.rts.gameFramework.f.t -> com.corrodinggames.rts.gameFramework.f.StrategicPoint:
    int a -> gridX
    int b -> gridY
    int c -> screenX
    int d -> screenY
    boolean e -> isVisible
    com.corrodinggames.rts.gameFramework.f.o f -> minimap
com.corrodinggames.rts.gameFramework.f.u -> com.corrodinggames.rts.gameFramework.f.MinimapGraphicsOperation:
    com.corrodinggames.rts.game.units.am a -> unit
    com.corrodinggames.rts.gameFramework.f.o b -> minimap
com.corrodinggames.rts.gameFramework.g.a -> com.corrodinggames.rts.gameFramework.g.TeamStats:
    com.corrodinggames.rts.gameFramework.g.f a -> statType
    com.corrodinggames.rts.gameFramework.g.c b -> statGroup
    java.util.ArrayList c -> comparators
    void a() -> rebuild
    java.lang.String a(com.corrodinggames.rts.gameFramework.g.d) -> getFormattedValue
    java.lang.String a(com.corrodinggames.rts.gameFramework.g.f,int) -> formatValue
    void b() -> update
    void c() -> nextSort
    java.util.ArrayList d() -> getComparators
    com.corrodinggames.rts.gameFramework.g.f e() -> getStatType
    com.corrodinggames.rts.gameFramework.g.c f() -> getStatGroup
com.corrodinggames.rts.gameFramework.g.b -> com.corrodinggames.rts.gameFramework.g.TeamObjectComparator:
    java.lang.String a -> name
    int b -> teamColorId
    java.util.ArrayList c -> teams
    boolean a() -> isGroup
    int a(com.corrodinggames.rts.gameFramework.g.f) -> getStat
    java.lang.String b() -> getName
    int c() -> getUnitCount
    int d() -> getIncome
com.corrodinggames.rts.gameFramework.g.c -> com.corrodinggames.rts.gameFramework.g.StatGroup:
com.corrodinggames.rts.gameFramework.g.d -> com.corrodinggames.rts.gameFramework.g.GameObjectComparator:
    int a -> cachedStat
    int b(com.corrodinggames.rts.gameFramework.g.d) -> updateCachedStat
    void b(com.corrodinggames.rts.gameFramework.g.f) -> getName
com.corrodinggames.rts.gameFramework.g.e -> com.corrodinggames.rts.gameFramework.g.TeamComparator:
    com.corrodinggames.rts.game.n a -> team
    boolean a() -> isGroup
    int a(com.corrodinggames.rts.gameFramework.g.f) -> getStat
    java.lang.String b() -> getName
    int c() -> getUnitCount
    int d() -> getIncome
com.corrodinggames.rts.gameFramework.g.f -> com.corrodinggames.rts.gameFramework.g.StatType:
    int a(com.corrodinggames.rts.game.n) -> calculate
com.corrodinggames.rts.gameFramework.h.a -> com.corrodinggames.rts.gameFramework.local.Locale:
    java.util.ResourceBundle a -> resourceBundle
    boolean b -> forceEnglish
    int c -> reloadCount
    java.lang.String d -> overrideLanguageCode
    java.util.regex.Pattern e -> mapNamePattern
    java.util.regex.Pattern f -> inlineBlockPattern
    void a() -> initialize
    java.util.PropertyResourceBundle a(java.lang.String) -> loadBundleFromPath
    java.lang.String a(java.lang.String,java.lang.Object[]) -> get
    java.lang.String a(java.lang.String,java.lang.String,java.lang.Object[]) -> getFormattedString
    java.util.ResourceBundle a(java.lang.String,java.util.Locale) -> loadBundle
    java.lang.String a(java.lang.String,java.util.Locale,boolean,boolean) -> buildLocaleString
    java.util.ResourceBundle b() -> getResourceBundle
    java.lang.String b(java.lang.String) -> translateMapName
    java.lang.String c() -> getLanguage
    java.lang.String c(java.lang.String) -> convertInlineBlocks
    java.util.Locale d() -> getDefaultLocale
    java.lang.String d(java.lang.String) -> getRawString
    void e() -> reload
    boolean e(java.lang.String) -> hasString
com.corrodinggames.rts.gameFramework.h.b -> com.corrodinggames.rts.gameFramework.local.MergedResourceBundle:
com.corrodinggames.rts.gameFramework.i.a -> com.corrodinggames.rts.gameFramework.i.ModManager:
    java.lang.String a -> minVersion
    java.lang.String b -> latestVersion
    com.corrodinggames.rts.gameFramework.i.b c -> modInfo
    java.lang.Object d -> listLock
    java.util.ArrayList e -> mods
    java.util.ArrayList f -> invalidMods
    void a() -> loadAndApply
    java.lang.String[] a(java.lang.String[],java.lang.String) -> addExtraMapsForPath
    com.corrodinggames.rts.gameFramework.i.b a(int) -> getModByMapsCount
    void a(com.corrodinggames.rts.gameFramework.i.b) -> removeMod
    void a(java.lang.String) -> checkMinVersion
    int a(java.lang.String,int) -> parseVersionPart
    void a(java.lang.String,com.corrodinggames.rts.gameFramework.i.b) -> addInvalidMod
    void a(java.lang.String,java.lang.String) -> checkVersion
    com.corrodinggames.rts.gameFramework.i.b a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,int) -> addOrUpdateMod
    void a(java.lang.String,boolean,boolean) -> loadModsFromDir
    int a(boolean) -> getEnabledModCount
    void a(boolean,boolean) -> applyMods
    int b() -> getEnabledModsWithLevelsCount
    java.lang.String b(java.lang.String) -> cleanVersionString
    int c() -> getStorageModsCount
    com.corrodinggames.rts.gameFramework.i.b c(java.lang.String) -> getModByUuid
    void d() -> backupModSelection
    int d(java.lang.String) -> getModCountByPaddedTitle
    void e() -> saveModSelection
    com.corrodinggames.rts.gameFramework.i.b e(java.lang.String) -> getModByShortName
    void f() -> loadModSelection
    com.corrodinggames.rts.gameFramework.i.b f(java.lang.String) -> getModByName
    void g() -> disableAllMods
    java.util.ArrayList g(java.lang.String) -> getLegacyDisabledModsByPath
    int h() -> getActiveModCount
    com.corrodinggames.rts.gameFramework.i.b h(java.lang.String) -> getLinkedModForFile
    java.util.ArrayList i() -> getAllUnitBlueprintsFromEnabledMods
    java.util.ArrayList j() -> getActiveMods
    java.util.ArrayList k() -> loadAllMods
    void l() -> applyAndSaveMods
    void m() -> triggerStatisticsUpdate
    void n() -> clearInvalidMods
com.corrodinggames.rts.gameFramework.i.b -> com.corrodinggames.rts.gameFramework.i.ModInfo:
    int a -> id
    boolean A -> isEnabledAndNotHidden
    int b -> nextId
    boolean B -> canBeDisabled
    java.lang.String c -> dirName
    boolean C -> disabledOrNotLoaded
    java.lang.String d -> shortName
    boolean D -> hasError
    java.lang.String e -> uuid
    int E -> imageMemory
    boolean f -> disabled
    int F -> soundMemory
    boolean g -> wasDisabled
    long G -> totalImageMemory
    boolean h -> selectionChanged
    long H -> totalSoundMemory
    boolean i -> foundInSettings
    int I -> imageCount
    boolean j -> isArchive
    int J -> soundCount
    long k -> steamId
    int K -> musicCount
    boolean l -> found
    int L -> mapsCount
    boolean m -> isCoreMod
    java.lang.String M -> musicFolder
    java.lang.String n -> slowExternalPath
    boolean N -> playMusicExclusively
    java.lang.String o -> storageDescription
    boolean O -> addToNormalPlaylist
    java.lang.String p -> path
    int P -> hasImages
    java.lang.String q -> sourceFolder
    java.util.ArrayList Q -> unitBlueprints
    boolean r -> dataRefreshed
    java.lang.String R -> firstError
    java.lang.String s -> title
    java.lang.String S -> firstWarning
    java.lang.String t -> name
    java.lang.String T -> otherErrors
    java.lang.String u -> description
    java.util.ArrayList U -> warnings
    java.lang.String v -> minVersion
    java.util.ArrayList V -> errors
    int w -> customUnitCount
    int x -> modIndex
    boolean y -> isFromSteam
    boolean z -> isBuiltIn
    java.lang.String a() -> getDisplayTitle
    boolean a(long) -> setSteamId
    void a(java.lang.String) -> addError
    java.lang.String a(java.lang.String,int) -> findModInfoFile
    java.lang.String b() -> getPaddedTitle
    void b(java.lang.String) -> addWarning
    java.lang.String c() -> getPaddedTitle40
    java.lang.String c(java.lang.String) -> getModInfoValue
    int d() -> getMapCount
    java.lang.String e() -> getDescription
    java.lang.String f() -> getFullDescription
    java.lang.String g() -> getSourceFolder
    java.lang.String h() -> getPath
    java.lang.String i() -> getAbsolutePath
    java.lang.String j() -> getSourceFolderRaw
    java.lang.String k() -> getCanonicalPath
    java.lang.String l() -> getErrorsAndWarnings
    boolean m() -> isEnabled
    void n() -> fixSourceFolder
    com.corrodinggames.rts.gameFramework.utility.ab o() -> getModInfoFile
    java.lang.String p() -> getThumbnail
    java.util.ArrayList q() -> getUnitBlueprints
    void r() -> refreshData
    java.lang.String s() -> getMemoryUsageString
    void t() -> logMemoryUsage
    boolean u() -> delete
    boolean v() -> canBeDeleted
    java.lang.String w() -> getSteamDatPath
com.corrodinggames.rts.gameFramework.i.c -> com.corrodinggames.rts.gameFramework.i.LegacyDisabledMod:
    java.lang.String a -> modId
    java.lang.String b -> modPath
    com.corrodinggames.rts.gameFramework.i.b c -> modInfo
    com.corrodinggames.rts.gameFramework.i.a d -> modManager
com.corrodinggames.rts.gameFramework.j.a -> com.corrodinggames.rts.gameFramework.j.ChatLog:
com.corrodinggames.rts.gameFramework.j.aa -> com.corrodinggames.rts.gameFramework.j.UpdateServerRunnable:
com.corrodinggames.rts.gameFramework.j.ab -> com.corrodinggames.rts.gameFramework.j.GetServerInfoRunnable:
    com.corrodinggames.rts.gameFramework.j.w a -> result
    java.lang.String b -> gameId
    int c -> serverCode
    java.lang.String d -> password
com.corrodinggames.rts.gameFramework.j.ac -> com.corrodinggames.rts.gameFramework.j.NetworkCallbacks:
com.corrodinggames.rts.gameFramework.j.ad -> com.corrodinggames.rts.gameFramework.j.NetworkEngine:
    com.corrodinggames.rts.gameFramework.j.a aC -> chatLog
    int ah -> lastSyncedTick
    com.corrodinggames.rts.gameFramework.j.av aI -> keepAliveTimer
    com.corrodinggames.rts.gameFramework.j.af aK -> udpDiscoveryHandler
    com.corrodinggames.rts.gameFramework.j.c aL -> localConnection
    com.corrodinggames.rts.gameFramework.j.ak am -> stateChecksum
    java.util.concurrent.ConcurrentLinkedQueue aM -> sendQueue
    java.util.concurrent.ConcurrentLinkedQueue aN -> recvQueue
    java.lang.String aR -> sessionToken
    boolean aW -> gameHasBeenStarted
    com.corrodinggames.rts.gameFramework.j.ah ay -> roomSettings
    com.corrodinggames.rts.gameFramework.j.ae bE -> passwordHandler
    com.corrodinggames.rts.gameFramework.j.an bF -> socketConnector
    java.lang.String bh -> masterServerErrorMessage
    java.util.concurrent.ConcurrentLinkedQueue bi -> discoveredServerList
    float bI -> currentStepRate
    long bs -> totalBytesSent
    long bt -> totalBytesReceived
    java.net.Socket bv -> socket
    java.lang.String bw -> serverAddress
    boolean C -> isServer
    com.corrodinggames.rts.gameFramework.j.ac d -> callbacks
    boolean H -> isProxyController
    java.util.ArrayList M -> banList
    int t -> udpPort
    long w -> nextUnitId
    java.lang.String y -> playerName
    com.corrodinggames.rts.game.n z -> localPlayerTeam
    void a() -> readSyncHeader
    void a(float,java.lang.String) -> applyChangedSetup
    void a(com.corrodinggames.rts.gameFramework.j.as) -> getFogModeString
    com.corrodinggames.rts.gameFramework.j.aj a(com.corrodinggames.rts.gameFramework.j.c) -> setCurrentStepRate
    boolean a(com.corrodinggames.rts.gameFramework.j.c,java.lang.String,int) -> writeSyncHeader
    java.lang.String a(java.lang.String) -> applyAIDifficultyOverride
    void A() -> setPlayerName
    void b() -> applyProxyControl
    boolean b(com.corrodinggames.rts.game.n) -> getAIDifficultyString
    int B() -> updatePlayerTeamNameForAI
    float c() -> getDifficultyString
    int C() -> getCurrentStepRate
    int D() -> resetSyncState
    int E() -> getChangeableRoomSettings
    void F() -> updateAIDifficulty
    void G() -> getFogDescription
    void Y() -> getNextUnitId
com.corrodinggames.rts.gameFramework.j.ae -> com.corrodinggames.rts.gameFramework.j.PasswordHandler:
com.corrodinggames.rts.gameFramework.j.af -> com.corrodinggames.rts.gameFramework.j.UdpDiscoveryHandler:
com.corrodinggames.rts.gameFramework.j.ag -> com.corrodinggames.rts.gameFramework.j.NetworkException:
com.corrodinggames.rts.gameFramework.j.ah -> com.corrodinggames.rts.gameFramework.j.GameRoomSettings:
com.corrodinggames.rts.gameFramework.j.ai -> com.corrodinggames.rts.gameFramework.j.GameModeType:
com.corrodinggames.rts.gameFramework.j.aj -> com.corrodinggames.rts.gameFramework.j.BanEntry:
com.corrodinggames.rts.gameFramework.j.ak -> com.corrodinggames.rts.gameFramework.j.GameStateChecksum:
com.corrodinggames.rts.gameFramework.j.al -> com.corrodinggames.rts.gameFramework.j.ChecksumField:
com.corrodinggames.rts.gameFramework.j.am -> com.corrodinggames.rts.gameFramework.j.TeamLayoutType:
com.corrodinggames.rts.gameFramework.j.an -> com.corrodinggames.rts.gameFramework.j.SocketConnector:
    java.lang.String a -> serverAddress
    boolean b -> useUdp
    boolean c -> isConnecting
    java.lang.Thread d -> connectThread
    java.lang.String e -> errorMessage
    java.lang.Runnable f -> onCompleteCallback
    java.net.Socket g -> connectedSocket
    boolean h -> cancelRequested
com.corrodinggames.rts.gameFramework.j.ao -> com.corrodinggames.rts.gameFramework.j.ConnectionAcceptor:
com.corrodinggames.rts.gameFramework.j.ap -> com.corrodinggames.rts.gameFramework.j.ConnectionAttemptTracker:
com.corrodinggames.rts.gameFramework.j.aq -> com.corrodinggames.rts.gameFramework.j.MasterServerAuth:
    com.corrodinggames.rts.gameFramework.j.aq a -> instance
    int b -> saltA
    int c -> saltB
    int d -> saltC
    int e -> saltD
    int f -> authTokenLength
    java.lang.String g -> secretA
    java.lang.String h -> secretB
    int i -> minClientVersion
    int j -> minServerVersion
    int k -> handshakeTimeoutSec
    boolean l -> debugEnabled
    float a(float,float,float) -> lerp
    void a(com.corrodinggames.rts.gameFramework.j.c) -> applyHandshakeTimeoutFlag
    void a(java.lang.String,java.util.List) -> addAuthParams
    void b(java.lang.String,java.util.List) -> addTokenHashParam
    void c(java.lang.String,java.util.List) -> addOptionalTokenHashParam
com.corrodinggames.rts.gameFramework.j.ar -> com.corrodinggames.rts.gameFramework.j.PlatformHelper:
com.corrodinggames.rts.gameFramework.j.as -> com.corrodinggames.rts.gameFramework.j.GameOutputStream:
    java.io.DataOutputStream a -> currentOut
    java.io.ByteArrayOutputStream b -> rootBuffer
    java.io.DataOutputStream c -> rootOut
    int d -> maxBufferSize
    java.util.LinkedList e -> blockStack
    void a() -> flushAllBuffers
    void a(byte[]) -> writeBytesWithLength
    void a(double) -> writeDouble
    void a(float) -> writeFloat
    void a(int) -> writeInt
    com.corrodinggames.rts.gameFramework.j.au a(int,int) -> writeBytesWithLength
    void a(long) -> writeLong
    void a(android.graphics.PointF) -> writePointFNullable
    void a(com.corrodinggames.rts.game.n) -> writeTeamIdByte
    void a(com.corrodinggames.rts.game.units.am) -> writeUnitIdOrNullBaseUnit
    void a(com.corrodinggames.rts.game.units.as) -> writeUnitTypeId
    void a(com.corrodinggames.rts.game.units.custom.g) -> writeAnimationTag
    void a(com.corrodinggames.rts.game.units.y) -> writeUnitIdOrNullUnitEntity
    void a(com.corrodinggames.rts.gameFramework.j.c) -> writeConnectionIdInt
    void a(com.corrodinggames.rts.gameFramework.j.k) -> writeGameInputStreamWithLength
    void a(com.corrodinggames.rts.gameFramework.utility.m) -> startBlockInternal
    void a(com.corrodinggames.rts.gameFramework.w) -> writeObjectIdOrMinusOne
    void a(java.io.ByteArrayOutputStream) -> writeByteArrayWithLength
    void a(java.io.File) -> writeStreamWithLength
    void a(java.io.InputStream,int) -> writeInputStreamWithLength
    void a(java.lang.Enum) -> writeEnumOrdinalOrMinusOne
    void a(java.lang.Integer) -> writeIntNullable
    void a(java.lang.String) -> endBlock
    void a(java.lang.String,boolean) -> beginBlockInternal
    void a(short) -> writeShort
    void a(boolean) -> writeBoolean
    void b() -> useMainStream
    void b(byte[]) -> writeBytesRaw
    com.corrodinggames.rts.gameFramework.j.au b(int) -> buildPacketData
    void b(com.corrodinggames.rts.game.units.am) -> writeUnitIdIfAlive
    void b(com.corrodinggames.rts.gameFramework.w) -> writeExistingObjectIdOrMinusOne
    void b(java.lang.String) -> writeStringNullable
    java.lang.String c() -> getBufferAsString
    void c(int) -> writeByte
    void c(java.lang.String) -> writeStringUTF
    byte[] d() -> toByteArray
    void d(java.lang.String) -> debugPlaceholder
    void e() -> writeMagicShort
    void e(java.lang.String) -> startBlock
    boolean f() -> isCompressionEnabled
    int g() -> getMaxSize
    void h() -> close
com.corrodinggames.rts.gameFramework.j.at -> com.corrodinggames.rts.gameFramework.j.StreamBlock:
    java.util.zip.GZIPOutputStream a -> gzipStream
    java.io.BufferedOutputStream b -> bufferedStream
    java.lang.String c -> blockName
    java.io.ByteArrayOutputStream d -> buffer
    java.io.DataOutputStream e -> dataOut
    boolean f -> deferClose
    void a() -> flush
    void b() -> close
com.corrodinggames.rts.gameFramework.j.au -> com.corrodinggames.rts.gameFramework.j.PacketData:
    com.corrodinggames.rts.gameFramework.j.c a -> networkConnection
    int b -> typeId
    byte[] c -> data
    int d -> sendDelayMs
    boolean e -> urgent
com.corrodinggames.rts.gameFramework.j.av -> com.corrodinggames.rts.gameFramework.j.KeepAliveTimer:
com.corrodinggames.rts.gameFramework.j.aw -> com.corrodinggames.rts.gameFramework.j.DebugOutputStream:
    java.io.ByteArrayOutputStream a -> buffer
    java.io.PrintStream e -> mainPrintStream
    java.io.PrintStream f -> activePrintStream
    java.util.LinkedList g -> blockStack
com.corrodinggames.rts.gameFramework.j.ax -> com.corrodinggames.rts.gameFramework.j.BlockOutputStream:
    java.io.BufferedOutputStream a -> bufferedStream
    java.lang.String b -> blockName
    java.io.ByteArrayOutputStream c -> buffer
    java.io.PrintStream d -> printStream
    boolean e -> deferClose
com.corrodinggames.rts.gameFramework.j.ay -> com.corrodinggames.rts.gameFramework.j.SplitPacketData:
    com.corrodinggames.rts.gameFramework.j.au f -> originalPacket
    int g -> steamChannelId
com.corrodinggames.rts.gameFramework.j.b -> com.corrodinggames.rts.gameFramework.j.ChatMessage:
com.corrodinggames.rts.gameFramework.j.c -> com.corrodinggames.rts.gameFramework.j.NetworkConnection:
    boolean a -> disconnecting
    boolean b -> localDisconnectRequested
    int c -> connectionId
    java.net.Socket d -> socket
    java.net.InetAddress e -> inetAddress
    java.util.concurrent.ConcurrentLinkedQueue f -> outgoingPackets
    com.corrodinggames.rts.gameFramework.j.d F -> receiveWorker
    com.corrodinggames.rts.gameFramework.j.e G -> sendWorker
    java.lang.Thread H -> receiveThread
    java.lang.Thread I -> sendThread
    com.corrodinggames.rts.gameFramework.j.c j -> relayConnection
    boolean J -> inputClosed
    boolean K -> outputClosed
    com.corrodinggames.rts.gameFramework.j.au l -> lastPacket
    int M -> sessionRandomId
    java.lang.String n -> forwardedIpAddress
    boolean p -> allowLargeIncomingPackets
    int P -> bytesReadIterations
    boolean q -> trackLastPacket
    boolean r -> optimizeSplitContinuation
    int R -> commandCounter
    boolean s -> isRelayServer
    long S -> commandWindowStartMs
    boolean t -> isRelayLinked
    boolean T -> commandLimitReached
    boolean u -> isDirectClient
    int U -> bytesReadTotalCurrentPacket
    boolean v -> isDirectServer
    int V -> bytesReadSoFar
    boolean w -> isForwarded
    com.corrodinggames.rts.gameFramework.j.ad W -> networkEngine
    com.corrodinggames.rts.game.e z -> player
    boolean a() -> disconnectWithMessage
    void a(com.corrodinggames.rts.gameFramework.j.au) -> enqueuePacket
    void a(java.lang.String) -> handleRemoteDisconnect
    void a(java.lang.String,java.lang.Throwable) -> logErrorWithException
    void a(boolean,boolean) -> handleTimeoutDisconnect
    void a(boolean,boolean,java.lang.String) -> sendPacket
    int b() -> logDebug
    void b(java.lang.String) -> getRecentPingMs
    int c() -> getPlayerTeamId
    void c(java.lang.String) -> logInfo
    void d() -> startWorkers
    java.lang.String d(java.lang.String) -> formatLogPrefix
    java.lang.String e() -> getPlayerDisplayName
    java.lang.String f() -> getIpAddress
    java.lang.String g() -> getDisplayIpAddress
    boolean h() -> isConnected
    void i() -> performDisconnectCleanup
    void j() -> requestLocalDisconnect
com.corrodinggames.rts.gameFramework.j.d -> com.corrodinggames.rts.gameFramework.j.ReceiveWorker:
    java.lang.Boolean a -> running
    com.corrodinggames.rts.gameFramework.j.c b -> networkConnection
    void a() -> readPacketsLoop
    void run() -> runReceiveLoop
com.corrodinggames.rts.gameFramework.j.e -> com.corrodinggames.rts.gameFramework.j.SendWorker:
    java.lang.Boolean a -> running
    java.io.OutputStream b -> outputStream
    java.io.BufferedOutputStream c -> bufferedOutputStream
    java.io.DataOutputStream d -> dataOutputStream
    com.corrodinggames.rts.gameFramework.utility.w e -> scratchBuffer
    com.corrodinggames.rts.gameFramework.j.c f -> networkConnection
    void a() -> notifySendLoop
    void a(com.corrodinggames.rts.gameFramework.j.au) -> enqueueOutgoingPacket
    void b() -> waitForPackets
com.corrodinggames.rts.gameFramework.j.f -> com.corrodinggames.rts.gameFramework.j.C5273f:
com.corrodinggames.rts.gameFramework.j.g -> com.corrodinggames.rts.gameFramework.j.ServerInfo:
    boolean a -> isLanServer
    int A -> gameVersionNumber
    java.lang.String b -> serverId
    java.lang.String c -> publicHost
    java.lang.String d -> lanHost
    java.lang.String e -> serverUrl
    java.lang.String f -> serverMessage
    int g -> port
    boolean h -> isPortOpen
    long i -> lastUpdateTimeMs
    java.lang.String j -> gameVersionCodeText
    java.lang.String k -> gameVersionString
    int l -> gameVersionCode
    boolean m -> requiresPassword
    java.lang.String n -> createdBy
    long o -> firstSeenTimeMs
    int p -> lastSeenSequence
    java.lang.String q -> mapPath
    java.lang.String r -> gameMode
    java.lang.String s -> gameState
    java.lang.String t -> currentPlayersText
    java.lang.String u -> maxPlayersText
    int v -> currentPlayers
    int w -> maxPlayers
    boolean x -> isDedicatedServer
    boolean y -> hasMods
    java.lang.String z -> modsRequired
    boolean a() -> isCurrentServer
    java.lang.String b() -> getInfoText
    java.lang.String c() -> getUrl
    boolean d() -> hasUrl
    java.lang.String e() -> getConnectDescriptor
    java.lang.String f() -> getLanAddress
    boolean g() -> isVersionCompatible
com.corrodinggames.rts.gameFramework.j.h -> com.corrodinggames.rts.gameFramework.j.SteamSocket:
    com.corrodinggames.rts.gameFramework.j.c a -> networkConnection
    int b -> steamChannelId
    boolean c -> closed
    com.corrodinggames.rts.gameFramework.j.i d -> inputStream
    com.corrodinggames.rts.gameFramework.j.j e -> outputStream
    void a(com.corrodinggames.rts.gameFramework.j.au) -> sendPacket
com.corrodinggames.rts.gameFramework.j.i -> com.corrodinggames.rts.gameFramework.j.SteamInputStream:
    java.util.concurrent.LinkedBlockingDeque a -> incomingQueue
    boolean b -> firstPacketLogged
    byte[] c -> singleByteBuffer
    com.corrodinggames.rts.gameFramework.j.h d -> steamSocket
    void a(byte[]) -> enqueuePacket
com.corrodinggames.rts.gameFramework.j.j -> com.corrodinggames.rts.gameFramework.j.SteamOutputStream:
    boolean a -> logSlowWrite
    com.corrodinggames.rts.gameFramework.j.h b -> steamSocket
com.corrodinggames.rts.gameFramework.j.k -> com.corrodinggames.rts.gameFramework.j.GameInputStream:
    java.io.ByteArrayInputStream a -> byteInputStream
    int b -> protocolVersion
    int c -> maxBlockSize
    int d -> bytesRead
    java.io.DataInputStream e -> rootDataInputStream
    java.io.DataInputStream f -> activeDataInputStream
    java.util.LinkedList g -> blockStack
    void a() -> useMainStream
    void a(int) -> setProtocolVersion
    com.corrodinggames.rts.game.units.am a(com.corrodinggames.rts.gameFramework.j.m) -> startBlockNamed
    void a(com.corrodinggames.rts.gameFramework.utility.m,java.lang.Class) -> assertMagicShort
    com.corrodinggames.rts.gameFramework.w a(java.lang.Class) -> readBaseUnitWithStatus
    int b() -> getProtocolVersion
    void b(int) -> setMaxBlockSize
    java.lang.Enum b(java.lang.Class) -> readEnumOrdinalOrNull
    void b(java.lang.String) -> startBlockNamed
    int c() -> getMaxBlockSize
    byte d() -> readByte
    boolean e() -> readBoolean
    int f() -> readInt
    float g() -> readFloat
    double h() -> readDouble
    long i() -> readLong
    java.lang.String j() -> readNullableString
    java.lang.Integer k() -> readNullableInt
    java.lang.String l() -> readUTF
    com.corrodinggames.rts.game.units.custom.g m() -> readAnimationTag
    long n() -> readLongOptional
    com.corrodinggames.rts.game.units.am o() -> readBaseUnit
    com.corrodinggames.rts.game.units.y p() -> readUnitEntity
    com.corrodinggames.rts.game.n r() -> readRequiredPlayerTeam
    com.corrodinggames.rts.game.n s() -> readOptionalPlayerTeam
    byte[] t() -> readBytesWithLength
    com.corrodinggames.rts.gameFramework.j.k u() -> readNestedStream
    short v() -> readShortValue
    java.io.InputStream w() -> getActiveInputStream
    java.lang.String x() -> startBlockAndGetName
com.corrodinggames.rts.gameFramework.j.l -> com.corrodinggames.rts.gameFramework.j.BlockInput:
    java.lang.String a -> blockName
    java.io.ByteArrayInputStream b -> byteInputStream
    java.io.DataInputStream c -> dataInputStream
com.corrodinggames.rts.gameFramework.j.m -> com.corrodinggames.rts.gameFramework.j.ConnectionStatus:
    com.corrodinggames.rts.gameFramework.j.m a -> EXPECTED
    com.corrodinggames.rts.gameFramework.j.m b -> WARN
com.corrodinggames.rts.gameFramework.j.n -> com.corrodinggames.rts.gameFramework.j.MasterServerClient:
    boolean a -> ENABLE_STATUS_LOGGING
    boolean b -> ENABLE_CONSOLE_LOGGING
    java.lang.String[] c -> MASTER_SERVER_URLS
    com.corrodinggames.rts.gameFramework.j.r d -> httpClientManager
    int e -> serverListSequence
    java.lang.Object f -> serverListLock
    java.lang.String g -> lastMasterServerResponseLog
    void a() -> getOwnInfoFromMasterServerAsync
    java.lang.String a(byte[]) -> extractFirstLine
    java.lang.String a(int) -> formatServerCode
    void a(int,int) -> removeStaleServers
    void a(com.corrodinggames.rts.gameFramework.j.w,java.lang.String,int,java.lang.String) -> getGameServerInfoFromMasterServerAsync
    void a(java.lang.Runnable) -> loadServerListAsync
    void a(java.lang.String) -> logInfo
    void a(java.lang.String,java.lang.String) -> sendErrorReportAsync
    java.io.BufferedReader a(java.util.List) -> requestMasterServerResponse
    java.io.BufferedReader a(java.util.List,int) -> requestMasterServerResponseWithTimeout
    java.lang.String a(java.util.List,java.lang.String) -> getParam
    void a(java.util.List,java.lang.String,java.lang.String) -> addParam
    com.corrodinggames.rts.gameFramework.j.t a(java.util.List,java.lang.String,boolean) -> doSingleRequest
    java.io.BufferedReader a(java.util.List,boolean,java.lang.String[],int,boolean) -> requestFromMasterServers
    void a(java.util.List,boolean,com.corrodinggames.rts.gameFramework.j.s) -> startParallelRequests
    void a(java.util.List,boolean,com.corrodinggames.rts.gameFramework.j.s,java.lang.String[]) -> startParallelRequestsAcrossUrls
    void b() -> createServerAsync
    com.corrodinggames.rts.gameFramework.j.g b(java.lang.String) -> findServerById
    void b(java.util.List) -> addServerStatusParams
    void c() -> updateServerAsync
    com.corrodinggames.rts.gameFramework.j.g c(java.lang.String) -> findOrCreateServerById
    void d() -> removeServerAsync
com.corrodinggames.rts.gameFramework.j.o -> com.corrodinggames.rts.gameFramework.j.ServerTimeoutTask:
    int a -> timeoutSeconds
com.corrodinggames.rts.gameFramework.j.p -> com.corrodinggames.rts.gameFramework.j.GetOwnInfoRunnable:
com.corrodinggames.rts.gameFramework.j.q -> com.corrodinggames.rts.gameFramework.j.MasterServerListParser:
    java.lang.Runnable a -> completionCallback
com.corrodinggames.rts.gameFramework.j.r -> com.corrodinggames.rts.gameFramework.j.HttpClientManager:
    java.util.concurrent.locks.ReentrantLock a -> clientLock
    org.apache.http.client.HttpClient a() -> getAndroidHttpClient
    org.apache.http.client.HttpClient a(int,boolean) -> getNewHttpClient
    void a(org.apache.http.client.HttpClient) -> closeIfAndroidClient
    org.apache.http.client.HttpClient b() -> getDefaultHttpClient
com.corrodinggames.rts.gameFramework.j.s -> com.corrodinggames.rts.gameFramework.j.ServerResponseHandler:
    java.lang.String d -> errorOrResponseText
    boolean e -> parsedSuccessfully
    int f -> pendingRequests
    void a() -> onComplete
    void a(java.io.BufferedReader,int,java.lang.String) -> handleServerListResponse
com.corrodinggames.rts.gameFramework.j.t -> com.corrodinggames.rts.gameFramework.j.HttpResponseData:
    java.io.BufferedReader a -> bufferedReader
    boolean b -> isValidResponse
    boolean c -> hasErrorMessage
com.corrodinggames.rts.gameFramework.j.u -> com.corrodinggames.rts.gameFramework.j.MasterServerRequestTask:
    int a -> requestIndex
    java.util.List b -> params
    com.corrodinggames.rts.gameFramework.j.s c -> responseHandler
    java.lang.String d -> baseUrl
    boolean e -> usePost
com.corrodinggames.rts.gameFramework.j.v -> com.corrodinggames.rts.gameFramework.j.ErrorReportSender:
    java.lang.String a -> message
    java.lang.String b -> stacktrace
com.corrodinggames.rts.gameFramework.j.w -> com.corrodinggames.rts.gameFramework.j.ConnectionResult:
    java.lang.String a -> resolvedAddress
    java.lang.String b -> errorMessage
    com.corrodinggames.rts.gameFramework.j.x c -> errorType
    void a(java.lang.String) -> setResolvedAddress
    void a(java.lang.String,com.corrodinggames.rts.gameFramework.j.x,java.lang.Exception) -> setError
com.corrodinggames.rts.gameFramework.j.x -> com.corrodinggames.rts.gameFramework.j.ConnectionErrorType:
    com.corrodinggames.rts.gameFramework.j.x a -> WRONG_PASSWORD
    com.corrodinggames.rts.gameFramework.j.x b -> UNKNOWN_ERROR
com.corrodinggames.rts.gameFramework.j.y -> com.corrodinggames.rts.gameFramework.j.CreateServerRunnable:
com.corrodinggames.rts.gameFramework.j.z -> com.corrodinggames.rts.gameFramework.j.RemoveServerRunnable:
com.corrodinggames.rts.gameFramework.l -> com.corrodinggames.rts.gameFramework.GameEngine:
    java.lang.Runnable a -> showToastRunnable
    boolean aA -> isPausedStatic
    boolean aB -> isNetworkServerStatic
    boolean aC -> isDemoVersionStatic
    boolean aD -> isGameStartedStatic
    boolean aE -> isGamePausedStatic
    boolean aF -> isGameMinimizedStatic
    boolean aG -> isGamePausedOrMinimizedStatic
    boolean aH -> isNetworkGameActiveStatic
    boolean aI -> isNetworkConnectedStatic
    java.lang.Object aj -> gameLoopLock
    boolean aJ -> isInGameOrLobbyStatic
    java.lang.Object ak -> gameLoopLock2
    java.lang.String aK -> buildVersion
    com.corrodinggames.rts.gameFramework.l al -> instance
    boolean aL -> isGameThreadRunningStatic
    android.content.Context am -> saveGameName
    boolean aM -> isGamePausedStatic2
    android.content.Context an -> context
    boolean aN -> isGameMinimizedStatic2
    com.corrodinggames.rts.appFramework.f ao -> activity
    boolean aO -> isGamePausedOrMinimizedStatic2
    com.corrodinggames.rts.appFramework.f ap -> activity2
    boolean aP -> isNetworkGameActiveStatic2
    boolean aq -> gameStarted
    java.lang.String aQ -> platformName
    boolean ar -> isGamePaused
    boolean aR -> isNetworkConnectedStatic2
    boolean as -> isGameBetaStatic
    boolean aS -> isInGameOrLobby
    boolean at -> isSandboxModeStatic
    boolean aT -> isNetworkServerStatic2
    boolean au -> isDebugVersionStatic
    boolean aU -> isPausedStatic2
    java.lang.Throwable av -> lastThrowable
    boolean aV -> isDesktopVersionStatic2
    boolean aw -> isIOSVersionStatic
    boolean aW -> isAndroidVersionStatic2
    boolean ax -> isPCVersionStatic
    boolean aX -> isIOSVersionStatic2
    boolean ay -> isAndroidVersionStatic
    boolean aY -> isPCVersionStatic2
    boolean az -> isDesktopVersionStatic
    boolean aZ -> isDebugVersionStatic2
    java.lang.Runnable b -> showDialogRunnable
    java.lang.String ba -> androidVersion
    int bA -> lastTickTime
    boolean bb -> isSandboxModeStatic2
    int bB -> currentTimeMillis
    boolean bc -> isGameBetaStatic2
    int bC -> lastTimeMillis
    boolean bd -> isDemoVersionStatic2
    boolean bD -> isGamePausedOrMinimized2
    boolean be -> isGameStartedStatic2
    boolean bE -> isBenchmarking
    boolean bf -> isGamePausedStatic3
    boolean bF -> exitGameThread
    java.lang.Class bg -> gameEngineClass
    boolean bG -> loadNewGame
    com.corrodinggames.rts.gameFramework.m.y bh -> graphicsEngine
    boolean bH -> reloadMap
    boolean bi -> isGameModePaused
    boolean bI -> fullReload
    boolean bj -> isGameMinimized
    int bJ -> unitLimit
    boolean bk -> isGamePausedOrMinimized
    com.corrodinggames.rts.gameFramework.utility.i bK -> assetIndex
    boolean bl -> isNetworkGameActive
    com.corrodinggames.rts.game.b.b bL -> buildingCount
    boolean bm -> isNetworkConnected
    com.corrodinggames.rts.gameFramework.a.e bM -> buildingLimit
    boolean bn -> isNetworkServer
    com.corrodinggames.rts.gameFramework.am bN -> musicManager
    boolean bo -> isServer
    com.corrodinggames.rts.gameFramework.m.y bO -> graphicsEngine2
    boolean bp -> isShowingDialog
    com.corrodinggames.rts.gameFramework.a bP -> gameRenderer
    boolean bq -> isLoading
    com.corrodinggames.rts.gameFramework.SettingsEngine bQ -> settingsEngine
    boolean br -> isSaving
    com.corrodinggames.rts.gameFramework.d.c bR -> gameCache
    com.corrodinggames.rts.game.n bs -> playerTeam
    com.corrodinggames.rts.gameFramework.f.g bS -> gameUI
    float bt -> gameSpeed
    com.corrodinggames.rts.gameFramework.ac bT -> gameAI
    float bu -> gameSpeedMultiplier
    com.corrodinggames.rts.gameFramework.k.l bU -> pathfindingEngine
    boolean bv -> isGameStarted
    com.corrodinggames.rts.gameFramework.aa bV -> gameEffects
    boolean bw -> isGameThreadRunning
    com.corrodinggames.rts.gameFramework.f.o bW -> gameInterface
    int bx -> currentTick
    com.corrodinggames.rts.gameFramework.j.ad bX -> networkEngine
    int by -> lastTick
    com.corrodinggames.rts.gameFramework.bg bY -> gameStatistics
    int bz -> tickDelta
    com.corrodinggames.rts.gameFramework.i.a bZ -> gameInput
    boolean[] c -> graphicsSettings
    com.corrodinggames.rts.gameFramework.y ca -> gameSound
    float cA -> screenHeight
    com.corrodinggames.rts.gameFramework.ba cb -> replayEngine
    float cB -> uiScale
    com.corrodinggames.rts.game.units.f.c cc -> unitSpatialIndex
    float cC -> zoomLevel
    com.corrodinggames.rts.gameFramework.br cd -> performanceProfiler
    float cD -> maxZoomLevel
    com.corrodinggames.rts.gameFramework.n.f ce -> missionEngine
    float cE -> minZoomLevel
    com.corrodinggames.rts.gameFramework.c cf -> commandController
    float cF -> cameraShakeX
    com.corrodinggames.rts.gameFramework.g.a cg -> gameEngineHelper
    float cG -> cameraShakeY
    boolean ch -> isGameEngineReady
    float cH -> cameraShakeIntensity
    float ci -> cameraX
    float cI -> cameraShakeDecay
    float cj -> cameraY
    float cJ -> cameraShakeTime
    android.graphics.Point ck -> screenSize
    android.graphics.Rect cK -> cameraBoundsEnabled
    float cl -> cameraZoom
    android.graphics.Rect cL -> cameraBoundsBuffer
    float cm -> targetCameraZoom
    android.graphics.RectF cM -> cameraFollowMode
    float cn -> gameEngineTimer
    android.graphics.Rect cN -> cameraFollowTarget
    float co -> cameraVelocityX
    android.graphics.RectF cO -> cameraFollowSpeed
    float cp -> cameraVelocityY
    android.graphics.RectF cP -> cameraFollowZoom
    float cq -> cameraZoomVelocity
    android.graphics.Rect cQ -> cameraSmoothing
    float cr -> cameraBoundsMinX
    boolean cR -> cameraMinZoom
    float cs -> cameraBoundsMinY
    boolean cS -> cameraMaxZoom
    boolean ct -> cameraBoundsMaxX
    float cT -> cameraZoomSpeed
    int cu -> cameraBoundsMaxY
    boolean cU -> cameraEdgeScrollSpeed
    int cv -> mapWidth
    float cV -> cameraEdgeScrollZone
    float cw -> mapHeight
    boolean cW -> cameraDragStartX
    float cx -> worldWidth
    float cX -> cameraDragStartY
    float cy -> worldHeight
    float cY -> cameraIsDragging
    float cz -> screenWidth
    boolean cZ -> cameraLastDragTime
    boolean[] d -> uiSettings
    float da -> mouseX
    float dA -> keyState
    float db -> mouseY
    boolean dB -> keyPressed
    boolean dc -> mouseScreenX
    java.util.ArrayList dC -> keyEvents
    boolean dd -> mouseScreenY
    android.os.Handler dD -> keyHandler
    boolean de -> mouseWorldX
    java.lang.String dE -> gameMode
    boolean df -> mouseWorldY
    java.lang.String dF -> gameModeString
    boolean dg -> mousePressed
    java.lang.String dG -> gameModeDescription
    float dh -> mouseRightPressed
    com.corrodinggames.rts.gameFramework.n dH -> gameModeManager
    float di -> mouseMiddlePressed
    java.lang.String dI -> gameModeConfig
    boolean dj -> mouseLastClickTime
    java.lang.Object dJ -> gameModeData
    com.corrodinggames.rts.gameFramework.z dk -> mouseClickCount
    java.lang.String dK -> gameModeVersion
    java.lang.String dl -> mouseDoubleClickTime
    java.lang.String dL -> gameModeAuthor
    com.corrodinggames.rts.gameFramework.j.k dm -> touchPoints
    boolean[] dM -> gameModeEnabled
    android.graphics.Paint dn -> touchCount
    java.util.concurrent.ConcurrentLinkedQueue dN -> gameModeOptions
    boolean dO -> isGameModeSandbox
    android.graphics.Paint dp -> touchStartTime
    byte[] dP -> gameModeFlags
    boolean dq -> isTouchDown
    byte[] dQ -> gameModeRules
    boolean dr -> isTouchMoving
    byte[] dR -> gameModeSettings
    float ds -> touchStartX
    com.corrodinggames.rts.gameFramework.utility.d dS -> gameModeUtilities
    boolean dt -> touchStartY
    boolean dT -> isGameModeBeta
    boolean du -> isPinching
    int dU -> gameModeDebug
    boolean dv -> pinchDistance
    boolean dV -> gameModeNetwork
    int dw -> lastPinchDistance
    com.corrodinggames.rts.gameFramework.u dW -> gameModeAI
    float dx -> pinchStartZoom
    boolean dX -> gameModeMultiplayer
    com.corrodinggames.rts.gameFramework.o dy -> gameEngineUtilities
    boolean dY -> gameModeSinglePlayer
    java.lang.String dz -> gameEngineVersion
    byte dZ -> gameModeDifficulty
    int e -> gameEngineFlags
    byte ea -> gameModeType
    com.corrodinggames.rts.gameFramework.q eb -> gameModeTimer
    com.corrodinggames.rts.gameFramework.q ec -> gameModeTimer2
    com.corrodinggames.rts.gameFramework.q ed -> gameModeTimer3
    boolean ee -> isGameModeActive
    boolean ef -> isGameModeLocked
    java.lang.String eg -> gameModeName
    boolean eh -> isCustomGameMode
    boolean ei -> isGameModeExperimental
    int ej -> gameModeCounter
    boolean a() -> createInstance
    void a(float,float) -> getKeyCode
    boolean a(float,float,float) -> handleNetworkPacket
    void a(float,int) -> areTimesEqual
    int a(int) -> isKeyPressed
    boolean a(int,boolean) -> handleInputEvent
    boolean a(long,long) -> sendMessageToUnit
    void a(android.app.Activity,com.corrodinggames.rts.appFramework.f,boolean) -> colorizeLogMessage
    void a(android.content.Context) -> logError
    com.corrodinggames.rts.gameFramework.l a(android.content.Context,com.corrodinggames.rts.gameFramework.n) -> setCameraPosition
    void a(android.graphics.Paint) -> getStackTraceString
    void a(android.graphics.Paint,float) -> drawUnitOnMap
    void a(com.corrodinggames.rts.game.units.am,float) -> updateUnitPosition
    void a(com.corrodinggames.rts.gameFramework.g.f,com.corrodinggames.rts.gameFramework.g.c) -> setupTeamStats
    void a(com.corrodinggames.rts.gameFramework.u,java.lang.Throwable) -> runOnGameThread
    void a(java.lang.Runnable) -> isPositionInBounds
    void a(java.lang.String) -> setTeamChat
    void a(java.lang.String,int) -> runOnMainThread
    void a(java.lang.String,com.corrodinggames.rts.game.units.custom.bb) -> isPointInScreenBounds
    void a(java.lang.String,java.lang.Exception) -> setPaintColor
    java.lang.String a(java.lang.String,java.lang.String) -> setPaintAlpha
    void a(java.lang.String,java.lang.Throwable) -> setTeamChatColor
    void a(java.lang.String,boolean) -> handleNetworkCallback
    java.lang.String a(java.lang.Throwable) -> handleException
    boolean a(boolean) -> logErrorWithException
    void a(boolean,com.corrodinggames.rts.gameFramework.s) -> logErrorWithThrowable
    void a(boolean,boolean,com.corrodinggames.rts.gameFramework.s) -> logErrorMessage
    boolean A() -> isGamePaused
    boolean aa() -> isGamePausedOrMinimized
    boolean aA() -> isDemoVersion
    void ab() -> isGameMinimized
    boolean aB() -> showMainMenu
    boolean ac() -> clearGameCaches
    void aC() -> isGameStarted
    void ad() -> getContext
    android.content.Context aD() -> clearGameState
    int ae() -> pauseGame
    void aE() -> getTeamCount
    float af() -> resumeGame
    void aF() -> getUnitCount
    float ag() -> getBuildingCount
    int ah() -> getUnitLimit
    int ai() -> getBuildingLimit
    void aj() -> initializeGameEngine
    java.lang.String ak() -> getMapName
    java.lang.String al() -> getGameModeName
    java.lang.String am() -> getSaveGameName
    com.corrodinggames.rts.gameFramework.j.ai an() -> getGameMode
    java.io.File ao() -> getSaveDirectory
    void ap() -> clearSaveDirectory
    void aq() -> clearTempDirectory
    boolean ar() -> isNetworkServer
    boolean as() -> isPaused
    boolean at() -> isDesktopVersion
    boolean au() -> isAndroidVersion
    boolean av() -> isPCVersion
    boolean aw() -> isIOSVersion
    boolean ax() -> isDebugVersion
    boolean ay() -> isSandboxMode
    boolean az() -> isGameBeta
    int b() -> isDemo
    void b(float,float) -> setPaintTeamColor
    float b(int) -> drawTextWithShadow
    void b(int,int) -> logWarning
    void b(int,boolean) -> getScaledFloat
    boolean b(android.content.Context) -> centerCameraOnPosition
    void b(android.graphics.Paint,float) -> getScaledValue
    void b(java.lang.String) -> getScaledValue
    void b(java.lang.String,java.lang.String) -> setKeyState
    java.lang.String b(java.lang.Throwable) -> setGameSetting
    com.corrodinggames.rts.gameFramework.l B() -> getInstance
    boolean c() -> isCustomGameMode
    float c(int) -> getScaledValue
    boolean c(int,int) -> isAnyGraphicsSettingEnabled
    void c(android.content.Context) -> getScaledValueInt
    void c(java.lang.String) -> logError
    void c(java.lang.String,java.lang.String) -> showDialog
    void c(java.lang.Throwable) -> printStackTrace
    int c(boolean) -> isPositionValid
    boolean C() -> logInfo
    boolean d(android.content.Context) -> getTeamColor
    void d(java.lang.String) -> logWarning
    void d(java.lang.String,java.lang.String) -> setGameModeInfo
    boolean D() -> logDebug
    void e() -> convertScreenToWorldX
    int e(float) -> convertToScreenY
    void e(java.lang.String) -> logInfo
    boolean E() -> logMessage
    int f(int) -> logDebug
    void f(java.lang.String) -> convertScreenToWorldY
    void f(java.lang.String,java.lang.String) -> addUIMessage
    void F() -> logMessageWithTime
    void g() -> convertWorldToScreenX
    boolean g(int) -> disableUISetting
    void g(java.lang.String) -> getGameContext
    java.lang.String G() -> getPlatformName
    boolean h(int) -> m14572h
    void h(java.lang.String) -> convertWorldToScreenY
    java.lang.String H() -> getAndroidVersion
    boolean i(int) -> isKeyReleased
    void i(java.lang.String) -> getTeamColorShared
    boolean I() -> isGameThreadRunning
    java.lang.String j(int) -> getTeamColorAlly
    java.lang.String j(java.lang.String) -> getDirectoryFromFilePath
    void J() -> startGameThread
    void K() -> getTeamColorNeutral
    java.lang.String l() -> getTeamColorEnemy
    void L() -> stopGameThread
    java.lang.String m() -> getTeamColorPlayer
    boolean M() -> isNetworkGameActive
    boolean n() -> getTeamColorPlayerWithAlpha
    boolean N() -> isNetworkConnected
    boolean o(java.lang.String) -> getTeamColorPlayerWithAlpha2
    boolean O() -> isInGameOrLobby
    boolean p() -> getTeamColorPlayerWithAlpha3
    void p(java.lang.String) -> canStartNewGame
    boolean P() -> canStartNewGame
    void Q() -> clampCameraPosition
    java.lang.String r() -> getTeamColorPlayerWithAlpha5
    void R() -> applyZoomTransform
    void s() -> getTeamColorPlayerWithAlpha6
    void S() -> restoreZoomTransform
    java.lang.String t() -> getTeamColorPlayerWithAlpha7
    void T() -> printStackTrace
    java.lang.String u() -> getTeamColorPlayerWithAlpha8
    java.lang.String U() -> getBuildVersion
    java.lang.String v() -> getTeamColorPlayerWithAlpha9
    long V() -> getCurrentTimeMillis
    float W() -> getGameSpeed
    void x() -> getTeamColorPlayerWithAlpha11
    void X() -> updateGameSpeed
    void Y() -> setupNewGame
    int z() -> getTeamColorPlayerWithAlpha13
    void Z() -> loadGameSettings
com.corrodinggames.rts.gameFramework.m.a -> com.corrodinggames.rts.gameFramework.m.AudioRenderer:
com.corrodinggames.rts.gameFramework.m.ae -> com.corrodinggames.rts.gameFramework.m.ShaderProgram:
com.corrodinggames.rts.gameFramework.m.af -> com.corrodinggames.rts.gameFramework.m.ShaderUniform:
com.corrodinggames.rts.gameFramework.m.e -> com.corrodinggames.rts.gameFramework.m.Texture:
com.corrodinggames.rts.gameFramework.m.h -> com.corrodinggames.rts.gameFramework.m.TeamColorTexture:
com.corrodinggames.rts.gameFramework.m.i -> com.corrodinggames.rts.gameFramework.m.TeamColorShader:
com.corrodinggames.rts.gameFramework.m.j -> com.corrodinggames.rts.gameFramework.m.CanvasGraphicsRenderer:
com.corrodinggames.rts.gameFramework.m.k -> com.corrodinggames.rts.gameFramework.m.OpenGLGraphicsRenderer:
com.corrodinggames.rts.gameFramework.m.l -> com.corrodinggames.rts.gameFramework.m.GraphicsInterface:
com.corrodinggames.rts.gameFramework.m.m -> com.corrodinggames.rts.gameFramework.m.GraphicsOperation:
com.corrodinggames.rts.gameFramework.m.n -> com.corrodinggames.rts.gameFramework.m.NullGraphicsRenderer:
com.corrodinggames.rts.gameFramework.m.o -> com.corrodinggames.rts.gameFramework.m.DeferredGraphicsInterface:
com.corrodinggames.rts.gameFramework.m.u -> com.corrodinggames.rts.gameFramework.m.AbstractGraphicsRenderer:
com.corrodinggames.rts.gameFramework.m.v -> com.corrodinggames.rts.gameFramework.m.TeamColorFilter:
com.corrodinggames.rts.gameFramework.m.w -> com.corrodinggames.rts.gameFramework.m.BlendMode:
com.corrodinggames.rts.gameFramework.m.x -> com.corrodinggames.rts.gameFramework.m.SoftwareGraphicsInterface:
com.corrodinggames.rts.gameFramework.m.y -> com.corrodinggames.rts.gameFramework.m.GraphicsEngine:
com.corrodinggames.rts.gameFramework.m.z -> com.corrodinggames.rts.gameFramework.m.NullGraphicsInterface:
com.corrodinggames.rts.gameFramework.n.f -> com.corrodinggames.rts.gameFramework.n.MissionEngine:
com.corrodinggames.rts.gameFramework.o.a -> com.corrodinggames.rts.gameFramework.o.DisabledSteamEngine:
com.corrodinggames.rts.gameFramework.SettingsEngine -> com.corrodinggames.rts.gameFramework.SettingsEngine:
    boolean allowGameRecording -> isGameRecordingAllowed
    boolean batterySaving -> isBatterySavingEnabled
    boolean classicInterface -> isClassicInterfaceEnabled
    boolean disableModLazyLoad -> isModLazyLoadDisabled
    boolean displayOverCutout -> shouldDisplayOverCutout
    boolean doubleClickToAttackMove -> isDoubleClickToAttackMoveEnabled
    boolean forceEnglish -> isEnglishForced
    boolean gestureZoom -> isGestureZoomEnabled
    boolean hasPlayedGameOrSeenHelp -> hasPlayedOrSeenHelp
    boolean highGraphics -> isHighGraphicsEnabled
    boolean highRefreshRate -> isHighRefreshRateEnabled
    boolean immersiveFullScreen -> isImmersiveFullScreenEnabled
    boolean keyboardSupport -> isKeyboardSupportEnabled
    boolean liveReloading -> isLiveReloadingEnabled
    boolean loadDisabledModData -> shouldLoadDisabledModData
    boolean mouseSupport -> isMouseSupportEnabled
    boolean newRender -> isNewRenderEnabled
    boolean onscreenControls -> onScreenControls
    boolean quickRally -> isQuickRallyEnabled
    boolean renderAntiAlias -> isRenderAntiAliasEnabled
    boolean renderBackground -> shouldRenderBackground
    boolean renderClouds -> shouldRenderClouds
    boolean renderControls -> shouldRenderControls
    boolean renderDoubleScale -> isRenderDoubleScaleEnabled
    boolean renderExtraLayers -> shouldRenderExtraLayers
    boolean renderExtraShadows -> shouldRenderExtraShadows
    boolean renderFancyWater -> shouldRenderFancyWater
    boolean renderSmoothDelta -> isRenderSmoothDeltaEnabled
    boolean renderVsync -> isRenderVsyncEnabled
    boolean renderWithLineWidth -> shouldRenderWithLineWidth
    boolean replaysShowRecordedChat -> shouldReplaysShowRecordedChat
    boolean replayTracing -> isReplayTracingEnabled
    boolean resizeFontWithUIScale -> shouldResizeFontWithUIScale
    boolean saveMultiplayerReplays -> shouldSaveMultiplayerReplays
    boolean sendReports -> shouldSendReports
    boolean shaderEffects -> isShaderEffectsEnabled
    boolean showActionInfoHoverNearMouse -> shouldShowActionInfoHoverNearMouse
    boolean showChatAndPingShortcuts -> shouldShowChatAndPingShortcuts
    boolean showFps -> shouldShowFps
    boolean showHp -> shouldShowHp
    boolean showHpChanges -> shouldShowHpChanges
    boolean showMapPingsOnBattlefield -> shouldShowMapPingsOnBattlefield
    boolean showMapPingsOnMinimap -> shouldShowMapPingsOnMinimap
    boolean shownAudioWarning -> hasShownAudioWarning
    boolean showPlayerChatInGame -> shouldShowPlayerChatInGame
    boolean showSelectedUnitsList -> shouldShowSelectedUnitsList
    boolean showUnitGroups -> shouldShowUnitGroups
    boolean showUnitIcons -> shouldShowUnitIcons
    boolean showUnitWaypoints -> shouldShowUnitWaypoints
    boolean showWarLogOnScreen -> shouldShowWarLogOnScreen
    boolean showZoomButton -> shouldShowZoomButton
    boolean smartSelection_v2 -> isSmartSelectionV2Enabled
    boolean softFogFading -> isSoftFogFadingEnabled
    boolean teamShaders -> areTeamShadersEnabled
    boolean udpInMultiplayer -> isUdpInMultiplayerEnabled
    boolean unlockedScreenRotation -> isScreenRotationUnlocked
    boolean useCircleSelect -> shouldUseCircleSelect
    boolean useMinimapAllyColors -> shouldUseMinimapAllyColors
com.corrodinggames.rts.gameFramework.utility.ab -> com.corrodinggames.rts.gameFramework.utility.IniFile:
    java.lang.String a -> fileName
    boolean b -> trackReads
    java.util.LinkedHashSet c -> usedKeys
    java.util.ArrayList d -> duplicateKeys
    java.util.ArrayList e -> errors
    java.lang.String f -> path
    java.util.regex.Pattern g -> controlCharPattern
    java.util.regex.Pattern h -> sectionPattern
    java.util.regex.Pattern i -> keyValuePattern
    java.util.LinkedHashMap j -> sections
    boolean k -> strict
    void a() -> enableStrict
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean a(com.corrodinggames.rts.game.units.custom.l,java.lang.String,java.lang.String) -> getLogicBoolean
    com.corrodinggames.rts.game.units.custom.e.a a(com.corrodinggames.rts.game.units.custom.l,java.lang.String,java.lang.String,com.corrodinggames.rts.game.units.custom.e.a,boolean) -> getAttachmentData
    com.corrodinggames.rts.game.units.custom.h a(com.corrodinggames.rts.game.units.custom.l,java.lang.String,java.lang.String,com.corrodinggames.rts.game.units.custom.h) -> getAnimationSet
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean a(com.corrodinggames.rts.game.units.custom.l,java.lang.String,java.lang.String,com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean) -> getLogicBoolean
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean a(com.corrodinggames.rts.game.units.custom.l,java.lang.String,java.lang.String,com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean,com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean$ReturnType) -> getLogicBooleanWithReturnType
    com.corrodinggames.rts.game.units.custom.u a(com.corrodinggames.rts.game.units.custom.l,java.lang.String,java.lang.String,com.corrodinggames.rts.game.units.custom.u) -> getCustomUnitAction
    com.corrodinggames.rts.game.units.custom.aj a(com.corrodinggames.rts.game.units.custom.l,java.lang.String,java.lang.String,java.lang.String) -> getUnitReference
    void a(com.corrodinggames.rts.gameFramework.utility.ab) -> merge
    void a(java.io.BufferedReader) -> parse
    void a(java.io.InputStream) -> loadStream
    void a(java.lang.String) -> loadFile
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean a(java.lang.String,com.corrodinggames.rts.game.units.custom.l,java.lang.String,java.lang.String,com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean) -> getLogicBooleanBlock
    com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean a(java.lang.String,com.corrodinggames.rts.game.units.custom.l,java.lang.String,java.lang.String,com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean,com.corrodinggames.rts.game.units.custom.logicBooleans.LogicBoolean$ReturnType) -> getLogicBooleanBlockWithReturnType
    java.lang.RuntimeException a(java.lang.String,java.lang.Class) -> createEnumParseException
    java.lang.Enum a(java.lang.String,java.lang.Enum,java.lang.Class) -> parseEnum
    void a(java.lang.String,java.lang.String) -> trackRead
    double a(java.lang.String,java.lang.String,double) -> getDouble
    long a(java.lang.String,java.lang.String,long) -> getLong
    android.graphics.PointF a(java.lang.String,java.lang.String,android.graphics.PointF) -> getPointF
    android.graphics.Rect a(java.lang.String,java.lang.String,android.graphics.Rect) -> getRect
    com.corrodinggames.rts.game.units.custom.g a(java.lang.String,java.lang.String,com.corrodinggames.rts.game.units.custom.g) -> getAnimationTag
    com.corrodinggames.rts.gameFramework.utility.ai a(java.lang.String,java.lang.String,com.corrodinggames.rts.gameFramework.utility.ai) -> getResourceOrAsset
    java.lang.Boolean a(java.lang.String,java.lang.String,java.lang.Boolean) -> getBoolean
    java.lang.Enum a(java.lang.String,java.lang.String,java.lang.Enum,java.lang.Class) -> getEnum
    java.lang.Float a(java.lang.String,java.lang.String,java.lang.Float) -> getFloat
    java.lang.Float a(java.lang.String,java.lang.String,java.lang.Float,boolean) -> getFloatOrTime
    java.lang.Integer a(java.lang.String,java.lang.String,java.lang.Integer) -> getInt
    java.lang.Short a(java.lang.String,java.lang.String,java.lang.Short) -> getShort
    void a(java.lang.String,java.lang.String,java.lang.String) -> trackReadWithSource
    java.lang.Boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean) -> getBooleanFromTwoKeys
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getValueFromTwoKeys
    com.corrodinggames.rts.game.units.custom.bb a(java.lang.String,java.lang.String,java.lang.String,boolean) -> getLocaleString
    java.lang.String a(java.lang.String,java.lang.String,boolean) -> getValueOrThrow
    java.lang.String a(java.lang.String,java.lang.String,boolean,java.lang.String) -> getValueInternal
    float a(java.lang.String,boolean,java.lang.String,java.lang.String) -> parseUnitValue
    void b() -> checkForUnusedKeys
    java.lang.String b(java.lang.String) -> unescape
    java.lang.String b(java.lang.String,java.lang.String) -> getValue
    java.lang.String b(java.lang.String,java.lang.String,java.lang.String) -> getString
    int c() -> getHash
    void c(java.lang.String,java.lang.String) -> throwFailedToFind
    java.lang.String c(java.lang.String,java.lang.String,java.lang.String) -> getStringRaw
    boolean d(java.lang.String,java.lang.String) -> getBooleanStrict
    java.lang.String e(java.lang.String,java.lang.String) -> getValueStrict
    java.lang.String f(java.lang.String,java.lang.String) -> getStringRawStrict
com.corrodinggames.rts.gameFramework.utility.ad -> com.corrodinggames.rts.gameFramework.utility.ObjectPool:
    java.lang.Object[] a -> pool
    int b -> size
    boolean c -> strict
    java.lang.Object a() -> get
    boolean a(java.lang.Object) -> release
com.corrodinggames.rts.gameFramework.utility.ae -> com.corrodinggames.rts.gameFramework.utility.FileLoaderFactory:
    java.lang.Object a -> zipFileLoaderLock
    com.corrodinggames.rts.gameFramework.utility.ag b -> modFileLoader
    com.corrodinggames.rts.gameFramework.utility.af c -> zipFileLoader
    boolean a() -> isZipFSEnabled
    com.corrodinggames.rts.gameFramework.utility.af a(java.lang.String) -> getFileLoaderForPath
    void b() -> closeAll
    com.corrodinggames.rts.gameFramework.utility.af b(java.lang.String) -> getZipFileLoaderForPath
    void c(java.lang.String) -> closeModFile
com.corrodinggames.rts.gameFramework.utility.af -> com.corrodinggames.rts.gameFramework.utility.IFileLoader:
    void a() -> isDirect
    boolean a(java.lang.String) -> exists
    boolean a(java.lang.String,java.lang.String) -> getRWFile
    long a(java.lang.String,boolean) -> getSize
    java.lang.String[] b(java.lang.String) -> listDir
    com.corrodinggames.rts.gameFramework.utility.j b(java.lang.String,boolean) -> openAssetInputStream
    boolean c(java.lang.String) -> delete
    java.io.OutputStream c(java.lang.String,boolean) -> openOutputStream
    boolean d(java.lang.String) -> move
    boolean e(java.lang.String) -> createDirectory
    java.lang.String f(java.lang.String) -> getLastModified
    long g(java.lang.String) -> getFullPath
com.corrodinggames.rts.gameFramework.utility.i -> com.corrodinggames.rts.gameFramework.utility.AssetIndex:
    boolean b -> firstLoad
    java.util.ArrayList c -> assetList
    void a() -> loadIndex
    java.util.ArrayList a(android.content.res.AssetManager,java.lang.String,int) -> findIndexFiles
    boolean a(java.lang.String) -> exists
    void b() -> buildIndex
    java.lang.String[] b(java.lang.String) -> listDir
    java.util.ArrayList c() -> getAssetList
com.corrodinggames.rts.gameFramework.utility.j -> com.corrodinggames.rts.gameFramework.utility.AssetInputStream:
    java.io.InputStream a -> inputStream
    java.lang.String b -> path
    java.lang.String c -> assetPath
    boolean d -> closed
    java.lang.String e -> buildVersion
    boolean a() -> isDirect
    java.io.FileDescriptor b() -> getFileDescriptor
    long c() -> lastModified
    java.lang.String d() -> getPath
com.corrodinggames.rts.gameFramework.utility.SlickToAndroidKeycodes -> com.corrodinggames.rts.gameFramework.utility.SlickToAndroidKeycodes:
    java.util.HashMap a -> slickToAndroid
    java.util.HashMap b -> androidToSlick
    java.util.HashMap c -> androidToGdx
    java.util.HashMap d -> slickNameMap
    java.util.HashMap e -> androidNameMap
    java.util.HashMap f -> gdxNameMap
    java.util.HashMap g -> gdxToAndroid
    void a() -> getKeyCode
    java.util.HashMap a(java.lang.Class) -> createKeyNameMap
    int a(java.lang.String) -> initializeSlickToAndroidMapping
    java.util.HashMap a(java.lang.String,java.util.HashMap,java.util.HashMap) -> getKeyName
    void b() -> convertAndroidToSlick
    int b(int) -> initializeGdxToAndroidMapping
    void c() -> convertGdxToAndroid
    java.lang.Integer c(int) -> initializeAndroidToGdxMapping
com.corrodinggames.rts.gameFramework.w -> com.corrodinggames.rts.gameFramework.GameObject:
    long eh -> objectId
    float eo -> posX
    float ep -> posY
    float eq -> posZ
com.Element -> com.Element:
    java.lang.Object clone() -> m14560clone
